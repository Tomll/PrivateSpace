diff --git "a/privatespace_submit/22\347\273\231provider\346\267\273\345\212\240\345\217\257\350\242\253\350\256\277\351\227\256\346\235\203\351\231\220/yanjie7.diff" "b/privatespace_submit/22\347\273\231provider\346\267\273\345\212\240\345\217\257\350\242\253\350\256\277\351\227\256\346\235\203\351\231\220/yanjie7.diff"
new file mode 100755
index 0000000..ab98c40
--- /dev/null
+++ "b/privatespace_submit/22\347\273\231provider\346\267\273\345\212\240\345\217\257\350\242\253\350\256\277\351\227\256\346\235\203\351\231\220/yanjie7.diff"
@@ -0,0 +1,12 @@
+diff --git a/AndroidManifest.xml b/AndroidManifest.xml
+index b94a45c..86c7cee 100755
+--- a/AndroidManifest.xml
++++ b/AndroidManifest.xml
+@@ -122,6 +122,7 @@
+ 
+         <provider
+             android:name=".provider.PrivateProvider"
++            android:exported="true"
+             android:authorities="com.transage.privatespace.provider.PrivateProvider"/>
+     </application>
+ 
diff --git "a/privatespace_submit/23\344\277\256\345\244\215\346\235\245\347\224\265\345\216\273\347\224\265\346\237\245\350\257\242\345\214\271\351\205\215\351\224\231\350\257\257Bug;\344\277\256\345\244\215isCvf()\347\251\272\346\214\207\351\222\210Bug/yanjie8.diff" "b/privatespace_submit/23\344\277\256\345\244\215\346\235\245\347\224\265\345\216\273\347\224\265\346\237\245\350\257\242\345\214\271\351\205\215\351\224\231\350\257\257Bug;\344\277\256\345\244\215isCvf()\347\251\272\346\214\207\351\222\210Bug/yanjie8.diff"
new file mode 100755
index 0000000..9384bb6
--- /dev/null
+++ "b/privatespace_submit/23\344\277\256\345\244\215\346\235\245\347\224\265\345\216\273\347\224\265\346\237\245\350\257\242\345\214\271\351\205\215\351\224\231\350\257\257Bug;\344\277\256\345\244\215isCvf()\347\251\272\346\214\207\351\222\210Bug/yanjie8.diff"
@@ -0,0 +1,240 @@
+diff --git a/src/com/transage/privatespace/activity/AdvancedSetup.java b/src/com/transage/privatespace/activity/AdvancedSetup.java
+index 6120871..28c0ff9 100755
+--- a/src/com/transage/privatespace/activity/AdvancedSetup.java
++++ b/src/com/transage/privatespace/activity/AdvancedSetup.java
+@@ -2,6 +2,7 @@ package com.transage.privatespace.activity;
+ 
+ import android.app.Activity;
+ import android.content.Intent;
++import android.content.SharedPreferences;
+ import android.os.Bundle;
+ import android.support.annotation.Nullable;
+ import android.view.View;
+@@ -11,6 +12,7 @@ import android.widget.CompoundButton;
+ import android.widget.Switch;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.utils.ImportExportUtils;
+ import com.transage.privatespace.utils.Util_Often_Use;
+ 
+ import static com.transage.privatespace.activity.Login.ChangePrivateMarkFromAdvancedSetup;
+@@ -20,6 +22,8 @@ import static com.transage.privatespace.activity.Login.ChangePrivateMarkFromAdva
+  */
+ public class AdvancedSetup extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener {
+ 
++    private SharedPreferences mVcfSP;
++
+     @Override
+     protected void onCreate(@Nullable Bundle savedInstanceState) {
+         super.onCreate(savedInstanceState);
+@@ -27,7 +31,9 @@ public class AdvancedSetup extends Activity implements View.OnClickListener, Com
+         requestWindowFeature(Window.FEATURE_NO_TITLE);//隐藏TitleBar
+         getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);//透明状态栏
+         setContentView(R.layout.activity_advance_setup);
+-
++        if (mVcfSP == null){
++            mVcfSP = getSharedPreferences(ImportExportUtils.SHARE_SAVEVCF, MODE_PRIVATE);
++        }
+         initView();
+     }
+ 
+@@ -66,11 +72,8 @@ public class AdvancedSetup extends Activity implements View.OnClickListener, Com
+         } else {
+             aSwitch4.setChecked(false);
+         }
+-        if (Login.sp.getBoolean("saveVcf", false)) {
+-            switchSaveVcf.setChecked(true);
+-        } else {
+-            switchSaveVcf.setChecked(false);
+-        }
++        
++        switchSaveVcf.setChecked(ImportExportUtils.isVcf(this));
+     }
+ 
+     // switch的CheckedChanged监听
+@@ -109,13 +112,10 @@ public class AdvancedSetup extends Activity implements View.OnClickListener, Com
+                 }
+                 Login.editor.commit();
+                 break;
+-            case R.id.switch_save_by_cvf: // 隐藏桌面图标 开关
+-                if (isChecked) {
+-                    Login.editor.putBoolean("saveVcf", true);
+-                } else {
+-                    Login.editor.putBoolean("saveVcf", false);
+-                }
+-                Login.editor.commit();
++            case R.id.switch_save_by_cvf: // 是否保存cvf 开关
++                SharedPreferences.Editor edit = mVcfSP.edit();
++                edit.putBoolean(ImportExportUtils.KEY_SHARE_SAVEVCF, isChecked);
++                edit.commit();
+                 break;
+         }
+ 
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index 88c80de..cab7681 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -103,7 +103,8 @@ public class DatabaseAdapter {
+         ContentValues values = new ContentValues();
+         values.put(PsDatabaseHelper.ContactsColumns.RAWCONTACT_ID, people.getRawContactId());
+         values.put(PsDatabaseHelper.ContactsColumns.CONTACT_NAME, people.getDisplayName());
+-        values.put(PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER, people.getPhoneNum());
++        values.put(PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER, people.getPhoneNum()
++                .replaceAll(" ", "").replaceAll("-", "").trim());
+         insert(PsDatabaseHelper.Tables.CONTACTS, null, values);
+     }
+ 
+@@ -165,6 +166,7 @@ public class DatabaseAdapter {
+                     people.setRawContactId(cursor.getInt(1));
+                     people.setDisplayName(cursor.getString(2));
+                     people.setPhoneNum(cursor.getString(3));
++                    Log.i(TAG, "[getContacts] people.toString = " + people.toString());
+                     list.add(people);
+                 }
+             } catch (Exception e) {
+@@ -194,7 +196,7 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER + " FROM " +
+                 PsDatabaseHelper.Tables.CONTACTS + " WHERE " +
+                 selection;
+-        return query(sql, selectionArgs);
++        return query(sql, new String[]{selectionArgs[0].replaceAll(" ", "").replaceAll("-", "").trim()});
+     }
+ 
+     public Cursor getContactCursor(String selection, String[] selectionArgs, boolean isVcf) {
+@@ -213,7 +215,8 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER};
+         MatrixCursor cursor = new MatrixCursor(columnNames);
+         for (People people : contacts) {
+-            if (people.getPhoneNum().replace(" ", "").trim().equals(arg.replace(" ", "").trim())){
++            if (people.getPhoneNum().replaceAll(" ", "").replaceAll("-", "").trim()
++                    .equals(arg.replaceAll(" ", "").replaceAll("-", "").trim())){
+                 Log.e(TAG, "getCursorByPeoples: arg = " + arg);
+                 cursor.addRow(people.getColumnData());
+             }
+@@ -323,7 +326,8 @@ public class DatabaseAdapter {
+     }
+ 
+     public void deleteCallRecordByNum(String number) {
+-        delete(PsDatabaseHelper.Tables.CALLRECORD, PsDatabaseHelper.CallRecordClumns.NUMBER + "=?", new String[]{number.replaceAll(" ", "").trim()});
++        delete(PsDatabaseHelper.Tables.CALLRECORD, PsDatabaseHelper.CallRecordClumns.NUMBER + "=?",
++                new String[]{number.replaceAll(" ", "").replaceAll("-", "").trim()});
+     }
+ 
+     public List<CallRecord> getCallRecordsByNum(String phone) {
+@@ -338,7 +342,7 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.CallRecordClumns.NUMBER + "=?";
+         Log.i(TAG, "sql = " + sql);
+         List<CallRecord> list = new ArrayList<>();
+-        Cursor cursor = query(sql, new String[]{phone.replaceAll(" ", "").trim()});
++        Cursor cursor = query(sql, new String[]{phone.replaceAll(" ", "").replaceAll("-", "").trim()});
+         try {
+             if (cursor.moveToFirst()) {
+                 do {
+diff --git a/src/com/transage/privatespace/fragment/FG_PrivatePeople.java b/src/com/transage/privatespace/fragment/FG_PrivatePeople.java
+index 2bfbd96..8dbfc14 100755
+--- a/src/com/transage/privatespace/fragment/FG_PrivatePeople.java
++++ b/src/com/transage/privatespace/fragment/FG_PrivatePeople.java
+@@ -120,7 +120,7 @@ public class FG_PrivatePeople extends BaseFragment implements AdapterView.OnItem
+     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+     private void initData() {
+         listPrivatePeople.clear();// 先清空,避免数据积累
+-        listPrivatePeople.addAll(mDb.getContacts(ImportExportUtils.isVcf()));
++        listPrivatePeople.addAll(mDb.getContacts(ImportExportUtils.isVcf(getContext())));
+         /*SSStry {
+             String contactNumber = null;
+             String contactName;
+diff --git a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+index 58d5fe4..c0f0854 100755
+--- a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
++++ b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+@@ -95,7 +95,7 @@ public class PrivateSpaceLoader {
+                         //还原联系人到系统中
+                         addContacts2Db(activity, people);
+                         //删除私密联系人
+-                        databaseAdapter.deleteContactsByPhone(people.getPhoneNum(), ImportExportUtils.isVcf());
++                        databaseAdapter.deleteContactsByPhone(people.getPhoneNum(), ImportExportUtils.isVcf(activity));
+                         mHandler.sendEmptyMessage(REFRESHE_CONTACT);
+                     }
+                 });
+@@ -129,7 +129,7 @@ public class PrivateSpaceLoader {
+                 @Override
+                 public void run() {
+                     //添加联系人到私密
+-                    databaseAdapter.addContacts(list_selectedPeople, ImportExportUtils.isVcf());
++                    databaseAdapter.addContacts(list_selectedPeople, ImportExportUtils.isVcf(activity));
+                     for (People people : list_selectedPeople) {
+                         //删除联系人元数据
+                         activity.getContentResolver().delete(ContactsContract.RawContacts.CONTENT_URI,
+@@ -176,7 +176,7 @@ public class PrivateSpaceLoader {
+                 databaseAdapter.addCallRecord(callRecord);
+                 //删除通话记录到私密
+                 activity.getContentResolver().delete(CallLog.Calls.CONTENT_URI, CallLog.Calls.NUMBER + "=?",
+-                        new String[]{callRecord.getPhoneNum().replaceAll(" ", "").trim()});
++                        new String[]{callRecord.getPhoneNum().replaceAll(" ", "").replaceAll("-", "").trim()});
+             }
+         }
+ 
+@@ -208,7 +208,7 @@ public class PrivateSpaceLoader {
+                             CallLog.Calls.DURATION,// 通话时长
+                             CallLog.Calls.TYPE}// 通话类型
+                     , CallLog.Calls.NUMBER + "= ?",
+-                    new String[]{phone.replaceAll(" ", "").trim()},
++                    new String[]{phone.replaceAll(" ", "").replaceAll("-", "").trim()},
+                     CallLog.Calls.DEFAULT_SORT_ORDER// 按照时间逆序排列，最近打的最先显示
+             );
+             if (recordCursor != null && recordCursor.moveToFirst()) {
+diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
+index 4b396d7..672f60d 100755
+--- a/src/com/transage/privatespace/provider/PrivateProvider.java
++++ b/src/com/transage/privatespace/provider/PrivateProvider.java
+@@ -30,8 +30,8 @@ public class PrivateProvider extends ContentProvider{
+ 
+     @Override
+     public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
+-        android.util.Log.i(TAG, "query uri = " + uri.toString());
+-        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf());
++        android.util.Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
++        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
+     }
+ 
+     @Override
+diff --git a/src/com/transage/privatespace/utils/ImportExportUtils.java b/src/com/transage/privatespace/utils/ImportExportUtils.java
+index 44281c9..66de9dc 100755
+--- a/src/com/transage/privatespace/utils/ImportExportUtils.java
++++ b/src/com/transage/privatespace/utils/ImportExportUtils.java
+@@ -1,5 +1,7 @@
+ package com.transage.privatespace.utils;
+ 
++import android.content.Context;
++import android.content.SharedPreferences;
+ import android.os.Environment;
+ import android.util.Log;
+ 
+@@ -28,6 +30,11 @@ import com.transage.privatespace.vcard.pim.vcard.VCardParser;
+ 
+ public class ImportExportUtils {
+     private static final String TAG = "ImportExportUtils";
++
++    public static final String SHARE_SAVEVCF = "savevcf";
++    public static final String KEY_SHARE_SAVEVCF = "isSaveVcf";
++
++
+     /**
+      * 是否保存数据到vcf文件
+      */
+@@ -110,10 +117,11 @@ public class ImportExportUtils {
+         }
+     }
+ 
+-    public static boolean isVcf(){
+-        boolean saveVcf = Login.sp.getBoolean("saveVcf", false);
+-        Log.i(TAG, "[isVcf] saveVcf = " + saveVcf);
+-        return saveVcf;
++    public static boolean isVcf(Context context){
++        SharedPreferences savevcf = context.getSharedPreferences(SHARE_SAVEVCF, Context.MODE_PRIVATE);
++        boolean isSaveVcf = savevcf.getBoolean(KEY_SHARE_SAVEVCF, false);
++        Log.i(TAG, "[isVcf] isSaveVcf = " + isSaveVcf);
++        return isSaveVcf;
+     }
+ 
+ //    try{
diff --git "a/privatespace_submit/24\345\216\273\351\231\244\347\247\201\345\257\206\350\201\224\347\263\273\344\272\272\344\270\255\347\202\271\345\207\273\347\237\255\344\277\241\345\233\276\346\240\207\357\274\214\347\224\265\350\257\235\345\217\267\347\240\201\345\211\215\347\232\204/wangmeng4.diff" "b/privatespace_submit/24\345\216\273\351\231\244\347\247\201\345\257\206\350\201\224\347\263\273\344\272\272\344\270\255\347\202\271\345\207\273\347\237\255\344\277\241\345\233\276\346\240\207\357\274\214\347\224\265\350\257\235\345\217\267\347\240\201\345\211\215\347\232\204/wangmeng4.diff"
new file mode 100755
index 0000000..74358a5
--- /dev/null
+++ "b/privatespace_submit/24\345\216\273\351\231\244\347\247\201\345\257\206\350\201\224\347\263\273\344\272\272\344\270\255\347\202\271\345\207\273\347\237\255\344\277\241\345\233\276\346\240\207\357\274\214\347\224\265\350\257\235\345\217\267\347\240\201\345\211\215\347\232\204/wangmeng4.diff"
@@ -0,0 +1,13 @@
+diff --git a/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java b/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java
+index 772dcbe..2358e08 100755
+--- a/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java
++++ b/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java
+@@ -142,7 +142,7 @@ public class PeopleListViewAdapter extends BaseAdapter {
+ 				ActivityCompat.requestPermissions((Activity) context, new String[] { Manifest.permission.SEND_SMS }, 1);// 申请发短信权限
+ 				return;
+ 			}
+-			intent = new Intent(android.content.Intent.ACTION_SENDTO, Uri.parse("smsto://" + phoneNum));
++			intent = new Intent(android.content.Intent.ACTION_SENDTO, Uri.parse("smsto:" + phoneNum));
+ 		}
+ 		context.startActivity(intent);
+ 	}
diff --git "a/privatespace_submit/25\347\247\201\345\257\206\347\237\255\344\277\241\346\225\260\346\215\256\345\272\223\346\267\273\345\212\240read\345\255\227\346\256\265;\344\274\230\345\214\226\347\247\201\345\257\206\347\237\255\344\277\241\346\267\273\345\212\240\347\247\201\345\257\206\346\225\260\346\215\256\345\272\223\345\244\261\350\264\245\347\232\204\351\227\256\351\242\230/wangmeng5.diff" "b/privatespace_submit/25\347\247\201\345\257\206\347\237\255\344\277\241\346\225\260\346\215\256\345\272\223\346\267\273\345\212\240read\345\255\227\346\256\265;\344\274\230\345\214\226\347\247\201\345\257\206\347\237\255\344\277\241\346\267\273\345\212\240\347\247\201\345\257\206\346\225\260\346\215\256\345\272\223\345\244\261\350\264\245\347\232\204\351\227\256\351\242\230/wangmeng5.diff"
new file mode 100755
index 0000000..d6ea5ab
--- /dev/null
+++ "b/privatespace_submit/25\347\247\201\345\257\206\347\237\255\344\277\241\346\225\260\346\215\256\345\272\223\346\267\273\345\212\240read\345\255\227\346\256\265;\344\274\230\345\214\226\347\247\201\345\257\206\347\237\255\344\277\241\346\267\273\345\212\240\347\247\201\345\257\206\346\225\260\346\215\256\345\272\223\345\244\261\350\264\245\347\232\204\351\227\256\351\242\230/wangmeng5.diff"
@@ -0,0 +1,218 @@
+diff --git a/src/com/transage/privatespace/bean/SmsInfo.java b/src/com/transage/privatespace/bean/SmsInfo.java
+index 0cfc731..3e0acd6 100755
+--- a/src/com/transage/privatespace/bean/SmsInfo.java
++++ b/src/com/transage/privatespace/bean/SmsInfo.java
+@@ -4,14 +4,22 @@ package com.transage.privatespace.bean;
+  * Created by dongrp on 2016/9/12.
+  */
+ public class SmsInfo {
++    //短信消息序号
+     private int id;
++    //对话序号
+     private long thread_id;
++    //电话号码
+     private String address;
++    //内容
+     private String body;
++    //日期
+     private long date;
++    //发件人
+     private String person;
++    //类型 发送或接收
+     private int type;
+-
++    //是否已读
++    private String read;
+     public int getId() {
+         return id;
+     }
+@@ -66,4 +74,11 @@ public class SmsInfo {
+     public void setPerson(String person) {
+         this.person = person;
+     }
++    public String getRead() {
++        return read;
++    }
++
++    public void setRead(String read) {
++        this.read = read;
++    }
+ }
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index cab7681..649cfdb 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -235,6 +235,7 @@ public class DatabaseAdapter {
+         values.put(PsDatabaseHelper.SmsColumns.SMS_DATE, Long.valueOf(sms.getDate()));
+         values.put(PsDatabaseHelper.SmsColumns.SMS_PERSON, sms.getPerson());
+         values.put(PsDatabaseHelper.SmsColumns.SMS_TYPE, String.valueOf(sms.getType()));
++        values.put(PsDatabaseHelper.SmsColumns.SMS_READ, sms.getRead());
+         //Log.e("wangmeng","===add===threadId: "+sms.getThread_id());
+         //Log.e("wangmeng","===add===address: "+sms.getAddress());
+        // Log.e("wangmeng","===add===body: "+sms.getBody());
+@@ -254,7 +255,8 @@ public class DatabaseAdapter {
+             PsDatabaseHelper.SmsColumns.SMS_BODY + "," +
+             PsDatabaseHelper.SmsColumns.SMS_DATE + "," +
+             PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
+-            PsDatabaseHelper.SmsColumns.SMS_TYPE +
++            PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
++            PsDatabaseHelper.SmsColumns.SMS_READ +
+                 " FROM " + PsDatabaseHelper.Tables.SMS +
+                 " WHERE " + PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "=?" ;
+         Log.i(TAG, "sql = " + sql);
+@@ -270,6 +272,7 @@ public class DatabaseAdapter {
+                 sms.setDate(cursor.getLong(4));
+                 sms.setPerson(cursor.getString(5));
+                 sms.setType(cursor.getInt(6));
++                sms.setRead(cursor.getString(7));
+                 list.add(sms);
+             }
+         } catch (Exception e) {
+@@ -287,7 +290,8 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.SmsColumns.SMS_BODY + "," +
+                 PsDatabaseHelper.SmsColumns.SMS_DATE + "," +
+                 PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
+-                PsDatabaseHelper.SmsColumns.SMS_TYPE +
++                PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
++                PsDatabaseHelper.SmsColumns.SMS_READ +
+                 " FROM " + PsDatabaseHelper.Tables.SMS;
+         Log.i(TAG, "sql = " + sql);
+         List<SmsInfo> list = new ArrayList<>();
+@@ -302,6 +306,7 @@ public class DatabaseAdapter {
+                 sms.setDate(cursor.getLong(4));
+                 sms.setPerson(cursor.getString(5));
+                 sms.setType(cursor.getInt(6));
++                sms.setRead(cursor.getString(7));
+                 list.add(sms);
+             }
+         } catch (Exception e) {
+diff --git a/src/com/transage/privatespace/database/PsDatabaseHelper.java b/src/com/transage/privatespace/database/PsDatabaseHelper.java
+index 6f7a174..e0ffcbc 100755
+--- a/src/com/transage/privatespace/database/PsDatabaseHelper.java
++++ b/src/com/transage/privatespace/database/PsDatabaseHelper.java
+@@ -47,6 +47,7 @@ public class PsDatabaseHelper extends SQLiteOpenHelper {
+         public static final String SMS_TYPE = "sms_type";
+         public static final String SMS_ADDRESS = "sms_address";
+         public static final String SMS_BODY = "sms_body";
++        public static final String SMS_READ = "sms_read";
+     }
+ 
+     public interface CallRecordClumns {
+@@ -126,7 +127,8 @@ public class PsDatabaseHelper extends SQLiteOpenHelper {
+                 SmsColumns.SMS_BODY + " TEXT," +
+                 SmsColumns.SMS_DATE + " TEXT," +
+                 SmsColumns.SMS_PERSON + " TEXT," +
+-                SmsColumns.SMS_TYPE + " TEXT" +
++                SmsColumns.SMS_TYPE + " TEXT," +
++                SmsColumns.SMS_READ + " TEXT" +
+                 ");";
+         Log.i(TAG, "sql = " + sqlCreateSmsTable);
+         sqLiteDatabase.execSQL(sqlCreateSmsTable);
+diff --git a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+index c0f0854..0acf6bb 100755
+--- a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
++++ b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+@@ -15,17 +15,15 @@ import android.os.Handler;
+ import android.os.Message;
+ import android.provider.CallLog;
+ import android.provider.ContactsContract;
+-import android.provider.Telephony;
+ import android.support.v4.app.ActivityCompat;
+ import android.util.Log;
+-import android.provider.Telephony.Sms;
++
+ import com.android.internal.telephony.SmsApplication;
+ import com.transage.privatespace.activity.PrivateContacts;
+ import com.transage.privatespace.bean.CallRecord;
+ import com.transage.privatespace.bean.People;
+ import com.transage.privatespace.bean.SmsInfo;
+ import com.transage.privatespace.database.DatabaseAdapter;
+-import com.transage.privatespace.database.PsDatabaseHelper;
+ import com.transage.privatespace.utils.ImportExportUtils;
+ 
+ import java.io.File;
+@@ -115,10 +113,11 @@ public class PrivateSpaceLoader {
+                 getThreadPool().execute(new Runnable() {
+                     @Override
+                     public void run() {
++                        String phoneNum = formatNumber(people.getPhoneNum());//格式化电话号码
+                         //还原短信到数据库中
+-                        insertSmstoSystem(activity,databaseAdapter.getSmsByNum(people.getPhoneNum()));
++                        insertSmstoSystem(activity,databaseAdapter.getSmsByNum(phoneNum));
+                         //删除私密短信
+-                        new DatabaseAdapter(activity).deleteSmsByAddress(people.getPhoneNum());
++                        new DatabaseAdapter(activity).deleteSmsByAddress(phoneNum);
+                         databaseAdapter.deleteContactsById(people.getId());
+                         mHandler.sendEmptyMessage(REFRESHE_SMS);
+                     }
+@@ -243,9 +242,20 @@ public class PrivateSpaceLoader {
+             values.put("body", sms.getBody());
+             values.put("date", String.valueOf(sms.getDate()));
+             values.put("type", String.valueOf(sms.getType()));
++            values.put("read",sms.getRead());
+             context.getContentResolver().insert(Uri.parse("content://sms/"), values);
+         }
+     }
++    //格式化电话号码 add by wangmeng 20170821
++    public String formatNumber(String number){
++        String phoneNumStr = null;
++        if(number.contains("+86")){
++            phoneNumStr = number.replace("+86","").trim();
++        }else{
++            phoneNumStr = number.trim();
++        }
++        return phoneNumStr;
++    }
+     //添加短信到私密 add by wangmeng 20170707
+     public void addSmstoPrivate(Activity activity, People phone) {
+         // 1.先获取到所有私密联系人
+@@ -254,14 +264,19 @@ public class PrivateSpaceLoader {
+         //Log.e("wangmeng","=====111111111========>");
+         // 2.获取私密联系人的短信记录
+         SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-dd HH:mm", Locale.getDefault());
+-        String[] projection = new String[]{"_id", "thread_id", "address", "person", "body", "date", "type"};
++        String[] projection = new String[]{"_id", "thread_id", "address", "person", "body", "date", "type","read"};
+ //        for (int i = 0; i < listPrivatePeople.size(); i++) {
+ //            String phone = listPrivatePeople.get(i).getPhoneNum();
+         if (phone != null) {
+             Log.e("wangmeng","=====222222222========>");
+-            Cursor cursor2 = activity.getContentResolver().query(Uri.parse("content://sms/"), projection,
+-                    "address=?", new String[]{phone.getPhoneNum()}, "date desc");
++//            Cursor cursor2 = activity.getContentResolver().query(Uri.parse("content://sms/"), projection,
++//                    "address=?", new String[]{phone.getPhoneNum()}, "date desc");
++            String phoneNum = formatNumber(phone.getPhoneNum());
++            Cursor cursor2 = activity.getContentResolver().query(Uri.parse("content://sms/"), projection , "address"+"  LIKE ? ",
++                    new String[] { "%" + phoneNum + "%" }, "date desc");
++            Log.e("wangmeng","=====phone.getPhoneNum========>"+phoneNum);
+             Log.e("wangmeng","=====cursor2========>"+cursor2);
++            Log.e("wangmeng","=====cursor2.moveToFirst========>"+cursor2.moveToFirst());
+             if (cursor2 != null && cursor2.moveToFirst()) {
+                 // ArrayList<Sms> listSms = new ArrayList<Sms>();
+                 do {
+@@ -273,21 +288,23 @@ public class PrivateSpaceLoader {
+                     long date = cursor2.getLong(cursor2.getColumnIndex("date"));//收发时间
+                     //String date = simpleDateFormat.format(new Date(cursor2.getLong(cursor2.getColumnIndex("date"))));// 收发时间
+                     int type = cursor2.getInt(cursor2.getColumnIndex("type"));// 收发类型
++                    String read = cursor2.getString(cursor2.getColumnIndex("read"));//是否阅读
+ //                        Log.e("wangmeng","======threadId: "+threadId);
+ //                        Log.e("wangmeng","======address: "+address);
+ //                        Log.e("wangmeng","======body: "+body);
+-                        Log.e("wangmeng","======date: "+date);
++                    Log.e("wangmeng","======date: "+date);
++                    Log.e("wangmeng","======read: "+read);
+ //                        Log.e("wangmeng","======type: "+type);
+                     // 添加一条短息数据到listSms
+                     SmsInfo sms = new SmsInfo();
+                     sms.setId(id);
+                     sms.setThread_id(threadId);
+-                    sms.setAddress(address);
++                    sms.setAddress(formatNumber(address));
+                     sms.setPerson(phone.getDisplayName());
+                     sms.setBody(body);
+                     sms.setDate(date);
+                     sms.setType(type);
+-
++                    sms.setRead(read);
+                     new DatabaseAdapter(activity).addSms(sms);
+ 					//wangmeng delete mms data
+ 					int result = activity.getContentResolver().delete(Uri.parse("content://sms/"), "address = ?", new String[]{address});
diff --git "a/privatespace_submit/26\344\277\256\345\244\215\346\267\273\345\212\240\344\270\200\344\270\252\344\270\215\345\270\246+86\347\232\204\345\217\267\347\240\201\357\274\214\351\246\226\346\254\241\345\212\240\345\205\245\347\247\201\345\257\206\347\237\255\344\277\241\350\257\273\344\270\215\345\210\260\346\225\260\346\215\256/wangmeng6.diff" "b/privatespace_submit/26\344\277\256\345\244\215\346\267\273\345\212\240\344\270\200\344\270\252\344\270\215\345\270\246+86\347\232\204\345\217\267\347\240\201\357\274\214\351\246\226\346\254\241\345\212\240\345\205\245\347\247\201\345\257\206\347\237\255\344\277\241\350\257\273\344\270\215\345\210\260\346\225\260\346\215\256/wangmeng6.diff"
new file mode 100755
index 0000000..be84a18
--- /dev/null
+++ "b/privatespace_submit/26\344\277\256\345\244\215\346\267\273\345\212\240\344\270\200\344\270\252\344\270\215\345\270\246+86\347\232\204\345\217\267\347\240\201\357\274\214\351\246\226\346\254\241\345\212\240\345\205\245\347\247\201\345\257\206\347\237\255\344\277\241\350\257\273\344\270\215\345\210\260\346\225\260\346\215\256/wangmeng6.diff"
@@ -0,0 +1,16 @@
+diff --git a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+index 0acf6bb..1e14bba 100755
+--- a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
++++ b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+@@ -250,9 +250,9 @@ public class PrivateSpaceLoader {
+     public String formatNumber(String number){
+         String phoneNumStr = null;
+         if(number.contains("+86")){
+-            phoneNumStr = number.replace("+86","").trim();
++            phoneNumStr = number.replace("+86","").replaceAll(" ", "").replaceAll("-", "").trim();
+         }else{
+-            phoneNumStr = number.trim();
++            phoneNumStr = number.replaceAll(" ", "").replaceAll("-", "").trim();
+         }
+         return phoneNumStr;
+     }
diff --git "a/privatespace_submit/27\346\267\273\345\212\240\346\214\207\347\272\271\347\231\273\345\275\225\351\252\214\350\257\201\347\252\227\357\274\214\350\213\245\350\256\276\347\275\256\344\272\206\346\214\207\347\272\271\347\231\273\345\275\225\357\274\214\350\207\252\345\212\250\345\274\271\345\207\272\346\214\207\347\272\271\351\252\214\350\257\201\347\252\227/ruipan12.diff" "b/privatespace_submit/27\346\267\273\345\212\240\346\214\207\347\272\271\347\231\273\345\275\225\351\252\214\350\257\201\347\252\227\357\274\214\350\213\245\350\256\276\347\275\256\344\272\206\346\214\207\347\272\271\347\231\273\345\275\225\357\274\214\350\207\252\345\212\250\345\274\271\345\207\272\346\214\207\347\272\271\351\252\214\350\257\201\347\252\227/ruipan12.diff"
new file mode 100755
index 0000000..698f0c1
--- /dev/null
+++ "b/privatespace_submit/27\346\267\273\345\212\240\346\214\207\347\272\271\347\231\273\345\275\225\351\252\214\350\257\201\347\252\227\357\274\214\350\213\245\350\256\276\347\275\256\344\272\206\346\214\207\347\272\271\347\231\273\345\275\225\357\274\214\350\207\252\345\212\250\345\274\271\345\207\272\346\214\207\347\272\271\351\252\214\350\257\201\347\252\227/ruipan12.diff"
@@ -0,0 +1,303 @@
+diff --git a/res/layout/activity_login.xml b/res/layout/activity_login.xml
+index 0a94165..5ddcea9 100755
+--- a/res/layout/activity_login.xml
++++ b/res/layout/activity_login.xml
+@@ -45,7 +45,7 @@
+             android:inputType="textPassword"
+             android:maxLength="6"
+             android:paddingStart="10dp"
+-            android:textColorHint="@color/lightgrey"
++            android:textColorHint="@color/greyline"
+             android:textColor="@color/colorAccent"
+             android:textSize="16sp"/>
+ 
+@@ -78,7 +78,7 @@
+             android:inputType="textPassword"
+             android:maxLength="6"
+             android:paddingStart="10dp"
+-            android:textColorHint="@color/lightgrey"
++            android:textColorHint="@color/greyline"
+             android:textColor="@color/colorAccent"
+             android:textSize="16sp"/>
+ 
+@@ -109,6 +109,27 @@
+         android:textSize="16sp"
+         android:visibility="gone"/>
+ 
++    <ImageView
++        android:id="@+id/bt_finger_print"
++        android:layout_width="80dp"
++        android:layout_height="80dp"
++        android:layout_gravity="center_horizontal"
++        android:layout_marginTop="80dp"
++        android:clickable="true"
++        android:onClick="onClick"
++        android:src="@mipmap/bt_finger_print"
++        android:visibility="gone"/>
++
++    <TextView
++        android:id="@+id/tip_finger_print_login"
++        android:layout_width="wrap_content"
++        android:layout_height="wrap_content"
++        android:textColor="@color/greyline"
++        android:layout_gravity="center_horizontal"
++        android:layout_marginTop="5dp"
++        android:text="@string/click_login_by_finger_print"
++        android:visibility="gone"/>
++
+     <RelativeLayout
+         android:layout_width="match_parent"
+         android:layout_height="match_parent">
+diff --git a/res/layout/finger_print_view.xml b/res/layout/finger_print_view.xml
+new file mode 100755
+index 0000000..a282d34
+--- /dev/null
++++ b/res/layout/finger_print_view.xml
+@@ -0,0 +1,42 @@
++<?xml version="1.0" encoding="utf-8"?>
++<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
++              android:orientation="vertical"
++              android:layout_width="match_parent"
++              android:gravity="center_horizontal"
++              android:padding="10dp"
++              android:layout_height="match_parent">
++
++
++    <ImageView
++        android:id="@+id/iv_finger_print"
++        android:layout_width="80dp"
++        android:layout_height="80dp"
++        android:layout_marginTop="10dp"
++        android:src="@mipmap/iv_finger_print"/>
++
++    <TextView
++        android:layout_width="wrap_content"
++        android:text="@string/enter_private_space_by_private_fingerprint"
++        android:layout_marginTop="10dp"
++        android:layout_height="wrap_content"/>
++
++    <TextView
++        android:layout_width="match_parent"
++        android:background="@color/greyline"
++        android:layout_marginTop="20dp"
++        android:layout_marginBottom="10dp"
++        android:layout_height="0.5dp"/>
++
++    <TextView
++        android:id="@+id/cancel"
++        android:layout_width="match_parent"
++        android:gravity="center"
++        android:text="@string/cancel"
++        android:textSize="18sp"
++        android:padding="5dp"
++        android:clickable="true"
++        android:onClick="onClick"
++        android:textColor="@color/colorAccent"
++        android:layout_height="wrap_content"/>
++
++</LinearLayout>
+\ No newline at end of file
+diff --git a/res/mipmap-xxxhdpi/bt_finger_print.png b/res/mipmap-xxxhdpi/bt_finger_print.png
+new file mode 100755
+index 0000000..aac02c5
+Binary files /dev/null and b/res/mipmap-xxxhdpi/bt_finger_print.png differ
+diff --git a/res/mipmap-xxxhdpi/iv_finger_print.jpg b/res/mipmap-xxxhdpi/iv_finger_print.jpg
+new file mode 100755
+index 0000000..300f3d8
+Binary files /dev/null and b/res/mipmap-xxxhdpi/iv_finger_print.jpg differ
+diff --git a/res/values/strings.xml b/res/values/strings.xml
+index 334d2db..1d23ed7 100755
+--- a/res/values/strings.xml
++++ b/res/values/strings.xml
+@@ -63,5 +63,6 @@
+     <string name="decrypt">解密</string>
+     <string name="private_album">私密相册</string>
+     <string name="add_private_photo">添加私密图片</string>
++    <string name="click_login_by_finger_print">点击进行指纹登录</string>
+ 
+ </resources>
+diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
+index 5e30646..4fbbf31 100755
+--- a/src/com/transage/privatespace/activity/Login.java
++++ b/src/com/transage/privatespace/activity/Login.java
+@@ -1,24 +1,28 @@
+ package com.transage.privatespace.activity;
+ 
++import android.animation.AnimatorSet;
++import android.animation.ObjectAnimator;
+ import android.annotation.SuppressLint;
+-import android.annotation.TargetApi;
+ import android.app.Activity;
+ import android.content.ContentResolver;
+ import android.content.Context;
+ import android.content.Intent;
+ import android.content.SharedPreferences;
+ import android.hardware.fingerprint.FingerprintManager;
+-import android.os.Build;
+ import android.os.Bundle;
+ import android.os.CancellationSignal;
+ import android.os.Handler;
+ import android.os.UserHandle;
+ import android.provider.Settings;
+ import android.support.annotation.Nullable;
++import android.support.v4.hardware.fingerprint.FingerprintManagerCompat;
++import android.support.v7.app.AlertDialog;
+ import android.text.TextUtils;
+ import android.text.method.HideReturnsTransformationMethod;
+ import android.text.method.PasswordTransformationMethod;
++import android.util.Log;
+ import android.view.KeyEvent;
++import android.view.LayoutInflater;
+ import android.view.View;
+ import android.view.Window;
+ import android.view.WindowManager;
+@@ -28,6 +32,7 @@ import android.widget.CheckBox;
+ import android.widget.CompoundButton;
+ import android.widget.EditText;
+ import android.widget.FrameLayout;
++import android.widget.ImageView;
+ import android.widget.TextView;
+ import android.widget.Toast;
+ 
+@@ -43,7 +48,7 @@ import java.security.NoSuchAlgorithmException;
+  */
+ @SuppressLint("NewApi")
+ public class Login extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener,EditText.OnEditorActionListener {
+-    private static String TAG = "Login";
++    private static String TAG = "Login_1";
+     private TextView textView1, textView2, textView3;
+     private FrameLayout frameLayout2;
+     private EditText editText1, editText2;
+@@ -59,8 +64,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     public static boolean isChangePrivateMark = false; // 本地全局标志：是否修改密码
+     private boolean resetPrivateMarkFromAdvancedSetup = false; // AdvancedSetupActivity发送过来的是否修改密码的标志
+     private boolean resetPrivateMarkFromSecurityQuestion = false; // SecurityQuestionActivity发送过来的是否修改密码的标志
+-
+     private FingerprintManager mFingerprintManager;
++    private ImageView btFingerprint;//“指纹”按钮：点击该按钮弹出指纹验证框
++    private TextView tip_finger_print_login;//“点击进行指纹登录”
++    private AlertDialog dialogFingerPrint;//指纹验证框
++    private ImageView ivFingerPrint;//指纹验证框中的指纹图片
+ 
+     @Override
+     protected void onCreate(@Nullable Bundle savedInstanceState) {
+@@ -70,6 +78,7 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+         getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);//透明状态栏
+         setContentView(R.layout.activity_login);
+         mFingerprintManager = (FingerprintManager) getSystemService(Context.FINGERPRINT_SERVICE);
++
+         initData();
+         initView();
+ 
+@@ -79,8 +88,13 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     protected void onResume() {
+         super.onResume();
+         //注册指纹监听
+-        if(!isFirstRun && sp.getBoolean("enterByPrivateFingerprint",false)){
++        if(!isFirstRun && sp.getBoolean("enterByPrivateFingerprint",false) && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()){
+             retryFingerprint();
++            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()){
++                dialogFingerPrint.show();
++            }
++            btFingerprint.setVisibility(View.VISIBLE);
++            tip_finger_print_login.setVisibility(View.VISIBLE);
+         }
+     }
+ 
+@@ -106,7 +120,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+         textView1 = (TextView) findViewById(R.id.textView1);// 标题
+         textView2 = (TextView) findViewById(R.id.textView2);// 提示信息
+         textView3 = (TextView) findViewById(R.id.textView3);// “忘记密码”
+-        textView3.setOnClickListener(this);// “忘记密码”注册点击监听
++        btFingerprint = (ImageView) findViewById(R.id.bt_finger_print);//“指纹”按钮
++        tip_finger_print_login = (TextView) findViewById(R.id.tip_finger_print_login);//“点击进行指纹登录”提示语
++        View fingerPrintView = LayoutInflater.from(this).inflate(R.layout.finger_print_view, null);
++        ivFingerPrint = (ImageView) fingerPrintView.findViewById(R.id.iv_finger_print);//验证框中的指纹图片
++        dialogFingerPrint = new AlertDialog.Builder(this).setCancelable(false).setView(fingerPrintView).create();
+         frameLayout2 = (FrameLayout) findViewById(R.id.frame_layout2);
+         editText1 = (EditText) findViewById(R.id.editText1);
+         editText2 = (EditText) findViewById(R.id.editText2);
+@@ -119,7 +137,8 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+         // 根据isFirstRun和isChangePrivateMark的状态值，决定所展示的布局
+         if (!isFirstRun && !isChangePrivateMark) { // 日常登录
+             textView1.setText(getString(R.string.confirm_private_mark));
+-            textView2.setText(getString(R.string.login_by_private_mark_or_private_fingerprint));
++            //textView2.setText(getString(R.string.login_by_private_mark_or_private_fingerprint));
++            textView2.setVisibility(View.GONE);
+             textView3.setVisibility(View.VISIBLE);
+             frameLayout2.setVisibility(View.GONE);
+         }
+@@ -141,6 +160,14 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+                     loginOrResetPwd(); // 执行主业务逻辑
+                 }
+                 break;
++            case R.id.bt_finger_print://指纹登录按钮
++                retryFingerprint();
++                dialogFingerPrint.show();
++                break;
++            case R.id.cancel://指纹验证框中取消按钮
++                stopFingerprint();
++                dialogFingerPrint.dismiss();
++                break;
+         }
+     }
+ 
+@@ -325,9 +352,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+                     }
+                     break;
+                 case MSG_FINGER_AUTH_FAIL:
++                    startFingerWrongAnimation();
+                     // No action required... fingerprint will allow up to 5 of these
+                     break;
+                 case MSG_FINGER_AUTH_ERROR:
++                    startFingerWrongAnimation();
+                     handleError(msg.arg1 /* errMsgId */, (CharSequence) msg.obj /* errStr */ );
+                     break;
+                 case MSG_FINGER_AUTH_HELP: {
+@@ -339,10 +368,24 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     };
+ 
+     /**
++     * 指纹错误动画
++     */
++    public void startFingerWrongAnimation(){
++        ObjectAnimator animator1 = ObjectAnimator.ofFloat(ivFingerPrint, "translationX", 0, -20);
++        ObjectAnimator animator2 = ObjectAnimator.ofFloat(ivFingerPrint, "translationX", -20, 20);
++        ObjectAnimator animator3 = ObjectAnimator.ofFloat(ivFingerPrint, "translationX", 20, 0);
++        AnimatorSet animSet = new AnimatorSet();
++        animSet.play(animator2).after(animator1);
++        animSet.play(animator3).after(animator2);
++        animSet.setDuration(100);
++        animSet.start();
++    }
++
++    /**
+      * 指纹错误或已上锁
+      */
+     protected void handleError(int errMsgId, CharSequence msg) {
+-        mFingerprintCancel = null;
++        //mFingerprintCancel = null;
+         switch (errMsgId) {
+             case FingerprintManager.FINGERPRINT_ERROR_CANCELED:
+                 return; // Only happens if we get preempted by another activity. Ignored.
+@@ -415,10 +458,19 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+      * 停止指纹监听
+      */
+     private void stopFingerprint() {
++        try {
++            mFingerprintCancel.cancel();
++        } catch (Exception e) {
++            e.printStackTrace();
++        }
++    }
++
++/*    private void stopFingerprint() {
+         if (mFingerprintCancel != null && !mFingerprintCancel.isCanceled()) {
+             mFingerprintCancel.cancel();
+         }
+         mFingerprintCancel = null;
+-    }
++    }*/
++
+ 
+ }
diff --git "a/privatespace_submit/28Provider\344\270\255\346\267\273\345\212\240URI\345\214\271\351\205\215\346\234\272\345\210\266/yanjie9.diff" "b/privatespace_submit/28Provider\344\270\255\346\267\273\345\212\240URI\345\214\271\351\205\215\346\234\272\345\210\266/yanjie9.diff"
new file mode 100755
index 0000000..180bae2
--- /dev/null
+++ "b/privatespace_submit/28Provider\344\270\255\346\267\273\345\212\240URI\345\214\271\351\205\215\346\234\272\345\210\266/yanjie9.diff"
@@ -0,0 +1,109 @@
+diff --git a/AndroidManifest.xml b/AndroidManifest.xml
+index 86c7cee..8f80527 100755
+--- a/AndroidManifest.xml
++++ b/AndroidManifest.xml
+@@ -123,7 +123,7 @@
+         <provider
+             android:name=".provider.PrivateProvider"
+             android:exported="true"
+-            android:authorities="com.transage.privatespace.provider.PrivateProvider"/>
++            android:authorities="com.transage.privatespace"/>
+     </application>
+ 
+ </manifest>
+\ No newline at end of file
+diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
+index 672f60d..5c03886 100755
+--- a/src/com/transage/privatespace/provider/PrivateProvider.java
++++ b/src/com/transage/privatespace/provider/PrivateProvider.java
+@@ -2,6 +2,7 @@ package com.transage.privatespace.provider;
+ 
+ import android.content.ContentProvider;
+ import android.content.ContentValues;
++import android.content.UriMatcher;
+ import android.database.Cursor;
+ import android.net.Uri;
+ import android.util.Log;
+@@ -17,21 +18,57 @@ import com.transage.privatespace.utils.ImportExportUtils;
+ 
+ public class PrivateProvider extends ContentProvider{
+     private static final String TAG = "PrivateProvider";
++    //这里的AUTHORITY就是我们在AndroidManifest.xml中配置的authorities
++    private static final String AUTHORITY = "com.transage.privatespace";
++    //匹配成功后的匹配码
++    private static final int MATCH_PHONE = 100;
++    private static final int MATCH_SMS = 101;
++    private static final int MATCH_CALL = 102;
++    private static UriMatcher uriMatcher;
++
++    //在静态代码块中添加要匹配的 Uri
++    static {
++        //匹配不成功返回NO_MATCH(-1)
++        uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
++        /**
++         * uriMatcher.addURI(authority, path, code); 其中
++         * authority：主机名(用于唯一标示一个ContentProvider,这个需要和清单文件中的authorities属性相同)
++         * path:路径路径(可以用来表示我们要操作的数据，路径的构建应根据业务而定)
++         * code:返回值(用于匹配uri的时候，作为匹配成功的返回值)
++         */
++        uriMatcher.addURI(AUTHORITY, "phone", MATCH_PHONE);// 匹配电话
++        uriMatcher.addURI(AUTHORITY, "sms", MATCH_SMS);// 匹配短信
++        uriMatcher.addURI(AUTHORITY, "call", MATCH_CALL);// 匹配通话记录
++    }
++
+     DatabaseAdapter mDbAdapter;
+ 
+     @Override
+     public boolean onCreate() {
+         if (mDbAdapter == null){
+             mDbAdapter = new DatabaseAdapter(getContext());
+-            android.util.Log.i(TAG, "onCreate");
++            Log.i(TAG, "onCreate");
+         }
+         return false;
+     }
+ 
+     @Override
+     public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
+-        android.util.Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
+-        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
++        Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
++        Cursor cursor = null;
++        switch (uriMatcher.match(uri)) {
++            case MATCH_PHONE:
++                //查询手机号码
++                cursor = mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
++                break;
++            case MATCH_SMS:
++                //查询短信
++                break;
++            case MATCH_CALL:
++                //查询通话记录
++                break;
++        }
++        return cursor;
+     }
+ 
+     @Override
+@@ -41,8 +78,19 @@ public class PrivateProvider extends ContentProvider{
+ 
+     @Override
+     public Uri insert(Uri uri, ContentValues contentValues) {
+-        android.util.Log.i(TAG, "insert contentValues = " + contentValues.toString());
+-        mDbAdapter.insertCallLog(contentValues);
++        Log.i(TAG, "insert contentValues = " + contentValues.toString());
++        switch (uriMatcher.match(uri)) {
++            case MATCH_PHONE:
++                //insert手机号码
++                break;
++            case MATCH_SMS:
++                //insert短信
++                break;
++            case MATCH_CALL:
++                //insert通话记录
++                mDbAdapter.insertCallLog(contentValues);
++                break;
++        }
+         getContext().getContentResolver().notifyChange(uri, null);
+         return uri;
+     }
diff --git "a/privatespace_submit/29\346\267\273\345\212\240\345\272\224\347\224\250\351\200\200\345\207\272\351\200\273\350\276\221\357\274\232\347\246\273\345\274\200\347\247\201\345\257\206\344\270\255\347\232\204\344\273\273\344\275\225\347\225\214\351\235\242\347\232\204\346\227\266\345\200\231\357\274\214\345\272\224\347\224\250\350\207\252\345\212\250\351\200\200\345\207\272/ruipan13.diff" "b/privatespace_submit/29\346\267\273\345\212\240\345\272\224\347\224\250\351\200\200\345\207\272\351\200\273\350\276\221\357\274\232\347\246\273\345\274\200\347\247\201\345\257\206\344\270\255\347\232\204\344\273\273\344\275\225\347\225\214\351\235\242\347\232\204\346\227\266\345\200\231\357\274\214\345\272\224\347\224\250\350\207\252\345\212\250\351\200\200\345\207\272/ruipan13.diff"
new file mode 100755
index 0000000..6efbe95
--- /dev/null
+++ "b/privatespace_submit/29\346\267\273\345\212\240\345\272\224\347\224\250\351\200\200\345\207\272\351\200\273\350\276\221\357\274\232\347\246\273\345\274\200\347\247\201\345\257\206\344\270\255\347\232\204\344\273\273\344\275\225\347\225\214\351\235\242\347\232\204\346\227\266\345\200\231\357\274\214\345\272\224\347\224\250\350\207\252\345\212\250\351\200\200\345\207\272/ruipan13.diff"
@@ -0,0 +1,476 @@
+diff --git a/AndroidManifest.xml b/AndroidManifest.xml
+index 8f80527..9ae63cd 100755
+--- a/AndroidManifest.xml
++++ b/AndroidManifest.xml
+@@ -28,6 +28,7 @@
+                 android:protectionLevel="signature"/>
+ 
+     <application
++        android:name=".PrivateSpaceApplication"
+         android:allowBackup="true"
+         android:icon="@mipmap/logo"
+         android:label="@string/app_name"
+@@ -65,6 +66,8 @@
+         <!--wangmeng 20170802 end-->
+         <!-- Activity -->
+         <activity
++            android:name=".activity.BaseActivity"/>
++        <activity
+             android:name=".activity.Main"
+             android:screenOrientation="portrait"/>
+         <activity
+@@ -72,6 +75,7 @@
+             android:screenOrientation="portrait"/>
+         <activity
+             android:name=".activity.Login"
++            android:excludeFromRecents="true"
+             android:screenOrientation="portrait"
+             android:theme="@style/AppStartLoad"
+             android:windowSoftInputMode="stateHidden|stateAlwaysHidden">
+@@ -120,6 +124,8 @@
+             android:name=".activity.AddPeople"
+             android:screenOrientation="portrait"/>
+ 
++        <activity android:name=".activity.EmptyActivity"
++            android:theme="@style/ThemeTransparentBackground"/>
+         <provider
+             android:name=".provider.PrivateProvider"
+             android:exported="true"
+diff --git a/res/layout/activity_advance_setup.xml b/res/layout/activity_advance_setup.xml
+index 32032c8..5ca6933 100755
+--- a/res/layout/activity_advance_setup.xml
++++ b/res/layout/activity_advance_setup.xml
+@@ -240,7 +240,8 @@
+                 android:paddingTop="15dp"
+                 android:text="@string/change_private_fingerprint"
+                 android:textColor="@color/white"
+-                android:textSize="16sp"/>
++                android:textSize="16sp"
++                android:visibility="gone"/>
+ 
+             <TextView
+                 android:id="@+id/tv5"
+diff --git a/res/values/styles.xml b/res/values/styles.xml
+index 5488659..15c825c 100755
+--- a/res/values/styles.xml
++++ b/res/values/styles.xml
+@@ -29,4 +29,9 @@
+         <item name="windowNoTitle">true</item>
+         <item name="android:windowFullscreen">true</item>
+     </style>
++    <!--add by dongrp : ThemeTransparentBackground -->
++    <style name="ThemeTransparentBackground" parent="AppBaseTheme">
++        <item name="android:windowIsTranslucent">true</item>
++        <item name="android:windowNoTitle">true</item>
++    </style>
+ </resources>
+\ No newline at end of file
+diff --git a/src/com/transage/privatespace/PrivateSpaceApplication.java b/src/com/transage/privatespace/PrivateSpaceApplication.java
+new file mode 100755
+index 0000000..4e425c5
+--- /dev/null
++++ b/src/com/transage/privatespace/PrivateSpaceApplication.java
+@@ -0,0 +1,42 @@
++package com.transage.privatespace;
++
++import android.app.ActivityManager;
++import android.app.Application;
++import android.content.ComponentName;
++import android.content.Context;
++import android.content.Intent;
++import android.util.Log;
++
++import com.transage.privatespace.activity.EmptyActivity;
++
++import java.util.List;
++
++/**
++ * Created by ruipan.dong on 2017/8/21.
++ */
++
++public class PrivateSpaceApplication extends Application {
++
++    /**
++     * 当应用处于后台时，退出应用
++     */
++    public boolean exitAppOnPause() {
++        ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
++        List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);
++        if (!tasks.isEmpty()) {
++            ComponentName topActivity = tasks.get(0).topActivity;
++            Log.d("PrivateSpaceApplication", topActivity.getPackageName());
++            if (!topActivity.getPackageName().equals(getPackageName())) {
++                Log.d("PrivateSpaceApplication", "go to background");
++                Intent intent = new Intent(this,EmptyActivity.class);
++                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
++                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
++                startActivity(intent);
++                return true;
++            }
++        }
++        return false;
++    }
++
++
++}
+diff --git a/src/com/transage/privatespace/activity/AddApp.java b/src/com/transage/privatespace/activity/AddApp.java
+index 5c4349c..bfa3dbb 100755
+--- a/src/com/transage/privatespace/activity/AddApp.java
++++ b/src/com/transage/privatespace/activity/AddApp.java
+@@ -1,7 +1,6 @@
+ package com.transage.privatespace.activity;
+ 
+ import android.annotation.SuppressLint;
+-import android.app.Activity;
+ import android.content.Intent;
+ import android.content.pm.ActivityInfo;
+ import android.content.pm.PackageManager;
+@@ -31,7 +30,7 @@ import java.util.Map;
+  * Created by dongrp on 2016/8/18. 添加APP界面
+  */
+ @SuppressLint("NewApi")
+-public class AddApp extends Activity implements View.OnClickListener, AdapterView.OnItemClickListener {
++public class AddApp extends BaseActivity implements View.OnClickListener, AdapterView.OnItemClickListener {
+     private ArrayList<AppInfo> appInfoList = new ArrayList<AppInfo>();// 所有app的list
+     private ListView appListView;
+     private AddAppListViewAdapter appListViewAdapter;
+diff --git a/src/com/transage/privatespace/activity/AddPeople.java b/src/com/transage/privatespace/activity/AddPeople.java
+index 2a3eda4..ea2cdc0 100755
+--- a/src/com/transage/privatespace/activity/AddPeople.java
++++ b/src/com/transage/privatespace/activity/AddPeople.java
+@@ -36,7 +36,7 @@ import java.util.Map;
+ /**
+  * Created by dongrp on 2016/9/2. 添加联系人界面
+  */
+-public class AddPeople extends Activity implements AdapterView.OnItemClickListener, View.OnClickListener {
++public class AddPeople extends BaseActivity implements AdapterView.OnItemClickListener, View.OnClickListener {
+     public static final String TAG = "AddPeople";
+ 
+     public static final String SELECTED_PEOPLE = "selected_people";
+diff --git a/src/com/transage/privatespace/activity/AdvancedSetup.java b/src/com/transage/privatespace/activity/AdvancedSetup.java
+index 28c0ff9..4cf5d36 100755
+--- a/src/com/transage/privatespace/activity/AdvancedSetup.java
++++ b/src/com/transage/privatespace/activity/AdvancedSetup.java
+@@ -1,6 +1,5 @@
+ package com.transage.privatespace.activity;
+ 
+-import android.app.Activity;
+ import android.content.Intent;
+ import android.content.SharedPreferences;
+ import android.os.Bundle;
+@@ -20,7 +19,7 @@ import static com.transage.privatespace.activity.Login.ChangePrivateMarkFromAdva
+ /**
+  * Created by dongrp on 2016/8/15. 高级设置界面
+  */
+-public class AdvancedSetup extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener {
++public class AdvancedSetup extends BaseActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener {
+ 
+     private SharedPreferences mVcfSP;
+ 
+diff --git a/src/com/transage/privatespace/activity/BaseActivity.java b/src/com/transage/privatespace/activity/BaseActivity.java
+new file mode 100755
+index 0000000..a0a41e0
+--- /dev/null
++++ b/src/com/transage/privatespace/activity/BaseActivity.java
+@@ -0,0 +1,19 @@
++package com.transage.privatespace.activity;
++
++import android.app.Activity;
++
++import com.transage.privatespace.PrivateSpaceApplication;
++
++/**
++ * Created by ruipan.dong on 2017/8/18.
++ */
++
++public class BaseActivity extends Activity {
++
++    @Override
++    protected void onPause() {
++        super.onPause();
++        ((PrivateSpaceApplication) getApplication()).exitAppOnPause();//退出应用
++    }
++
++}
+diff --git a/src/com/transage/privatespace/activity/EmptyActivity.java b/src/com/transage/privatespace/activity/EmptyActivity.java
+new file mode 100755
+index 0000000..283be79
+--- /dev/null
++++ b/src/com/transage/privatespace/activity/EmptyActivity.java
+@@ -0,0 +1,18 @@
++package com.transage.privatespace.activity;
++
++import android.app.Activity;
++import android.os.Bundle;
++import android.support.annotation.Nullable;
++
++/**
++ * Created by ruipan.dong on 2017/8/21.
++ */
++
++public class EmptyActivity extends Activity {
++
++    @Override
++    protected void onCreate(@Nullable Bundle savedInstanceState) {
++        super.onCreate(savedInstanceState);
++        finish();
++    }
++}
+diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
+index 4fbbf31..33630d2 100755
+--- a/src/com/transage/privatespace/activity/Login.java
++++ b/src/com/transage/privatespace/activity/Login.java
+@@ -47,7 +47,7 @@ import java.security.NoSuchAlgorithmException;
+  * Created by dongrp on 2016/8/16. 登录界面
+  */
+ @SuppressLint("NewApi")
+-public class Login extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener,EditText.OnEditorActionListener {
++public class Login extends BaseActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener,EditText.OnEditorActionListener {
+     private static String TAG = "Login_1";
+     private TextView textView1, textView2, textView3;
+     private FrameLayout frameLayout2;
+@@ -88,9 +88,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     protected void onResume() {
+         super.onResume();
+         //注册指纹监听
+-        if(!isFirstRun && sp.getBoolean("enterByPrivateFingerprint",false) && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()){
++        if (!isFirstRun && sp.getBoolean("enterByPrivateFingerprint", false)
++                && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()
++                && !resetPrivateMarkFromAdvancedSetup && !resetPrivateMarkFromSecurityQuestion) {
+             retryFingerprint();
+-            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()){
++            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()) {
+                 dialogFingerPrint.show();
+             }
+             btFingerprint.setVisibility(View.VISIBLE);
+diff --git a/src/com/transage/privatespace/activity/Main.java b/src/com/transage/privatespace/activity/Main.java
+index 9a31161..57541cb 100755
+--- a/src/com/transage/privatespace/activity/Main.java
++++ b/src/com/transage/privatespace/activity/Main.java
+@@ -1,7 +1,6 @@
+ package com.transage.privatespace.activity;
+ 
+ import android.annotation.TargetApi;
+-import android.app.Activity;
+ import android.content.Intent;
+ import android.content.pm.PackageManager;
+ import android.graphics.Rect;
+@@ -13,6 +12,7 @@ import android.support.v7.widget.RecyclerView;
+ import android.view.View;
+ import android.view.Window;
+ import android.view.WindowManager;
++
+ import com.transage.privatespace.R;
+ import com.transage.privatespace.adapter.AppRecyclerAdapter;
+ import com.transage.privatespace.bean.AppInfo;
+@@ -24,7 +24,7 @@ import java.util.ArrayList;
+ /**
+  * Created by dongrp on 2016/8/13. 主界面
+  */
+-public class Main extends Activity implements View.OnClickListener, AppRecyclerAdapter.RecycleView_OnItemClickListener,
++public class Main extends BaseActivity implements View.OnClickListener, AppRecyclerAdapter.RecycleView_OnItemClickListener,
+         AppRecyclerAdapter.RecycleView_OnItemLongClickListener {
+     private ArrayList<AppInfo> appList = new ArrayList<AppInfo>();// 数据
+     private RecyclerView recyclerView;// 控件
+diff --git a/src/com/transage/privatespace/activity/PrivateContacts.java b/src/com/transage/privatespace/activity/PrivateContacts.java
+index 0398db5..b5a9ea8 100755
+--- a/src/com/transage/privatespace/activity/PrivateContacts.java
++++ b/src/com/transage/privatespace/activity/PrivateContacts.java
+@@ -5,7 +5,7 @@ import android.content.Intent;
+ import android.database.ContentObserver;
+ import android.net.Uri;
+ import android.os.Bundle;
+-import android.os.Handler;
++import android.provider.Telephony;
+ import android.support.annotation.Nullable;
+ import android.support.v4.app.Fragment;
+ import android.support.v4.app.FragmentActivity;
+@@ -19,6 +19,8 @@ import android.view.Window;
+ import android.view.WindowManager;
+ import android.widget.TextView;
+ 
++import com.android.internal.telephony.SmsApplication;
++import com.transage.privatespace.PrivateSpaceApplication;
+ import com.transage.privatespace.R;
+ import com.transage.privatespace.bean.People;
+ import com.transage.privatespace.fragment.BaseFragment;
+@@ -28,8 +30,7 @@ import com.transage.privatespace.fragment.FG_PrivateSms;
+ import com.transage.privatespace.loader.OnLoadListener;
+ import com.transage.privatespace.loader.PrivateSpaceLoader;
+ import com.transage.privatespace.provider.PrivateObserver;
+-import android.provider.Telephony;
+-import com.android.internal.telephony.SmsApplication;
++
+ import java.util.ArrayList;
+ import java.util.List;
+ 
+@@ -82,6 +83,7 @@ public class PrivateContacts extends FragmentActivity implements View.OnClickLis
+         Log.e("wangmeng ","######mDefaultSmsApp######" +mDefaultSmsApp);
+         setRestoreDefaultSms(PrivateContacts.this);//恢复默认短信
+         super.onPause();
++        ((PrivateSpaceApplication) getApplication()).exitAppOnPause();//退出应用
+     }
+ 
+     @Override
+diff --git a/src/com/transage/privatespace/activity/SecurityQuestion.java b/src/com/transage/privatespace/activity/SecurityQuestion.java
+index e6edce7..4970400 100755
+--- a/src/com/transage/privatespace/activity/SecurityQuestion.java
++++ b/src/com/transage/privatespace/activity/SecurityQuestion.java
+@@ -1,6 +1,5 @@
+ package com.transage.privatespace.activity;
+ 
+-import android.app.Activity;
+ import android.app.AlertDialog;
+ import android.content.DialogInterface;
+ import android.content.Intent;
+@@ -24,7 +23,7 @@ import java.util.ArrayList;
+ /**
+  * Created by dongrp on 2016/8/22. 密保问题界面
+  */
+-public class SecurityQuestion extends Activity implements View.OnClickListener, AdapterView.OnItemSelectedListener {
++public class SecurityQuestion extends BaseActivity implements View.OnClickListener, AdapterView.OnItemSelectedListener {
+     private Spinner spinner;
+     private EditText editText;
+     private Button button;
+diff --git a/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java b/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java
+index 9077966..0c22419 100755
+--- a/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java
++++ b/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java
+@@ -6,21 +6,18 @@ import android.content.pm.PackageManager;
+ import android.os.Bundle;
+ import android.os.Environment;
+ import android.support.v4.app.ActivityCompat;
+-import android.support.v7.app.AppCompatActivity;
+ import android.view.View;
+-import android.widget.Button;
+-import android.widget.EditText;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.gallery.photozoom.Folders;
+-import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+ 
+ /**
+  * Created by dongrp on 2017/7/1.
+  * 私密图库的主界面
+  */
+ 
+-public class GalleryMainActivity extends AppCompatActivity implements View.OnClickListener {
++public class GalleryMainActivity extends BaseActivity implements View.OnClickListener {
+ 
+     //private final String SDcardPath = "storage/emulated/0/";
+     private final String SDcardPath = Environment.getExternalStorageDirectory().toString() + "/";
+diff --git a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+index e736dd4..2d3f705 100755
+--- a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
++++ b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+@@ -8,7 +8,6 @@ import android.os.AsyncTask;
+ import android.os.Bundle;
+ import android.provider.MediaStore;
+ import android.support.annotation.Nullable;
+-import android.support.v7.app.AppCompatActivity;
+ import android.util.Log;
+ import android.view.View;
+ import android.widget.AbsListView;
+@@ -19,6 +18,7 @@ import android.widget.Toast;
+ 
+ import com.bumptech.glide.Glide;
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.database.DatabaseAdapter;
+ import com.transage.privatespace.gallery.adapter.PrivateAlbumGridViewAdapter;
+ import com.transage.privatespace.gallery.photozoom.Bimp;
+@@ -39,7 +39,7 @@ import java.util.concurrent.Future;
+  * 私密相册界面
+  */
+ 
+-public class PrivateAlbum extends AppCompatActivity implements View.OnClickListener, AbsListView.OnScrollListener {
++public class PrivateAlbum extends BaseActivity implements View.OnClickListener, AbsListView.OnScrollListener {
+     private GridView gridView;
+     public static ArrayList<ImageItem> dateList;
+     private PrivateAlbumGridViewAdapter privateAlbumGridViewAdapter;
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Album.java b/src/com/transage/privatespace/gallery/photozoom/Album.java
+index 0d0b972..27173f5 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Album.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Album.java
+@@ -7,7 +7,6 @@ import android.net.Uri;
+ import android.os.AsyncTask;
+ import android.os.Bundle;
+ import android.provider.MediaStore;
+-import android.support.v7.app.AppCompatActivity;
+ import android.util.Log;
+ import android.view.View;
+ import android.view.View.OnClickListener;
+@@ -16,6 +15,7 @@ import android.widget.GridView;
+ import android.widget.Toast;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.database.DatabaseAdapter;
+ import com.transage.privatespace.database.PsDatabaseHelper;
+ import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+@@ -31,7 +31,7 @@ import java.util.concurrent.Executors;
+  *
+  * @author Tom
+  */
+-public class Album extends AppCompatActivity implements OnClickListener {
++public class Album extends BaseActivity implements OnClickListener {
+     private GridView gridView;
+     private AlbumGridViewAdapter gridImageAdapter;
+     //这个静态 成员变量 在FolderGirdViewAdapter的item点击事件中 就已经赋值了
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Folders.java b/src/com/transage/privatespace/gallery/photozoom/Folders.java
+index 60b9d3e..bcc4af1 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Folders.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Folders.java
+@@ -2,12 +2,12 @@ package com.transage.privatespace.gallery.photozoom;
+ 
+ 
+ import android.os.Bundle;
+-import android.support.v7.app.AppCompatActivity;
+ import android.view.View;
+ import android.view.View.OnClickListener;
+ import android.widget.GridView;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ 
+ import java.util.List;
+ 
+@@ -16,7 +16,7 @@ import java.util.List;
+  * 这个类主要是用来:将所有包含图片的文件夹  以GridView的形式展示出来
+  * @author Tom
+  */
+-public class Folders extends AppCompatActivity {
++public class Folders extends BaseActivity {
+ 
+ 	private AlbumHelper helper;
+ 	public static List<ImageBucket> contentList;
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Gallery.java b/src/com/transage/privatespace/gallery/photozoom/Gallery.java
+index 3b4d207..6d54d34 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Gallery.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Gallery.java
+@@ -5,7 +5,6 @@ import android.content.Intent;
+ import android.os.AsyncTask;
+ import android.os.Bundle;
+ import android.support.v4.view.ViewPager.OnPageChangeListener;
+-import android.support.v7.app.AppCompatActivity;
+ import android.view.View;
+ import android.view.View.OnClickListener;
+ import android.widget.Button;
+@@ -13,6 +12,7 @@ import android.widget.ProgressBar;
+ import android.widget.Toast;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.gallery.activity.PrivateAlbum;
+ import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+ 
+@@ -22,7 +22,7 @@ import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+  *
+  * @author Tom
+  */
+-public class Gallery extends AppCompatActivity implements OnClickListener, OnPageChangeListener {
++public class Gallery extends BaseActivity implements OnClickListener, OnPageChangeListener {
+     private Intent intent;
+     public static boolean isFromPrivateAlbum;
+     private int location;//当前的位置
diff --git "a/privatespace_submit/30\346\267\273\345\212\240\347\247\201\345\257\206\347\237\255\344\277\241\345\257\271\345\244\226\347\232\204\346\217\222\345\205\245\350\257\273\345\217\226\346\225\260\346\215\256\347\232\204\346\216\245\345\217\243/wangmeng7.diff" "b/privatespace_submit/30\346\267\273\345\212\240\347\247\201\345\257\206\347\237\255\344\277\241\345\257\271\345\244\226\347\232\204\346\217\222\345\205\245\350\257\273\345\217\226\346\225\260\346\215\256\347\232\204\346\216\245\345\217\243/wangmeng7.diff"
new file mode 100755
index 0000000..1c8c270
--- /dev/null
+++ "b/privatespace_submit/30\346\267\273\345\212\240\347\247\201\345\257\206\347\237\255\344\277\241\345\257\271\345\244\226\347\232\204\346\217\222\345\205\245\350\257\273\345\217\226\346\225\260\346\215\256\347\232\204\346\216\245\345\217\243/wangmeng7.diff"
@@ -0,0 +1,135 @@
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index 649cfdb..fc22fa2 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -247,6 +247,23 @@ public class DatabaseAdapter {
+     public void deleteSmsByAddress(String address) {
+         delete(PsDatabaseHelper.Tables.SMS, PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "=?", new String[]{address});
+     }
++    public void insertSms(ContentValues contentValues) {
++        insert(PsDatabaseHelper.Tables.SMS, null, contentValues);
++    }
++    public Cursor getSmsCursor(String selection, String[] selectionArgs) {
++        String sql = "SELECT " +
++                PsDatabaseHelper.SmsColumns._ID + "," +
++                PsDatabaseHelper.SmsColumns.THREAD_ID + "," +
++                PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "," +
++                PsDatabaseHelper.SmsColumns.SMS_BODY + "," +
++                PsDatabaseHelper.SmsColumns.SMS_DATE + "," +
++                PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
++                PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
++                PsDatabaseHelper.SmsColumns.SMS_READ +
++                " FROM " + PsDatabaseHelper.Tables.SMS + " WHERE " +
++                selection;
++        return query(sql, new String[]{selectionArgs[0].replaceAll(" ", "").replaceAll("-", "").trim()});
++    }
+     public List<SmsInfo> getSmsByNum(String phone){
+         String sql = "SELECT " +
+             PsDatabaseHelper.SmsColumns._ID + "," +
+diff --git a/src/com/transage/privatespace/provider/PrivateObserver.java b/src/com/transage/privatespace/provider/PrivateObserver.java
+index 69eb7eb..5996c51 100755
+--- a/src/com/transage/privatespace/provider/PrivateObserver.java
++++ b/src/com/transage/privatespace/provider/PrivateObserver.java
+@@ -1,6 +1,7 @@
+ package com.transage.privatespace.provider;
+ 
+ import android.database.ContentObserver;
++import android.net.Uri;
+ import android.os.Handler;
+ import android.util.Log;
+ 
+@@ -23,11 +24,33 @@ public class PrivateObserver extends ContentObserver {
+     }
+ 
+     @Override
+-    public void onChange(boolean selfChange) {
+-        super.onChange(selfChange);
+-        if (mHandler != null){
+-            mHandler.sendEmptyMessage(PrivateSpaceLoader.PRIVATE_OBSERVER);
+-            Log.i(TAG, "onChange selfChange" + selfChange);
++    public void onChange(boolean selfChange, Uri uri) {
++        super.onChange(selfChange, uri);
++        if (uri != null) {
++            switch (PrivateProvider.uriMatcher.match(uri)) {
++                case PrivateProvider.MATCH_PHONE:
++                    //查询手机号码
++                    if (mHandler != null) {
++                        mHandler.sendEmptyMessage(PrivateSpaceLoader.REFRESHE_CONTACT);
++                        Log.i(TAG, "onChange selfChange MATCH_PHONE" + selfChange);
++                    }
++                    break;
++                case PrivateProvider.MATCH_SMS:
++                    //查询短信
++                    if (mHandler != null) {
++                        mHandler.sendEmptyMessage(PrivateSpaceLoader.REFRESHE_SMS);
++                        Log.i(TAG, "onChange selfChange MATCH_SMS" + selfChange);
++                    }
++                    break;
++                case PrivateProvider.MATCH_CALL:
++                    //查询通话记录
++                    if (mHandler != null) {
++                        mHandler.sendEmptyMessage(PrivateSpaceLoader.PRIVATE_OBSERVER);
++                        Log.i(TAG, "onChange selfChange MATCH_CALL" + selfChange);
++                    }
++                    break;
++            }
++
+         }
+     }
+ }
+diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
+index 5c03886..c13fd22 100755
+--- a/src/com/transage/privatespace/provider/PrivateProvider.java
++++ b/src/com/transage/privatespace/provider/PrivateProvider.java
+@@ -6,7 +6,6 @@ import android.content.UriMatcher;
+ import android.database.Cursor;
+ import android.net.Uri;
+ import android.util.Log;
+-
+ import com.transage.privatespace.database.DatabaseAdapter;
+ import com.transage.privatespace.utils.ImportExportUtils;
+ 
+@@ -19,12 +18,12 @@ import com.transage.privatespace.utils.ImportExportUtils;
+ public class PrivateProvider extends ContentProvider{
+     private static final String TAG = "PrivateProvider";
+     //这里的AUTHORITY就是我们在AndroidManifest.xml中配置的authorities
+-    private static final String AUTHORITY = "com.transage.privatespace";
++    public static final String AUTHORITY = "com.transage.privatespace";
+     //匹配成功后的匹配码
+-    private static final int MATCH_PHONE = 100;
+-    private static final int MATCH_SMS = 101;
+-    private static final int MATCH_CALL = 102;
+-    private static UriMatcher uriMatcher;
++    public static final int MATCH_PHONE = 100;
++    public static final int MATCH_SMS = 101;
++    public static final int MATCH_CALL = 102;
++    public static UriMatcher uriMatcher;
+ 
+     //在静态代码块中添加要匹配的 Uri
+     static {
+@@ -63,6 +62,8 @@ public class PrivateProvider extends ContentProvider{
+                 break;
+             case MATCH_SMS:
+                 //查询短信
++                Log.e("wangmeng","=======MATCH_SMS query======>");
++                cursor = mDbAdapter.getSmsCursor(selection,selectionArgs);
+                 break;
+             case MATCH_CALL:
+                 //查询通话记录
+@@ -85,13 +86,15 @@ public class PrivateProvider extends ContentProvider{
+                 break;
+             case MATCH_SMS:
+                 //insert短信
++                Log.e("wangmeng","=======MATCH_SMS insert======>");
++                mDbAdapter.insertSms(contentValues);
+                 break;
+             case MATCH_CALL:
+                 //insert通话记录
+                 mDbAdapter.insertCallLog(contentValues);
+                 break;
+         }
+-        getContext().getContentResolver().notifyChange(uri, null);
++        getContext().getContentResolver().notifyChange(uri,null);
+         return uri;
+     }
+ 
diff --git "a/privatespace_submitruipan14.diff" "b/privatespace_submitruipan14.diff"
new file mode 100755
index 0000000..f2cc779
--- /dev/null
+++ "b/privatespace_submitruipan14.diff"
@@ -0,0 +1,221 @@
+diff --git a/src/com/transage/privatespace/PrivateSpaceApplication.java b/src/com/transage/privatespace/PrivateSpaceApplication.java
+index 4e425c5..dee043e 100755
+--- a/src/com/transage/privatespace/PrivateSpaceApplication.java
++++ b/src/com/transage/privatespace/PrivateSpaceApplication.java
+@@ -5,7 +5,6 @@ import android.app.Application;
+ import android.content.ComponentName;
+ import android.content.Context;
+ import android.content.Intent;
+-import android.util.Log;
+ 
+ import com.transage.privatespace.activity.EmptyActivity;
+ 
+@@ -25,9 +24,9 @@ public class PrivateSpaceApplication extends Application {
+         List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);
+         if (!tasks.isEmpty()) {
+             ComponentName topActivity = tasks.get(0).topActivity;
+-            Log.d("PrivateSpaceApplication", topActivity.getPackageName());
++            //Log.d("PrivateSpaceApplication", topActivity.getPackageName());
+             if (!topActivity.getPackageName().equals(getPackageName())) {
+-                Log.d("PrivateSpaceApplication", "go to background");
++                //Log.d("PrivateSpaceApplication", "go to background");
+                 Intent intent = new Intent(this,EmptyActivity.class);
+                 intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+                 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+diff --git a/src/com/transage/privatespace/activity/AdvancedSetup.java b/src/com/transage/privatespace/activity/AdvancedSetup.java
+index 4cf5d36..9736d6f 100755
+--- a/src/com/transage/privatespace/activity/AdvancedSetup.java
++++ b/src/com/transage/privatespace/activity/AdvancedSetup.java
+@@ -45,11 +45,6 @@ public class AdvancedSetup extends BaseActivity implements View.OnClickListener,
+         Switch aSwitch3 = (Switch) findViewById(R.id.switch3);
+         Switch aSwitch4 = (Switch) findViewById(R.id.switch4);
+         Switch switchSaveVcf = (Switch) findViewById(R.id.switch_save_by_cvf);
+-        aSwitch1.setOnCheckedChangeListener(this);
+-        aSwitch2.setOnCheckedChangeListener(this);
+-        aSwitch3.setOnCheckedChangeListener(this);
+-        aSwitch4.setOnCheckedChangeListener(this);
+-        switchSaveVcf.setOnCheckedChangeListener(this);
+         // 根据xml中保存的开关状态 设置switch状态
+         if (Login.sp.getBoolean("enterByPrivateFingerprint", false)) {
+             aSwitch1.setChecked(true);
+@@ -71,8 +66,13 @@ public class AdvancedSetup extends BaseActivity implements View.OnClickListener,
+         } else {
+             aSwitch4.setChecked(false);
+         }
+-        
+         switchSaveVcf.setChecked(ImportExportUtils.isVcf(this));
++        //checkChange监听
++        aSwitch1.setOnCheckedChangeListener(this);
++        aSwitch2.setOnCheckedChangeListener(this);
++        aSwitch3.setOnCheckedChangeListener(this);
++        aSwitch4.setOnCheckedChangeListener(this);
++        switchSaveVcf.setOnCheckedChangeListener(this);
+     }
+ 
+     // switch的CheckedChanged监听
+diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
+index 33630d2..f85253e 100755
+--- a/src/com/transage/privatespace/activity/Login.java
++++ b/src/com/transage/privatespace/activity/Login.java
+@@ -3,7 +3,7 @@ package com.transage.privatespace.activity;
+ import android.animation.AnimatorSet;
+ import android.animation.ObjectAnimator;
+ import android.annotation.SuppressLint;
+-import android.app.Activity;
++import android.content.ComponentName;
+ import android.content.ContentResolver;
+ import android.content.Context;
+ import android.content.Intent;
+@@ -20,7 +20,6 @@ import android.support.v7.app.AlertDialog;
+ import android.text.TextUtils;
+ import android.text.method.HideReturnsTransformationMethod;
+ import android.text.method.PasswordTransformationMethod;
+-import android.util.Log;
+ import android.view.KeyEvent;
+ import android.view.LayoutInflater;
+ import android.view.View;
+@@ -89,10 +88,9 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+         super.onResume();
+         //注册指纹监听
+         if (!isFirstRun && sp.getBoolean("enterByPrivateFingerprint", false)
+-                && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()
+                 && !resetPrivateMarkFromAdvancedSetup && !resetPrivateMarkFromSecurityQuestion) {
+-            retryFingerprint();
+-            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()) {
++            retryFingerprint();//注册指纹监听
++            if (FingerprintManagerCompat.from(this).hasEnrolledFingerprints() && null != dialogFingerPrint && !dialogFingerPrint.isShowing()) {
+                 dialogFingerPrint.show();
+             }
+             btFingerprint.setVisibility(View.VISIBLE);
+@@ -100,6 +98,12 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+         }
+     }
+ 
++    @Override
++    protected void onPause() {
++        stopFingerprint();//注销指纹监听
++        super.onPause();
++    }
++
+     /**
+      * 初始化数据
+      */
+@@ -163,6 +167,13 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+                 }
+                 break;
+             case R.id.bt_finger_print://指纹登录按钮
++                if (!FingerprintManagerCompat.from(this).hasEnrolledFingerprints()){
++                    Intent intent = new Intent();
++                    ComponentName cn = new ComponentName("com.android.settings", "com.android.settings.fingerprint.FingerprintLauncher");
++                    intent.setComponent(cn);
++                    startActivity(intent);
++                    break;
++                }
+                 retryFingerprint();
+                 dialogFingerPrint.show();
+                 break;
+@@ -301,23 +312,10 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+     // 返回键
+     @Override
+     public void onBackPressed() {
+-        if (!isFirstRun && !isChangePrivateMark) { // 处于日常登录界面
+-            finish();
+-        }
+         if (!isFirstRun && isChangePrivateMark) { // 处于修改密码界面
+             isChangePrivateMark = false;
+-            finish();
+-            return;
+-        }
+-        if (isFirstRun) { // 首次运行
+-            finish();
+         }
+-    }
+-
+-    @Override
+-    public void onStop(){
+-        super.onStop();
+-        stopFingerprint();//停止指纹监听
++        finish();
+     }
+ 
+     /**
+@@ -348,7 +346,7 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+                         textView3.setVisibility(View.GONE);
+                         frameLayout2.setVisibility(View.VISIBLE);
+                         editText1.setText(null);
+-                    } else { // 验证成功后：日常登录
++                    } else if (!Login.this.isFinishing()){ // 验证成功后：日常登录,且界面没有finish
+                         startActivity(new Intent(Login.this, Main.class));
+                         finish();
+                     }
+@@ -462,6 +460,7 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+     private void stopFingerprint() {
+         try {
+             mFingerprintCancel.cancel();
++            mFingerprintCancel = null;
+         } catch (Exception e) {
+             e.printStackTrace();
+         }
+diff --git a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+index 2d3f705..7a62729 100755
+--- a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
++++ b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+@@ -288,11 +288,14 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+         protected Boolean doInBackground(Void... params) {
+             boolean result = false;
+             result = decryptFileList(listPrivFliePath); //解密文件集合
++            int totalTime = 0;
+             while (result && getApplicationContext().getContentResolver().
+                     query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, null, null, null, null).getCount()
+-                    != (startSize + listPrivFliePath.size())) {
++                    != (startSize + listPrivFliePath.size()) && totalTime < listPrivFliePath.size()/2) {
+                 try {
+                     Thread.sleep(2000);
++                    totalTime +=2;
++                    //Log.d("DecryptionTask", "totalTime:" + totalTime);
+                 } catch (InterruptedException e) {
+                     e.printStackTrace();
+                 }
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Album.java b/src/com/transage/privatespace/gallery/photozoom/Album.java
+index 27173f5..e30a8ca 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Album.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Album.java
+@@ -74,6 +74,9 @@ public class Album extends BaseActivity implements OnClickListener {
+         if (null != progressDialog && progressDialog.isShowing()) {
+             progressDialog.dismiss();
+         }
++/*        if (null != mTask && !mTask.isCancelled()){
++            mTask.cancel(true);
++        }*/
+     }
+ 
+     //////////////////////////////////////////////////////////////////////////////////////////
+@@ -132,9 +135,12 @@ public class Album extends BaseActivity implements OnClickListener {
+         protected Boolean doInBackground(Void... params) {
+             boolean result = false;
+             result = encryptFileList(mImageArrayList); //加密文件集合
+-            while (result && databaseAdapter.getPhoto().size() != (startSize + mImageArrayList.size())) {
++            int totalTime = 0;
++            while (result && databaseAdapter.getPhoto().size() != (startSize + mImageArrayList.size()) && totalTime < mImageArrayList.size()) {
+                 try {
+                     Thread.sleep(2000);
++                    totalTime += 2;
++                    //Log.d("EncryptionTask", "totalTime:" + totalTime);
+                 } catch (InterruptedException e) {
+                     e.printStackTrace();
+                 }
+@@ -208,8 +214,12 @@ public class Album extends BaseActivity implements OnClickListener {
+         contentValues.put(PsDatabaseHelper.FilesClumns.MIME_TYPE,item.getMimeType());
+         contentValues.put(PsDatabaseHelper.FilesClumns.BUCKET_ID,item.getBucketId());
+         contentValues.put(PsDatabaseHelper.FilesClumns.BUCKET_DISPLAY_NAME,item.getBucket_display_name());
+-        contentValues.put(PsDatabaseHelper.FilesClumns.WIDTH,Integer.valueOf(item.getWidth()));
+-        contentValues.put(PsDatabaseHelper.FilesClumns.HEIGHT,Integer.valueOf(item.getHeight()));
++        try {
++            contentValues.put(PsDatabaseHelper.FilesClumns.WIDTH,Integer.valueOf(item.getWidth()));
++            contentValues.put(PsDatabaseHelper.FilesClumns.HEIGHT,Integer.valueOf(item.getHeight()));
++        } catch (NumberFormatException e) {
++            e.printStackTrace();
++        }
+         databaseAdapter.insertPhoto(contentValues);
+     }
+ 
diff --git "a/privatespace_submit/32\345\242\236\345\212\240\346\225\260\346\215\256\347\232\204\346\216\222\345\272\217\343\200\201\347\247\201\345\257\206\347\233\270\345\206\214\346\227\240\345\233\276\346\217\220\347\244\272/ruipan15.diff" "b/privatespace_submit/32\345\242\236\345\212\240\346\225\260\346\215\256\347\232\204\346\216\222\345\272\217\343\200\201\347\247\201\345\257\206\347\233\270\345\206\214\346\227\240\345\233\276\346\217\220\347\244\272/ruipan15.diff"
new file mode 100755
index 0000000..fa48198
--- /dev/null
+++ "b/privatespace_submit/32\345\242\236\345\212\240\346\225\260\346\215\256\347\232\204\346\216\222\345\272\217\343\200\201\347\247\201\345\257\206\347\233\270\345\206\214\346\227\240\345\233\276\346\217\220\347\244\272/ruipan15.diff"
@@ -0,0 +1,120 @@
+diff --git a/res/layout/activity_private_album.xml b/res/layout/activity_private_album.xml
+index a88e76a..e3bea4b 100755
+--- a/res/layout/activity_private_album.xml
++++ b/res/layout/activity_private_album.xml
+@@ -44,6 +44,16 @@
+         android:layout_width="match_parent"
+         android:layout_height="match_parent">
+ 
++        <TextView
++            android:id="@+id/tv_no_picture"
++            android:layout_width="wrap_content"
++            android:text="@string/no_picture"
++            android:visibility="gone"
++            android:textSize="18sp"
++            android:textColor="@color/greytext"
++            android:layout_gravity="center"
++            android:layout_height="wrap_content"/>
++
+         <GridView
+             android:id="@+id/album_GridView"
+             android:layout_width="match_parent"
+diff --git a/res/values/strings.xml b/res/values/strings.xml
+index 1d23ed7..d7194b0 100755
+--- a/res/values/strings.xml
++++ b/res/values/strings.xml
+@@ -64,5 +64,6 @@
+     <string name="private_album">私密相册</string>
+     <string name="add_private_photo">添加私密图片</string>
+     <string name="click_login_by_finger_print">点击进行指纹登录</string>
++    <string name="no_picture">没 有 图 片</string>
+ 
+ </resources>
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index fc22fa2..d14dc96 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -429,7 +429,7 @@ public class DatabaseAdapter {
+      * 获取私密数据库中图片数据的操作
+      */
+     public ArrayList<ImageItem> getPhoto() {
+-        String sql = "SELECT * " + " FROM " + PsDatabaseHelper.Tables.FILES;
++        String sql = "SELECT * " + " FROM " + PsDatabaseHelper.Tables.FILES + " ORDER BY " + PsDatabaseHelper.FilesClumns._ID + " DESC ";
+         Log.i(TAG, "sql = " + sql);
+         ArrayList<ImageItem> list = new ArrayList<>();
+         Cursor cursor = query(sql, null);
+diff --git a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+index 7a62729..f873e0b 100755
+--- a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
++++ b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+@@ -14,6 +14,7 @@ import android.widget.AbsListView;
+ import android.widget.CheckBox;
+ import android.widget.GridView;
+ import android.widget.ImageView;
++import android.widget.TextView;
+ import android.widget.Toast;
+ 
+ import com.bumptech.glide.Glide;
+@@ -48,6 +49,7 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+     private static DatabaseAdapter databaseAdapter;
+     private ProgressDialog progressDialog;
+     private VisibleImageDecryptionTask visibleImageDecryptionTask;
++    private static TextView tvNoPicture;
+ 
+     @Override
+     protected void onCreate(@Nullable Bundle savedInstanceState) {
+@@ -80,6 +82,7 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+         findViewById(R.id.checkbox_select_all).setOnClickListener(this);
+         findViewById(R.id.button_back).setOnClickListener(this);
+         findViewById(R.id.button_min).setOnClickListener(this);
++        tvNoPicture = (TextView) findViewById(R.id.tv_no_picture);
+ 
+ //        dateList = databaseAdapter.getPhoto();//数据
+         Log.d("PrivateAlbum", "dateList.size():" + dateList.size());
+@@ -92,6 +95,11 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+ 
+     }
+ 
++    //无图片时，展示提示语
++    public static void showNoPictureTip(){
++        tvNoPicture.setVisibility(View.VISIBLE);
++    }
++
+     /**
+      * 加载首屏数据的方法
+      */
+diff --git a/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java b/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java
+index 2cc3284..e82b740 100755
+--- a/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java
++++ b/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java
+@@ -11,6 +11,7 @@ import android.widget.ImageView;
+ 
+ import com.bumptech.glide.Glide;
+ import com.transage.privatespace.R;
++import com.transage.privatespace.gallery.activity.PrivateAlbum;
+ import com.transage.privatespace.gallery.photozoom.Bimp;
+ import com.transage.privatespace.gallery.photozoom.Gallery;
+ import com.transage.privatespace.gallery.photozoom.ImageItem;
+@@ -77,6 +78,9 @@ public class PrivateAlbumGridViewAdapter extends BaseAdapter {
+ 
+ 
+     public int getCount() {
++        if (listPrivFlies.size() == 0){
++            PrivateAlbum.showNoPictureTip();
++        }
+         return listPrivFlies.size();
+     }
+ 
+diff --git a/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java b/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java
+index 08e2fe0..f831e70 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java
++++ b/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java
+@@ -139,7 +139,7 @@ public class AlbumHelper {
+ 		String columns[] = new String[] { Media._ID, Media.BUCKET_ID,
+ 				Media.PICASA_ID, Media.DATA, Media.DISPLAY_NAME, Media.TITLE,
+ 				Media.SIZE, Media.BUCKET_DISPLAY_NAME ,Media.DATE_ADDED,Media.MIME_TYPE,Media.WIDTH,Media.HEIGHT};
+-		Cursor cur = cr.query(Media.EXTERNAL_CONTENT_URI, columns, null, null, Media.DATE_ADDED+" desc");
++		Cursor cur = cr.query(Media.EXTERNAL_CONTENT_URI, columns, null, null, Media._ID+" DESC ");
+ 		bucketList.clear();//add by dongrp
+ 		if (cur.moveToFirst()) {
+ 			int photoIDIndex = cur.getColumnIndexOrThrow(Media._ID);
diff --git "a/privatespace_submit/33\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\347\273\223\345\220\210\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273\357\274\214\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256/yanjie10.diff" "b/privatespace_submit/33\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\347\273\223\345\220\210\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273\357\274\214\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256/yanjie10.diff"
new file mode 100755
index 0000000..7695f6b
--- /dev/null
+++ "b/privatespace_submit/33\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\347\273\223\345\220\210\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273\357\274\214\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256/yanjie10.diff"
@@ -0,0 +1,1171 @@
+diff --git a/src/com/transage/privatespace/bean/ContactInfo.java b/src/com/transage/privatespace/bean/ContactInfo.java
+index 85d2adc..be4c234 100755
+--- a/src/com/transage/privatespace/bean/ContactInfo.java
++++ b/src/com/transage/privatespace/bean/ContactInfo.java
+@@ -1,6 +1,7 @@
+ package com.transage.privatespace.bean;
+ 
+ import java.io.BufferedReader;
++import java.io.ByteArrayInputStream;
+ import java.io.FileInputStream;
+ import java.io.FileNotFoundException;
+ import java.io.FileOutputStream;
+@@ -25,6 +26,8 @@ import android.app.Activity;
+ import android.content.ContentUris;
+ import android.content.ContentValues;
+ import android.database.Cursor;
++import android.graphics.Bitmap;
++import android.graphics.BitmapFactory;
+ import android.net.Uri;
+ import android.os.Environment;
+ import android.provider.ContactsContract;
+@@ -39,352 +42,156 @@ import android.widget.Toast;
+ /**
+  * 联系人信息包装类
+  * <p>
+- * Created by yanjie.xu on 2017/7/19.
++ * Created by yanjie.xu on 2017/8/24.
+  */
+ public class ContactInfo {
+     private static final String TAG = "ContactInfo";
+-    /**
+-     * MUST exist
+-     */
+-    private String name; // 姓名
+-
+-    /**
+-     * 联系人电话信息
+-     */
+-    public static class PhoneInfo {
+-        /**
+-         * 联系电话类型
+-         */
+-        public int type;
+-        /**
+-         * 联系电话
+-         */
+-        public String number;
++    private int contactId;
++    private int hasPhoneNumber;
++    private int photoFileId;
++    private String displayName;
++    private byte[] photoData;
++    private Bitmap photo;
++    private List<RawContactInfo> rawContactInfos = new ArrayList<>();
++
++    public static class RawContactInfo {
++        public int rawContactId;
++        public int contactId;
++        public String accountName;
++        public String accountType;
++        public List<DataInfo> dataInfos = new ArrayList<>();
++
++        @Override
++        public String toString() {
++            return "RawContactInfo{" +
++                    "rawContactId=" + rawContactId +
++                    ", contactId=" + contactId +
++                    ", accountName='" + accountName + '\'' +
++                    ", accountType='" + accountType + '\'' +
++                    ", dataInfos=" + dataInfos +
++                    '}';
++        }
+     }
+ 
+-    /**
+-     * 联系人邮箱信息
+-     */
+-    public static class EmailInfo {
+-        /**
+-         * 邮箱类型
+-         */
+-        public int type;
+-        /**
+-         * 邮箱
+-         */
+-        public String email;
++    public static class DataInfo {
++        public String mimeType;
++        public String type;
++        public String typeName;
++        public int rawContactId;
++        public String data1;
++        public String data2;
++        public String data3;
++        public String data4;
++        public String data5;
++        public String data6;
++        public String data7;
++        public String data8;
++        public String data9;
++        public String data10;
++        public String data11;
++        public String data12;
++        public String data13;
++        public String data14;
++        public String data15;
++
++        @Override
++        public String toString() {
++            return "DataInfo{" +
++                    "mimeType='" + mimeType + '\'' +
++                    ", type='" + type + '\'' +
++                    ", typeName='" + typeName + '\'' +
++                    ", rawContactId=" + rawContactId +
++                    ", data1='" + data1 + '\'' +
++                    ", data2='" + data2 + '\'' +
++                    ", data3='" + data3 + '\'' +
++                    ", data4='" + data4 + '\'' +
++                    ", data5='" + data5 + '\'' +
++                    ", data6='" + data6 + '\'' +
++                    ", data7='" + data7 + '\'' +
++                    ", data8='" + data8 + '\'' +
++                    ", data9='" + data9 + '\'' +
++                    ", data10='" + data10 + '\'' +
++                    ", data11='" + data11 + '\'' +
++                    ", data12='" + data12 + '\'' +
++                    ", data13='" + data13 + '\'' +
++                    ", data14='" + data14 + '\'' +
++                    ", data15='" + data15 + '\'' +
++                    '}';
++        }
+     }
+ 
+-    private List<PhoneInfo> phoneList = new ArrayList<PhoneInfo>(); // 联系号码
+-
+-    private List<EmailInfo> email = new ArrayList<EmailInfo>(); // Email
+-
+-    /**
+-     * 构造联系人信息
+-     *
+-     * @param name 联系人姓名
+-     */
+-    public ContactInfo(String name) {
+-        this.name = name;
++    public List<RawContactInfo> getRawContactInfos() {
++        return rawContactInfos;
+     }
+ 
+-    /**
+-     * 姓名
+-     */
+-    public String getName() {
+-        return name;
++    public void setRawContactInfos(List<RawContactInfo> rawContactInfos) {
++        this.rawContactInfos = rawContactInfos;
+     }
+ 
+-    /**
+-     * 姓名
+-     */
+-    public ContactInfo setName(String name) {
+-        this.name = name;
+-        return this;
++    public int getContactId() {
++        return contactId;
+     }
+ 
+-    /**
+-     * 联系电话信息
+-     */
+-    public List<PhoneInfo> getPhoneList() {
+-        return phoneList;
++    public void setContactId(int contactId) {
++        this.contactId = contactId;
+     }
+ 
+-    /**
+-     * 联系电话信息
+-     */
+-    public ContactInfo setPhoneList(List<PhoneInfo> phoneList) {
+-        this.phoneList = phoneList;
+-        return this;
++    public int getHasPhoneNumber() {
++        return hasPhoneNumber;
+     }
+ 
+-    /**
+-     * 邮箱信息
+-     */
+-    public List<EmailInfo> getEmail() {
+-        return email;
++    public void setHasPhoneNumber(int hasPhoneNumber) {
++        this.hasPhoneNumber = hasPhoneNumber;
+     }
+ 
+-    /**
+-     * 邮箱信息
+-     */
+-    public ContactInfo setEmail(List<EmailInfo> email) {
+-        this.email = email;
+-        return this;
++    public int getPhotoFileId() {
++        return photoFileId;
+     }
+ 
+-    @Override
+-    public String toString() {
+-        return "{name: " + name + ", number: " + phoneList + ", email: " + email + "}";
++    public void setPhotoFileId(int photoFileId) {
++        this.photoFileId = photoFileId;
+     }
+ 
++    public String getDisplayName() {
++        return displayName;
++    }
+ 
+-    /**
+-     * 联系人
+-     * 备份/还原操作
+-     *
+-     * @author LW
+-     */
+-    public static class ContactHandler {
+-        private static ContactHandler instance_ = new ContactHandler();
+-
+-        /**
+-         * 获取实例
+-         */
+-        public static ContactHandler getInstance() {
+-            return instance_;
+-        }
+-
+-        /**
+-         * 获取联系人指定信息
+-         *
+-         * @param projection 指定要获取的列数组, 获取全部列则设置为null
+-         * @return
+-         * @throws Exception
+-         */
+-
+-        public Cursor queryContact(Activity context, String[] projection) {
+-            // 获取联系人的所需信息
+-            Cursor cur = context.getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, projection, null, null, null);
+-            return cur;
+-        }
+-
+-
+-        /**
+-         * 获取联系人信息
+-         *
+-         * @param context
+-         * @return
+-         */
+-        public List<ContactInfo> getContactInfo(Activity context) {
+-            List<ContactInfo> infoList = new ArrayList<ContactInfo>();
+-            Cursor cur = queryContact(context, null);
+-            if (cur.moveToFirst()) {
+-                do {
+-                    // 获取联系人id号
+-                    String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
+-                    // 获取联系人姓名
+-                    String displayName = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
+-                    ContactInfo info = new ContactInfo(displayName);// 初始化联系人信息
+-                    // 查看联系人有多少电话号码, 如果没有返回0
+-                    int phoneCount = cur.getInt(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
+-
+-//                    ContentValues values = new ContentValues();
+-//                    values.put(ContactsContract.Contacts.IS_PRIVATE_CONTACTS, 0);
+-//                    context.getContentResolver().update(ContactsContract.Contacts.CONTENT_URI, values, ContactsContract.Contacts.NAME_RAW_CONTACT_ID + "= ?", null);
+-                    Log.i(TAG, "getContactInfo()->info = " + info.toString());
+-
+-                    if (phoneCount > 0) {
+-                        Cursor phonesCursor = context.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID + "=?" , new String[]{id}, null);
+-                        Log.i(TAG, "getContactInfo()->info = " + info.toString());
+-                        if (phonesCursor.moveToFirst()) {
+-                            List<ContactInfo.PhoneInfo> phoneNumberList = new ArrayList<ContactInfo.PhoneInfo>();
+-                            do {
+-                                // 遍历所有电话号码
+-                                String phoneNumber = phonesCursor.getString(phonesCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
+-                                // 对应的联系人类型
+-                                int type = phonesCursor.getInt(phonesCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.TYPE));
+-                                // 初始化联系人电话信息
+-                                ContactInfo.PhoneInfo phoneInfo = new ContactInfo.PhoneInfo();
+-                                phoneInfo.type = type;
+-                                phoneInfo.number = phoneNumber;
+-                                phoneNumberList.add(phoneInfo);
+-                            } while (phonesCursor.moveToNext());
+-                            // 设置联系人电话信息
+-                            info.setPhoneList(phoneNumberList);
+-                        }
+-                    }
+-
+-                    // 获得联系人的EMAIL
+-                    Cursor emailCur = context.getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,
+-                            null, ContactsContract.CommonDataKinds.Email.CONTACT_ID + "=" + id, null, null);
+-                    if (emailCur.moveToFirst()) {
+-                        List<ContactInfo.EmailInfo> emailList = new ArrayList<ContactInfo.EmailInfo>();
+-                        do {
+-                            // 遍历所有的email
+-                            String email = emailCur.getString(emailCur.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA1));
+-                            int type = emailCur.getInt(emailCur.getColumnIndex(ContactsContract.CommonDataKinds.Email.TYPE));
+-                            // 初始化联系人邮箱信息
+-                            ContactInfo.EmailInfo emailInfo = new ContactInfo.EmailInfo();
+-                            emailInfo.type = type;    // 设置邮箱类型
+-                            emailInfo.email = email;    // 设置邮箱地址
+-                            emailList.add(emailInfo);
+-                        } while (emailCur.moveToNext());
+-                        info.setEmail(emailList);
+-                    }
++    public void setDisplayName(String displayName) {
++        this.displayName = displayName;
++    }
+ 
+-                    //Cursor postalCursor = getContentResolver().query(ContactsContract.CommonDataKinds.StructuredPostal.CONTENT_URI, null, ContactsContract.CommonDataKinds.StructuredPostal.CONTACT_ID + "=" + id, null, null);
+-                    Log.i(TAG, "getContactInfo()->info = " + info.toString());
+-                    infoList.add(info);
++    public byte[] getPhotoData() {
++        return photoData;
++    }
+ 
+-                } while (cur.moveToNext());
+-            }
+-            return infoList;
+-        }
++    public void setPhotoData(byte[] photoData) {
++        this.photoData = photoData;
++    }
+ 
+-        /**
+-         * 备份联系人
+-         */
+-        public void backupContacts(Activity context, List<ContactInfo> infos) {
++    public void addRawContact(RawContactInfo info){
++        rawContactInfos.add(info);
++    }
+ 
+-            try {
+-                String path = Environment.getExternalStorageDirectory() + "/contacts.vcf";
+-                Log.i(TAG, "backupContacts()->file = " + path);
+-                OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(path), "UTF-8");
+-                VCardComposer composer = new VCardComposer();
+-                for (ContactInfo info : infos) {
+-                    ContactStruct contact = new ContactStruct();
+-                    contact.name = info.getName();
+-                    // 获取联系人电话信息, 添加至 ContactStruct
+-                    List<ContactInfo.PhoneInfo> numberList = info
+-                            .getPhoneList();
+-                    for (ContactInfo.PhoneInfo phoneInfo : numberList) {
+-                        contact.addPhone(phoneInfo.type, phoneInfo.number, null, true);
+-                    }
+-                    // 获取联系人Email信息, 添加至 ContactStruct
+-                    List<ContactInfo.EmailInfo> emailList = info.getEmail();
+-                    for (ContactInfo.EmailInfo emailInfo : emailList) {
+-                        contact.addContactmethod(Contacts.KIND_EMAIL, emailInfo.type, emailInfo.email, null, true);
+-                    }
+-                    String vcardString = composer.createVCard(contact, VCardComposer.VERSION_VCARD30_INT);
+-                    writer.write(vcardString);
+-                    writer.write("\n");
+-                    writer.flush();
+-                }
+-                writer.close();
+-            } catch (UnsupportedEncodingException e) {
+-                e.printStackTrace();
+-            } catch (FileNotFoundException e) {
+-                e.printStackTrace();
+-            } catch (VCardException e) {
+-                e.printStackTrace();
+-            } catch (IOException e) {
+-                e.printStackTrace();
+-            }
+-            Toast.makeText(context, "备份成功！", Toast.LENGTH_SHORT).show();
++    public Bitmap getPhoto(){
++        if (photo!=null){
++            return photo;
+         }
+ 
+-        /**
+-         * 获取vCard文件中的联系人信息
+-         *
+-         * @return
+-         */
+-        public List<ContactInfo> restoreContacts() throws Exception {
+-            List<ContactInfo> contactInfoList = new ArrayList<ContactInfo>();
+-
+-            VCardParser parse = new VCardParser();
+-            VDataBuilder builder = new VDataBuilder();
+-            String file = Environment.getExternalStorageDirectory() + "/contacts.vcf";
+-            Log.i(TAG, "restoreContacts()->file = " + file);
+-            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
+-            String vcardString = "";
+-            String line;
+-            while ((line = reader.readLine()) != null) {
+-                vcardString += line + "\n";
+-            }
+-            reader.close();
+-            Log.i(TAG, "restoreContacts()->vcardString = " + vcardString);
+-            boolean parsed = parse.parse(vcardString, "UTF-8", builder);
+-            if (!parsed) {
+-                throw new VCardException("Could not parse vCard file: " + file);
+-            }
+-            List<VNode> pimContacts = builder.vNodeList;
+-            for (VNode contact : pimContacts) {
+-                ContactStruct contactStruct = ContactStruct.constructContactFromVNode(contact, 1);
+-                // 获取备份文件中的联系人电话信息
+-                List<PhoneData> phoneDataList = contactStruct.phoneList;
+-                List<ContactInfo.PhoneInfo> phoneInfoList = new ArrayList<ContactInfo.PhoneInfo>();
+-                for (PhoneData phoneData : phoneDataList) {
+-                    ContactInfo.PhoneInfo phoneInfo = new ContactInfo.PhoneInfo();
+-                    phoneInfo.number = phoneData.data;
+-                    phoneInfo.type = phoneData.type;
+-                    phoneInfoList.add(phoneInfo);
+-                }
+-                // 获取备份文件中的联系人邮箱信息
+-                List<ContactMethod> emailList = contactStruct.contactmethodList;
+-                List<ContactInfo.EmailInfo> emailInfoList = new ArrayList<ContactInfo.EmailInfo>();
+-                // 存在 Email 信息
+-                if (null != emailList) {
+-                    for (ContactMethod contactMethod : emailList) {
+-                        if (Contacts.KIND_EMAIL == contactMethod.kind) {
+-                            ContactInfo.EmailInfo emailInfo = new ContactInfo.EmailInfo();
+-                            emailInfo.email = contactMethod.data;
+-                            emailInfo.type = contactMethod.type;
+-                            emailInfoList.add(emailInfo);
+-                        }
+-                    }
+-                }
+-                ContactInfo info = new ContactInfo(contactStruct.name).setPhoneList(phoneInfoList).setEmail(emailInfoList);
+-                contactInfoList.add(info);
+-            }
+-            return contactInfoList;
++        if(photoData == null) {
++            return null;
+         }
+ 
+-        /**
+-         * 向手机中录入联系人信息
+-         *
+-         * @param info 要录入的联系人信息
+-         */
+-        public void addContacts(Activity context, ContactInfo info) {
+-            ContentValues values = new ContentValues();
+-            //首先向RawContacts.CONTENT_URI执行一个空值插入，目的是获取系统返回的rawContactId
+-            Uri rawContactUri = context.getContentResolver().insert(RawContacts.CONTENT_URI, values);
+-            long rawContactId = ContentUris.parseId(rawContactUri);
+-            //往data表入姓名数据
+-            values.clear();
+-            values.put(Data.RAW_CONTACT_ID, rawContactId);
+-            values.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);
+-            values.put(StructuredName.GIVEN_NAME, info.getName());
+-            context.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, values);
+-            // 获取联系人电话信息
+-            List<ContactInfo.PhoneInfo> phoneList = info.getPhoneList();
+-            /** 录入联系电话 */
+-            for (ContactInfo.PhoneInfo phoneInfo : phoneList) {
+-                values.clear();
+-                values.put(android.provider.ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
+-                values.put(Data.MIMETYPE, Phone.CONTENT_ITEM_TYPE);
+-                // 设置录入联系人电话信息
+-                values.put(Phone.NUMBER, phoneInfo.number);
+-                values.put(Phone.TYPE, phoneInfo.type);
+-                // 往data表入电话数据
+-                context.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, values);
+-
+-            }
+-            // 获取联系人邮箱信息
+-            List<ContactInfo.EmailInfo> emailList = info.getEmail();
+-            /** 录入联系人邮箱信息 */
+-            for (ContactInfo.EmailInfo email : emailList) {
+-                values.clear();
+-                values.put(android.provider.ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
+-                values.put(Data.MIMETYPE, Email.CONTENT_ITEM_TYPE);
+-                // 设置录入的邮箱信息
+-                values.put(Email.DATA, email.email);
+-                values.put(Email.TYPE, email.type);
+-                // 往data表入Email数据
+-                context.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, values);
++        ByteArrayInputStream var6 = new ByteArrayInputStream(photoData);
++        photo = BitmapFactory.decodeStream(var6);
++        return photo;
++    }
+ 
+-            }
+-        }
++    @Override
++    public String toString() {
++        return "ContactInfo{" +
++                "contactId=" + contactId +
++                ", hasPhoneNumber=" + hasPhoneNumber +
++                ", displayName='" + displayName + '\'' +
++                '}';
+     }
+ }
+diff --git a/src/com/transage/privatespace/bean/ContactInfoBack.java b/src/com/transage/privatespace/bean/ContactInfoBack.java
+new file mode 100755
+index 0000000..2c21940
+--- /dev/null
++++ b/src/com/transage/privatespace/bean/ContactInfoBack.java
+@@ -0,0 +1,391 @@
++package com.transage.privatespace.bean;
++
++import java.io.BufferedReader;
++import java.io.FileInputStream;
++import java.io.FileNotFoundException;
++import java.io.FileOutputStream;
++import java.io.IOException;
++import java.io.InputStreamReader;
++import java.io.OutputStreamWriter;
++import java.io.UnsupportedEncodingException;
++import java.util.ArrayList;
++import java.util.List;
++
++import com.transage.privatespace.vcard.provider.Contacts;
++import com.transage.privatespace.vcard.pim.VDataBuilder;
++import com.transage.privatespace.vcard.pim.VNode;
++import com.transage.privatespace.vcard.pim.vcard.ContactStruct;
++import com.transage.privatespace.vcard.pim.vcard.ContactStruct.ContactMethod;
++import com.transage.privatespace.vcard.pim.vcard.ContactStruct.PhoneData;
++import com.transage.privatespace.vcard.pim.vcard.VCardComposer;
++import com.transage.privatespace.vcard.pim.vcard.VCardException;
++import com.transage.privatespace.vcard.pim.vcard.VCardParser;
++
++import android.app.Activity;
++import android.content.ContentUris;
++import android.content.ContentValues;
++import android.database.Cursor;
++import android.net.Uri;
++import android.os.Environment;
++import android.provider.ContactsContract;
++import android.provider.ContactsContract.CommonDataKinds.Email;
++import android.provider.ContactsContract.CommonDataKinds.Phone;
++import android.provider.ContactsContract.CommonDataKinds.StructuredName;
++import android.provider.ContactsContract.RawContacts;
++import android.provider.ContactsContract.RawContacts.Data;
++import android.util.Log;
++import android.widget.Toast;
++
++/**
++ * 联系人信息包装类
++ * <p>
++ * Created by yanjie.xu on 2017/7/19.
++ */
++public class ContactInfoBack {
++    private static final String TAG = "ContactInfoBack";
++    /**
++     * MUST exist
++     */
++    private String name; // 姓名
++
++    /**
++     * 联系人电话信息
++     */
++    public static class PhoneInfo {
++        /**
++         * 联系电话类型
++         */
++        public int type;
++        /**
++         * 联系电话
++         */
++        public String number;
++    }
++
++    /**
++     * 联系人邮箱信息
++     */
++    public static class EmailInfo {
++        /**
++         * 邮箱类型
++         */
++        public int type;
++        /**
++         * 邮箱
++         */
++        public String email;
++    }
++
++    private List<PhoneInfo> phoneList = new ArrayList<PhoneInfo>(); // 联系号码
++
++    private List<EmailInfo> email = new ArrayList<EmailInfo>(); // Email
++
++    /**
++     * 构造联系人信息
++     *
++     * @param name 联系人姓名
++     */
++    public ContactInfoBack(String name) {
++        this.name = name;
++    }
++
++    /**
++     * 姓名
++     */
++    public String getName() {
++        return name;
++    }
++
++    /**
++     * 姓名
++     */
++    public ContactInfoBack setName(String name) {
++        this.name = name;
++        return this;
++    }
++
++    /**
++     * 联系电话信息
++     */
++    public List<PhoneInfo> getPhoneList() {
++        return phoneList;
++    }
++
++    /**
++     * 联系电话信息
++     */
++    public ContactInfoBack setPhoneList(List<PhoneInfo> phoneList) {
++        this.phoneList = phoneList;
++        return this;
++    }
++
++    /**
++     * 邮箱信息
++     */
++    public List<EmailInfo> getEmail() {
++        return email;
++    }
++
++    /**
++     * 邮箱信息
++     */
++    public ContactInfoBack setEmail(List<EmailInfo> email) {
++        this.email = email;
++        return this;
++    }
++
++    @Override
++    public String toString() {
++        return "{name: " + name + ", number: " + phoneList + ", email: " + email + "}";
++    }
++
++
++    /**
++     * 联系人
++     * 备份/还原操作
++     *
++     * @author LW
++     */
++    public static class ContactHandler {
++        private static ContactHandler instance_ = new ContactHandler();
++
++        /**
++         * 获取实例
++         */
++        public static ContactHandler getInstance() {
++            return instance_;
++        }
++
++        /**
++         * 获取联系人指定信息
++         *
++         * @param projection 指定要获取的列数组, 获取全部列则设置为null
++         * @return
++         * @throws Exception
++         */
++
++        public Cursor queryContact(Activity context, String[] projection) {
++            // 获取联系人的所需信息
++            Cursor cur = context.getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, projection, null, null, null);
++            return cur;
++        }
++
++
++        /**
++         * 获取联系人信息
++         *
++         * @param context
++         * @return
++         */
++        public List<ContactInfoBack> getContactInfoBack(Activity context) {
++            List<ContactInfoBack> infoList = new ArrayList<ContactInfoBack>();
++            Cursor cur = queryContact(context, null);
++            if (cur.moveToFirst()) {
++                do {
++                    // 获取联系人id号
++                    String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
++                    // 获取联系人姓名
++                    String displayName = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
++                    ContactInfoBack info = new ContactInfoBack(displayName);// 初始化联系人信息
++                    // 查看联系人有多少电话号码, 如果没有返回0
++                    int phoneCount = cur.getInt(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
++
++//                    ContentValues values = new ContentValues();
++//                    values.put(ContactsContract.Contacts.IS_PRIVATE_CONTACTS, 0);
++//                    context.getContentResolver().update(ContactsContract.Contacts.CONTENT_URI, values, ContactsContract.Contacts.NAME_RAW_CONTACT_ID + "= ?", null);
++                    Log.i(TAG, "getContactInfoBack()->info = " + info.toString());
++
++                    if (phoneCount > 0) {
++                        Cursor phonesCursor = context.getContentResolver().query(Phone.CONTENT_URI, null, Phone.CONTACT_ID + "=?", new String[]{id}, null);
++                        Log.i(TAG, "getContactInfoBack()->info = " + info.toString());
++                        if (phonesCursor.moveToFirst()) {
++                            List<PhoneInfo> phoneNumberList = new ArrayList<PhoneInfo>();
++                            do {
++                                // 遍历所有电话号码
++                                String phoneNumber = phonesCursor.getString(phonesCursor.getColumnIndex(Phone.NUMBER));
++                                // 对应的联系人类型
++                                int type = phonesCursor.getInt(phonesCursor.getColumnIndex(Phone.TYPE));
++                                // 初始化联系人电话信息
++                                PhoneInfo phoneInfo = new PhoneInfo();
++                                phoneInfo.type = type;
++                                phoneInfo.number = phoneNumber;
++                                phoneNumberList.add(phoneInfo);
++                            } while (phonesCursor.moveToNext());
++                            // 设置联系人电话信息
++                            info.setPhoneList(phoneNumberList);
++                        }
++                    }
++
++                    // 获得联系人的EMAIL
++                    Cursor emailCur = context.getContentResolver().query(Email.CONTENT_URI,
++                            null, Email.CONTACT_ID + "=" + id, null, null);
++                    if (emailCur.moveToFirst()) {
++                        List<EmailInfo> emailList = new ArrayList<EmailInfo>();
++                        do {
++                            // 遍历所有的email
++                            String email = emailCur.getString(emailCur.getColumnIndex(Email.DATA1));
++                            int type = emailCur.getInt(emailCur.getColumnIndex(Email.TYPE));
++                            // 初始化联系人邮箱信息
++                            EmailInfo emailInfo = new EmailInfo();
++                            emailInfo.type = type;    // 设置邮箱类型
++                            emailInfo.email = email;    // 设置邮箱地址
++                            emailList.add(emailInfo);
++                        } while (emailCur.moveToNext());
++                        info.setEmail(emailList);
++                    }
++
++                    //Cursor postalCursor = getContentResolver().query(ContactsContract.CommonDataKinds.StructuredPostal.CONTENT_URI, null, ContactsContract.CommonDataKinds.StructuredPostal.CONTACT_ID + "=" + id, null, null);
++                    Log.i(TAG, "getContactInfoBack()->info = " + info.toString());
++                    infoList.add(info);
++
++                } while (cur.moveToNext());
++            }
++            return infoList;
++        }
++
++        /**
++         * 备份联系人
++         */
++        public void backupContacts(Activity context, List<ContactInfoBack> infos) {
++
++            try {
++                String path = Environment.getExternalStorageDirectory() + "/contacts.vcf";
++                Log.i(TAG, "backupContacts()->file = " + path);
++                OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(path), "UTF-8");
++                VCardComposer composer = new VCardComposer();
++                for (ContactInfoBack info : infos) {
++                    ContactStruct contact = new ContactStruct();
++                    contact.name = info.getName();
++                    // 获取联系人电话信息, 添加至 ContactStruct
++                    List<PhoneInfo> numberList = info
++                            .getPhoneList();
++                    for (PhoneInfo phoneInfo : numberList) {
++                        contact.addPhone(phoneInfo.type, phoneInfo.number, null, true);
++                    }
++                    // 获取联系人Email信息, 添加至 ContactStruct
++                    List<EmailInfo> emailList = info.getEmail();
++                    for (EmailInfo emailInfo : emailList) {
++                        contact.addContactmethod(Contacts.KIND_EMAIL, emailInfo.type, emailInfo.email, null, true);
++                    }
++                    String vcardString = composer.createVCard(contact, VCardComposer.VERSION_VCARD30_INT);
++                    writer.write(vcardString);
++                    writer.write("\n");
++                    writer.flush();
++                }
++                writer.close();
++            } catch (UnsupportedEncodingException e) {
++                e.printStackTrace();
++            } catch (FileNotFoundException e) {
++                e.printStackTrace();
++            } catch (VCardException e) {
++                e.printStackTrace();
++            } catch (IOException e) {
++                e.printStackTrace();
++            }
++            Toast.makeText(context, "备份成功！", Toast.LENGTH_SHORT).show();
++        }
++
++        /**
++         * 获取vCard文件中的联系人信息
++         *
++         * @return
++         */
++        public List<ContactInfoBack> restoreContacts() throws Exception {
++            List<ContactInfoBack> ContactInfoBackList = new ArrayList<ContactInfoBack>();
++
++            VCardParser parse = new VCardParser();
++            VDataBuilder builder = new VDataBuilder();
++            String file = Environment.getExternalStorageDirectory() + "/contacts.vcf";
++            Log.i(TAG, "restoreContacts()->file = " + file);
++            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
++            String vcardString = "";
++            String line;
++            while ((line = reader.readLine()) != null) {
++                vcardString += line + "\n";
++            }
++            reader.close();
++            Log.i(TAG, "restoreContacts()->vcardString = " + vcardString);
++            boolean parsed = parse.parse(vcardString, "UTF-8", builder);
++            if (!parsed) {
++                throw new VCardException("Could not parse vCard file: " + file);
++            }
++            List<VNode> pimContacts = builder.vNodeList;
++            for (VNode contact : pimContacts) {
++                ContactStruct contactStruct = ContactStruct.constructContactFromVNode(contact, 1);
++                // 获取备份文件中的联系人电话信息
++                List<PhoneData> phoneDataList = contactStruct.phoneList;
++                List<PhoneInfo> phoneInfoList = new ArrayList<PhoneInfo>();
++                for (PhoneData phoneData : phoneDataList) {
++                    PhoneInfo phoneInfo = new PhoneInfo();
++                    phoneInfo.number = phoneData.data;
++                    phoneInfo.type = phoneData.type;
++                    phoneInfoList.add(phoneInfo);
++                }
++                // 获取备份文件中的联系人邮箱信息
++                List<ContactMethod> emailList = contactStruct.contactmethodList;
++                List<EmailInfo> emailInfoList = new ArrayList<EmailInfo>();
++                // 存在 Email 信息
++                if (null != emailList) {
++                    for (ContactMethod contactMethod : emailList) {
++                        if (Contacts.KIND_EMAIL == contactMethod.kind) {
++                            EmailInfo emailInfo = new EmailInfo();
++                            emailInfo.email = contactMethod.data;
++                            emailInfo.type = contactMethod.type;
++                            emailInfoList.add(emailInfo);
++                        }
++                    }
++                }
++                ContactInfoBack info = new ContactInfoBack(contactStruct.name).setPhoneList(phoneInfoList).setEmail(emailInfoList);
++                ContactInfoBackList.add(info);
++            }
++            return ContactInfoBackList;
++        }
++
++        /**
++         * 向手机中录入联系人信息
++         *
++         * @param info 要录入的联系人信息
++         */
++        public void addContacts(Activity context, ContactInfoBack info) {
++            ContentValues values = new ContentValues();
++            //首先向RawContacts.CONTENT_URI执行一个空值插入，目的是获取系统返回的rawContactId
++            Uri rawContactUri = context.getContentResolver().insert(RawContacts.CONTENT_URI, values);
++            long rawContactId = ContentUris.parseId(rawContactUri);
++            //往data表入姓名数据
++            values.clear();
++            values.put(Data.RAW_CONTACT_ID, rawContactId);
++            values.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);
++            values.put(StructuredName.GIVEN_NAME, info.getName());
++            context.getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
++            // 获取联系人电话信息
++            List<PhoneInfo> phoneList = info.getPhoneList();
++            /** 录入联系电话 */
++            for (PhoneInfo phoneInfo : phoneList) {
++                values.clear();
++                values.put(ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
++                values.put(Data.MIMETYPE, Phone.CONTENT_ITEM_TYPE);
++                // 设置录入联系人电话信息
++                values.put(Phone.NUMBER, phoneInfo.number);
++                values.put(Phone.TYPE, phoneInfo.type);
++                // 往data表入电话数据
++                context.getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
++
++            }
++            // 获取联系人邮箱信息
++            List<EmailInfo> emailList = info.getEmail();
++            /** 录入联系人邮箱信息 */
++            for (EmailInfo email : emailList) {
++                values.clear();
++                values.put(ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
++                values.put(Data.MIMETYPE, Email.CONTENT_ITEM_TYPE);
++                // 设置录入的邮箱信息
++                values.put(Email.DATA, email.email);
++                values.put(Email.TYPE, email.type);
++                // 往data表入Email数据
++                context.getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
++
++            }
++        }
++    }
++}
++
+diff --git a/src/com/transage/privatespace/utils/ContactUtils.java b/src/com/transage/privatespace/utils/ContactUtils.java
+new file mode 100755
+index 0000000..a99b480
+--- /dev/null
++++ b/src/com/transage/privatespace/utils/ContactUtils.java
+@@ -0,0 +1,276 @@
++package com.transage.privatespace.utils;
++
++import java.io.ByteArrayOutputStream;
++import java.io.IOException;
++import java.io.InputStream;
++import java.util.ArrayList;
++import java.util.List;
++
++import org.json.JSONException;
++
++import android.content.ContentUris;
++import android.content.Context;
++import android.database.Cursor;
++import android.graphics.Bitmap;
++import android.net.Uri;
++import android.provider.ContactsContract;
++import android.provider.ContactsContract.CommonDataKinds.Email;
++import android.provider.ContactsContract.CommonDataKinds.Event;
++import android.provider.ContactsContract.CommonDataKinds.Im;
++import android.provider.ContactsContract.CommonDataKinds.Nickname;
++import android.provider.ContactsContract.CommonDataKinds.Note;
++import android.provider.ContactsContract.CommonDataKinds.Organization;
++import android.provider.ContactsContract.CommonDataKinds.Phone;
++import android.provider.ContactsContract.CommonDataKinds.StructuredName;
++import android.provider.ContactsContract.CommonDataKinds.StructuredPostal;
++import android.provider.ContactsContract.CommonDataKinds.Website;
++import android.provider.ContactsContract.CommonDataKinds.Photo;
++import android.provider.ContactsContract.Contacts;
++import android.provider.ContactsContract.Data;
++import android.util.Log;
++
++import com.transage.privatespace.bean.ContactInfo;
++import com.transage.privatespace.R;
++
++/**
++ * Created by yanjie.xu on 2017/8/24.
++ */
++
++public class ContactUtils {
++    public static final String TAG = "ContactUtil";
++    private static Context context;
++    private List<ContactInfo> mContactInfos = new ArrayList<>();
++
++    public ContactUtil(Context context) {
++        this.context = context;
++    }
++
++    // ContactsContract.Contacts.CONTENT_URI= content://com.android.contacts/contacts;
++    // ContactsContract.Data.CONTENT_URI = content://com.android.contacts/data;
++
++    public void getContacts() {
++        Cursor cur = context.getContentResolver().query(Contacts.CONTENT_URI, null, null, null, null);
++        if (cur.moveToFirst()) {
++            ContactInfo info = new ContactInfo();
++            do {
++                // 获取联系人id号
++                int id = cur.getInt(cur.getColumnIndex(Contacts._ID));
++                // 获取联系人姓名
++                String displayName = cur.getString(cur.getColumnIndex(Contacts.DISPLAY_NAME));
++//                ContactInfo info = new ContactInfo(displayName);// 初始化联系人信息
++                // 查看联系人有多少电话号码, 如果没有返回0
++                int phoneCount = cur.getInt(cur.getColumnIndex(Contacts.HAS_PHONE_NUMBER));
++                //得到联系人头像ID
++                Long photoid = cur.getLong(Contacts.PHOTO_ID);
++
++                //photoid 大于0 表示联系人有头像 如果没有给此人设置头像则给他一个默认的
++                if(photoid > 0 ) {
++                    Uri uri = ContentUris.withAppendedId(ContactsContract.Contacts.CONTENT_URI,id);
++                    InputStream input = ContactsContract.Contacts.openContactPhotoInputStream(context.getContentResolver(), uri);
++//                    contactPhoto = BitmapFactory.decodeStream(input);
++                    info.setPhotoData(input2byte(input));
++                }else {
++//                    contactPhoto = BitmapFactory.decodeResource(getResources(), R.drawable.contact_photo);
++                }
++
++                info.setContactId(id);
++                info.setDisplayName(displayName);
++                info.setHasPhoneNumber(phoneCount);
++
++                getRawContact(id, info);
++
++                mContactInfos.add(info);
++            } while (cur.moveToNext());
++        }
++    }
++
++    public void getRawContact(int contactId, ContactInfo info) {
++        //获取联系人RawContacts数据
++        Cursor rawContactCursor = context.getContentResolver().query(ContactsContract.RawContacts.CONTENT_URI,
++                new String[]{ContactsContract.RawContacts._ID,
++                        ContactsContract.RawContacts.CONTACT_ID,
++                        ContactsContract.RawContacts.ACCOUNT_TYPE,
++                        ContactsContract.RawContacts.ACCOUNT_NAME},
++                ContactsContract.RawContacts.CONTACT_ID + "=?",
++                new String[]{String.valueOf(contactId)},
++                null);
++        Log.i(TAG, "rawContactCursor.getCount() = " + rawContactCursor.getCount() + "contactId = " + contactId);
++        if (rawContactCursor.moveToFirst()) {
++            do {
++                // 遍历所有电话号码
++                int _id = rawContactCursor.getInt(rawContactCursor.getColumnIndex(ContactsContract.RawContacts._ID));
++                int contact_id = rawContactCursor.getInt(rawContactCursor.getColumnIndex(ContactsContract.RawContacts.CONTACT_ID));
++                String account_type = rawContactCursor.getString(rawContactCursor.getColumnIndex(ContactsContract.RawContacts.ACCOUNT_TYPE));
++                String account_name = rawContactCursor.getString(rawContactCursor.getColumnIndex(ContactsContract.RawContacts.ACCOUNT_NAME));
++                ContactInfo.RawContactInfo rawContactInfo = new ContactInfo.RawContactInfo();
++                rawContactInfo.contactId = contact_id;
++                rawContactInfo.rawContactId = _id;
++                rawContactInfo.accountType = account_type;
++                rawContactInfo.accountName = account_name;
++                getContactData(_id, rawContactInfo);
++                Log.i(TAG, "rawContactInfo = " + rawContactInfo.toString());
++                info.addRawContact(rawContactInfo);
++            } while (rawContactCursor.moveToNext());
++            // 设置联系人电话信息
++        }
++    }
++
++    /**
++     * 获取联系人信息，并把数据转换成json数据
++     *
++     * @return
++     * @throws JSONException
++     */
++    public void getContactData(int rawContactId, ContactInfo.RawContactInfo info) {
++        String mimetype = "";
++        String type = "";
++        int oldrid = -1;
++        int contactId = -1;
++
++        String project1[] = new String[]{
++                "mimetype", "raw_contact_id", "data1", "data2", "data3", "data4", "data5", "data6", "data7",
++                "data8", "data9", "data10", "data11", "data12", "data13", "data14", "data15"
++        };
++
++        // 1.查询通讯录所有联系人信息，通过id排序，我们看下android联系人的表就知道，所有的联系人的数据是由RAW_CONTACT_ID来索引开的
++        // 所以，先获取所有的人的RAW_CONTACT_ID
++        Cursor cursor = context.getContentResolver().query(
++                Data.CONTENT_URI,
++                project1,
++                Data.RAW_CONTACT_ID + "=?",
++                new String[]{String.valueOf(rawContactId)},
++                Data.RAW_CONTACT_ID);
++        Log.i(TAG, "ContactUtil:cursor.getCount() = " + cursor.getCount());
++        int numm = 0;
++        while (cursor.moveToNext()) {
++            contactId = cursor.getInt(cursor
++                    .getColumnIndex(Data.RAW_CONTACT_ID));
++            if (oldrid != contactId) {
++                numm++;
++                oldrid = contactId;
++            }
++            ContactInfo.DataInfo dataInfo = new ContactInfo.DataInfo();
++            mimetype = cursor.getString(cursor.getColumnIndex(Data.MIMETYPE)); // 取得mimetype类型,扩展的数据都在这个类型里面
++            type = cursor.getString(cursor.getColumnIndex(Data.DATA2));
++            dataInfo.rawContactId = contactId
++            dataInfo.mimeType = mimetype;
++            dataInfo.type = type;
++            dataInfo.data2 = type;
++            // 1.1,拿到联系人的各种名字
++            if (StructuredName.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.DISPLAY_NAME));
++                dataInfo.data4 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PREFIX));
++                dataInfo.data3 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.FAMILY_NAME));
++                dataInfo.data5 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.MIDDLE_NAME));
++                dataInfo.data2 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.GIVEN_NAME));
++                dataInfo.data6 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.SUFFIX));
++                dataInfo.data9 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PHONETIC_FAMILY_NAME));
++                dataInfo.data8 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PHONETIC_MIDDLE_NAME));
++                dataInfo.data7 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PHONETIC_GIVEN_NAME));
++            }
++            // 1.2 获取各种电话信息
++            if (Phone.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Phone.NUMBER));
++            }
++            //查找Email信息
++            if (Email.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Email.ADDRESS));
++            }
++            // 查找event地址
++            if (Event.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出时间类型
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Event.START_DATE));
++            }
++            // 获取即时通讯消息
++            if (Im.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出即时消息类型
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Im.DATA));
++            }
++            // 获取备注信息
++            if (Note.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Note.NOTE));
++            }
++            // 获取昵称信息
++            if (Nickname.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Nickname.NAME));
++            }
++            // 获取组织信息
++            if (Organization.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出组织类型
++                dataInfo.data1 = cursor.getString(cursor
++                        .getColumnIndex(Organization.COMPANY));
++                dataInfo.data4 = cursor.getString(cursor
++                        .getColumnIndex(Organization.TITLE));
++                dataInfo.data5 = cursor.getString(cursor
++                        .getColumnIndex(Organization.DEPARTMENT));
++            }
++            // 获取网站信息
++            if (Website.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出组织类型
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Website.URL));
++            }
++            // 查找通讯地址
++            if (StructuredPostal.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出邮件类型
++                dataInfo.data4 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.STREET));
++                dataInfo.data7 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.CITY));
++                dataInfo.data5 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.POBOX));
++                dataInfo.data6 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.NEIGHBORHOOD));
++                dataInfo.data8 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.REGION));
++                dataInfo.data9 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.POSTCODE));
++                dataInfo.data10 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.COUNTRY));
++            }
++            if (Photo.CONTENT_ITEM_TYPE.equals(mimetype)){
++                dataInfo.data14 = cursor.getString(cursor.getColumnIndex(Photo.PHOTO_FILE_ID));
++                dataInfo.data15 = cursor.getString(cursor.getColumnIndex(Photo.PHOTO));
++            }
++            Log.i(TAG, "dataInfo = " + dataInfo.toString());
++            info.dataInfos.add(dataInfo);
++        }
++        cursor.close();
++//        Log.i(TAG, contactData.toString());
++    }
++
++    /**
++     * inputStream转换为byte数组
++     * @param inStream
++     * @return
++     */
++    public static final byte[] input2byte(InputStream inStream){
++        ByteArrayOutputStream swapStream = new ByteArrayOutputStream();
++        byte[] buff = new byte[512];
++        int rc = 0;
++        try {
++            while ((rc = inStream.read(buff, 0, 512)) > 0) {
++                swapStream.write(buff, 0, rc);
++            }
++        } catch (IOException e) {
++            e.printStackTrace();
++        }
++        byte[] in2b = swapStream.toByteArray();
++        return in2b;
++    }
++
++    /**
++     * 根据type值获取标签字符串
++     *
++     * @param type
++     * @return
++     */
++    public static String getLabelNameByType(int type) {
++        //通过type获取typelabel字符串
++        int typeLabelResource = Phone.getTypeLabelResource(type);
++        return context.getResources().getString(typeLabelResource)
++    }
++}
diff --git "a/privatespace_submit/34\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256(\344\270\212\346\257\224\346\212\245\351\224\231\344\277\256\346\224\271)/yanjie11.diff" "b/privatespace_submit/34\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256(\344\270\212\346\257\224\346\212\245\351\224\231\344\277\256\346\224\271)/yanjie11.diff"
new file mode 100755
index 0000000..1d4743a
--- /dev/null
+++ "b/privatespace_submit/34\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256(\344\270\212\346\257\224\346\212\245\351\224\231\344\277\256\346\224\271)/yanjie11.diff"
@@ -0,0 +1,39 @@
+diff --git a/src/com/transage/privatespace/utils/ContactUtils.java b/src/com/transage/privatespace/utils/ContactUtils.java
+index a99b480..262dfbe 100755
+--- a/src/com/transage/privatespace/utils/ContactUtils.java
++++ b/src/com/transage/privatespace/utils/ContactUtils.java
+@@ -41,7 +41,7 @@ public class ContactUtils {
+     private static Context context;
+     private List<ContactInfo> mContactInfos = new ArrayList<>();
+ 
+-    public ContactUtil(Context context) {
++    public ContactUtils(Context context) {
+         this.context = context;
+     }
+ 
+@@ -61,7 +61,7 @@ public class ContactUtils {
+                 // 查看联系人有多少电话号码, 如果没有返回0
+                 int phoneCount = cur.getInt(cur.getColumnIndex(Contacts.HAS_PHONE_NUMBER));
+                 //得到联系人头像ID
+-                Long photoid = cur.getLong(Contacts.PHOTO_ID);
++                int photoid = cur.getInt(cur.getColumnIndex(Contacts.PHOTO_ID));
+ 
+                 //photoid 大于0 表示联系人有头像 如果没有给此人设置头像则给他一个默认的
+                 if(photoid > 0 ) {
+@@ -152,7 +152,7 @@ public class ContactUtils {
+             ContactInfo.DataInfo dataInfo = new ContactInfo.DataInfo();
+             mimetype = cursor.getString(cursor.getColumnIndex(Data.MIMETYPE)); // 取得mimetype类型,扩展的数据都在这个类型里面
+             type = cursor.getString(cursor.getColumnIndex(Data.DATA2));
+-            dataInfo.rawContactId = contactId
++            dataInfo.rawContactId = contactId;
+             dataInfo.mimeType = mimetype;
+             dataInfo.type = type;
+             dataInfo.data2 = type;
+@@ -271,6 +271,6 @@ public class ContactUtils {
+     public static String getLabelNameByType(int type) {
+         //通过type获取typelabel字符串
+         int typeLabelResource = Phone.getTypeLabelResource(type);
+-        return context.getResources().getString(typeLabelResource)
++        return context.getResources().getString(typeLabelResource);
+     }
+ }
diff --git "a/privatespace_submit/dongruipan/27\346\267\273\345\212\240\346\214\207\347\272\271\347\231\273\345\275\225\351\252\214\350\257\201\347\252\227\357\274\214\350\213\245\350\256\276\347\275\256\344\272\206\346\214\207\347\272\271\347\231\273\345\275\225\357\274\214\350\207\252\345\212\250\345\274\271\345\207\272\346\214\207\347\272\271\351\252\214\350\257\201\347\252\227/ruipan12.diff" "b/privatespace_submit/dongruipan/27\346\267\273\345\212\240\346\214\207\347\272\271\347\231\273\345\275\225\351\252\214\350\257\201\347\252\227\357\274\214\350\213\245\350\256\276\347\275\256\344\272\206\346\214\207\347\272\271\347\231\273\345\275\225\357\274\214\350\207\252\345\212\250\345\274\271\345\207\272\346\214\207\347\272\271\351\252\214\350\257\201\347\252\227/ruipan12.diff"
new file mode 100755
index 0000000..698f0c1
--- /dev/null
+++ "b/privatespace_submit/dongruipan/27\346\267\273\345\212\240\346\214\207\347\272\271\347\231\273\345\275\225\351\252\214\350\257\201\347\252\227\357\274\214\350\213\245\350\256\276\347\275\256\344\272\206\346\214\207\347\272\271\347\231\273\345\275\225\357\274\214\350\207\252\345\212\250\345\274\271\345\207\272\346\214\207\347\272\271\351\252\214\350\257\201\347\252\227/ruipan12.diff"
@@ -0,0 +1,303 @@
+diff --git a/res/layout/activity_login.xml b/res/layout/activity_login.xml
+index 0a94165..5ddcea9 100755
+--- a/res/layout/activity_login.xml
++++ b/res/layout/activity_login.xml
+@@ -45,7 +45,7 @@
+             android:inputType="textPassword"
+             android:maxLength="6"
+             android:paddingStart="10dp"
+-            android:textColorHint="@color/lightgrey"
++            android:textColorHint="@color/greyline"
+             android:textColor="@color/colorAccent"
+             android:textSize="16sp"/>
+ 
+@@ -78,7 +78,7 @@
+             android:inputType="textPassword"
+             android:maxLength="6"
+             android:paddingStart="10dp"
+-            android:textColorHint="@color/lightgrey"
++            android:textColorHint="@color/greyline"
+             android:textColor="@color/colorAccent"
+             android:textSize="16sp"/>
+ 
+@@ -109,6 +109,27 @@
+         android:textSize="16sp"
+         android:visibility="gone"/>
+ 
++    <ImageView
++        android:id="@+id/bt_finger_print"
++        android:layout_width="80dp"
++        android:layout_height="80dp"
++        android:layout_gravity="center_horizontal"
++        android:layout_marginTop="80dp"
++        android:clickable="true"
++        android:onClick="onClick"
++        android:src="@mipmap/bt_finger_print"
++        android:visibility="gone"/>
++
++    <TextView
++        android:id="@+id/tip_finger_print_login"
++        android:layout_width="wrap_content"
++        android:layout_height="wrap_content"
++        android:textColor="@color/greyline"
++        android:layout_gravity="center_horizontal"
++        android:layout_marginTop="5dp"
++        android:text="@string/click_login_by_finger_print"
++        android:visibility="gone"/>
++
+     <RelativeLayout
+         android:layout_width="match_parent"
+         android:layout_height="match_parent">
+diff --git a/res/layout/finger_print_view.xml b/res/layout/finger_print_view.xml
+new file mode 100755
+index 0000000..a282d34
+--- /dev/null
++++ b/res/layout/finger_print_view.xml
+@@ -0,0 +1,42 @@
++<?xml version="1.0" encoding="utf-8"?>
++<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
++              android:orientation="vertical"
++              android:layout_width="match_parent"
++              android:gravity="center_horizontal"
++              android:padding="10dp"
++              android:layout_height="match_parent">
++
++
++    <ImageView
++        android:id="@+id/iv_finger_print"
++        android:layout_width="80dp"
++        android:layout_height="80dp"
++        android:layout_marginTop="10dp"
++        android:src="@mipmap/iv_finger_print"/>
++
++    <TextView
++        android:layout_width="wrap_content"
++        android:text="@string/enter_private_space_by_private_fingerprint"
++        android:layout_marginTop="10dp"
++        android:layout_height="wrap_content"/>
++
++    <TextView
++        android:layout_width="match_parent"
++        android:background="@color/greyline"
++        android:layout_marginTop="20dp"
++        android:layout_marginBottom="10dp"
++        android:layout_height="0.5dp"/>
++
++    <TextView
++        android:id="@+id/cancel"
++        android:layout_width="match_parent"
++        android:gravity="center"
++        android:text="@string/cancel"
++        android:textSize="18sp"
++        android:padding="5dp"
++        android:clickable="true"
++        android:onClick="onClick"
++        android:textColor="@color/colorAccent"
++        android:layout_height="wrap_content"/>
++
++</LinearLayout>
+\ No newline at end of file
+diff --git a/res/mipmap-xxxhdpi/bt_finger_print.png b/res/mipmap-xxxhdpi/bt_finger_print.png
+new file mode 100755
+index 0000000..aac02c5
+Binary files /dev/null and b/res/mipmap-xxxhdpi/bt_finger_print.png differ
+diff --git a/res/mipmap-xxxhdpi/iv_finger_print.jpg b/res/mipmap-xxxhdpi/iv_finger_print.jpg
+new file mode 100755
+index 0000000..300f3d8
+Binary files /dev/null and b/res/mipmap-xxxhdpi/iv_finger_print.jpg differ
+diff --git a/res/values/strings.xml b/res/values/strings.xml
+index 334d2db..1d23ed7 100755
+--- a/res/values/strings.xml
++++ b/res/values/strings.xml
+@@ -63,5 +63,6 @@
+     <string name="decrypt">解密</string>
+     <string name="private_album">私密相册</string>
+     <string name="add_private_photo">添加私密图片</string>
++    <string name="click_login_by_finger_print">点击进行指纹登录</string>
+ 
+ </resources>
+diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
+index 5e30646..4fbbf31 100755
+--- a/src/com/transage/privatespace/activity/Login.java
++++ b/src/com/transage/privatespace/activity/Login.java
+@@ -1,24 +1,28 @@
+ package com.transage.privatespace.activity;
+ 
++import android.animation.AnimatorSet;
++import android.animation.ObjectAnimator;
+ import android.annotation.SuppressLint;
+-import android.annotation.TargetApi;
+ import android.app.Activity;
+ import android.content.ContentResolver;
+ import android.content.Context;
+ import android.content.Intent;
+ import android.content.SharedPreferences;
+ import android.hardware.fingerprint.FingerprintManager;
+-import android.os.Build;
+ import android.os.Bundle;
+ import android.os.CancellationSignal;
+ import android.os.Handler;
+ import android.os.UserHandle;
+ import android.provider.Settings;
+ import android.support.annotation.Nullable;
++import android.support.v4.hardware.fingerprint.FingerprintManagerCompat;
++import android.support.v7.app.AlertDialog;
+ import android.text.TextUtils;
+ import android.text.method.HideReturnsTransformationMethod;
+ import android.text.method.PasswordTransformationMethod;
++import android.util.Log;
+ import android.view.KeyEvent;
++import android.view.LayoutInflater;
+ import android.view.View;
+ import android.view.Window;
+ import android.view.WindowManager;
+@@ -28,6 +32,7 @@ import android.widget.CheckBox;
+ import android.widget.CompoundButton;
+ import android.widget.EditText;
+ import android.widget.FrameLayout;
++import android.widget.ImageView;
+ import android.widget.TextView;
+ import android.widget.Toast;
+ 
+@@ -43,7 +48,7 @@ import java.security.NoSuchAlgorithmException;
+  */
+ @SuppressLint("NewApi")
+ public class Login extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener,EditText.OnEditorActionListener {
+-    private static String TAG = "Login";
++    private static String TAG = "Login_1";
+     private TextView textView1, textView2, textView3;
+     private FrameLayout frameLayout2;
+     private EditText editText1, editText2;
+@@ -59,8 +64,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     public static boolean isChangePrivateMark = false; // 本地全局标志：是否修改密码
+     private boolean resetPrivateMarkFromAdvancedSetup = false; // AdvancedSetupActivity发送过来的是否修改密码的标志
+     private boolean resetPrivateMarkFromSecurityQuestion = false; // SecurityQuestionActivity发送过来的是否修改密码的标志
+-
+     private FingerprintManager mFingerprintManager;
++    private ImageView btFingerprint;//“指纹”按钮：点击该按钮弹出指纹验证框
++    private TextView tip_finger_print_login;//“点击进行指纹登录”
++    private AlertDialog dialogFingerPrint;//指纹验证框
++    private ImageView ivFingerPrint;//指纹验证框中的指纹图片
+ 
+     @Override
+     protected void onCreate(@Nullable Bundle savedInstanceState) {
+@@ -70,6 +78,7 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+         getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);//透明状态栏
+         setContentView(R.layout.activity_login);
+         mFingerprintManager = (FingerprintManager) getSystemService(Context.FINGERPRINT_SERVICE);
++
+         initData();
+         initView();
+ 
+@@ -79,8 +88,13 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     protected void onResume() {
+         super.onResume();
+         //注册指纹监听
+-        if(!isFirstRun && sp.getBoolean("enterByPrivateFingerprint",false)){
++        if(!isFirstRun && sp.getBoolean("enterByPrivateFingerprint",false) && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()){
+             retryFingerprint();
++            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()){
++                dialogFingerPrint.show();
++            }
++            btFingerprint.setVisibility(View.VISIBLE);
++            tip_finger_print_login.setVisibility(View.VISIBLE);
+         }
+     }
+ 
+@@ -106,7 +120,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+         textView1 = (TextView) findViewById(R.id.textView1);// 标题
+         textView2 = (TextView) findViewById(R.id.textView2);// 提示信息
+         textView3 = (TextView) findViewById(R.id.textView3);// “忘记密码”
+-        textView3.setOnClickListener(this);// “忘记密码”注册点击监听
++        btFingerprint = (ImageView) findViewById(R.id.bt_finger_print);//“指纹”按钮
++        tip_finger_print_login = (TextView) findViewById(R.id.tip_finger_print_login);//“点击进行指纹登录”提示语
++        View fingerPrintView = LayoutInflater.from(this).inflate(R.layout.finger_print_view, null);
++        ivFingerPrint = (ImageView) fingerPrintView.findViewById(R.id.iv_finger_print);//验证框中的指纹图片
++        dialogFingerPrint = new AlertDialog.Builder(this).setCancelable(false).setView(fingerPrintView).create();
+         frameLayout2 = (FrameLayout) findViewById(R.id.frame_layout2);
+         editText1 = (EditText) findViewById(R.id.editText1);
+         editText2 = (EditText) findViewById(R.id.editText2);
+@@ -119,7 +137,8 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+         // 根据isFirstRun和isChangePrivateMark的状态值，决定所展示的布局
+         if (!isFirstRun && !isChangePrivateMark) { // 日常登录
+             textView1.setText(getString(R.string.confirm_private_mark));
+-            textView2.setText(getString(R.string.login_by_private_mark_or_private_fingerprint));
++            //textView2.setText(getString(R.string.login_by_private_mark_or_private_fingerprint));
++            textView2.setVisibility(View.GONE);
+             textView3.setVisibility(View.VISIBLE);
+             frameLayout2.setVisibility(View.GONE);
+         }
+@@ -141,6 +160,14 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+                     loginOrResetPwd(); // 执行主业务逻辑
+                 }
+                 break;
++            case R.id.bt_finger_print://指纹登录按钮
++                retryFingerprint();
++                dialogFingerPrint.show();
++                break;
++            case R.id.cancel://指纹验证框中取消按钮
++                stopFingerprint();
++                dialogFingerPrint.dismiss();
++                break;
+         }
+     }
+ 
+@@ -325,9 +352,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+                     }
+                     break;
+                 case MSG_FINGER_AUTH_FAIL:
++                    startFingerWrongAnimation();
+                     // No action required... fingerprint will allow up to 5 of these
+                     break;
+                 case MSG_FINGER_AUTH_ERROR:
++                    startFingerWrongAnimation();
+                     handleError(msg.arg1 /* errMsgId */, (CharSequence) msg.obj /* errStr */ );
+                     break;
+                 case MSG_FINGER_AUTH_HELP: {
+@@ -339,10 +368,24 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     };
+ 
+     /**
++     * 指纹错误动画
++     */
++    public void startFingerWrongAnimation(){
++        ObjectAnimator animator1 = ObjectAnimator.ofFloat(ivFingerPrint, "translationX", 0, -20);
++        ObjectAnimator animator2 = ObjectAnimator.ofFloat(ivFingerPrint, "translationX", -20, 20);
++        ObjectAnimator animator3 = ObjectAnimator.ofFloat(ivFingerPrint, "translationX", 20, 0);
++        AnimatorSet animSet = new AnimatorSet();
++        animSet.play(animator2).after(animator1);
++        animSet.play(animator3).after(animator2);
++        animSet.setDuration(100);
++        animSet.start();
++    }
++
++    /**
+      * 指纹错误或已上锁
+      */
+     protected void handleError(int errMsgId, CharSequence msg) {
+-        mFingerprintCancel = null;
++        //mFingerprintCancel = null;
+         switch (errMsgId) {
+             case FingerprintManager.FINGERPRINT_ERROR_CANCELED:
+                 return; // Only happens if we get preempted by another activity. Ignored.
+@@ -415,10 +458,19 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+      * 停止指纹监听
+      */
+     private void stopFingerprint() {
++        try {
++            mFingerprintCancel.cancel();
++        } catch (Exception e) {
++            e.printStackTrace();
++        }
++    }
++
++/*    private void stopFingerprint() {
+         if (mFingerprintCancel != null && !mFingerprintCancel.isCanceled()) {
+             mFingerprintCancel.cancel();
+         }
+         mFingerprintCancel = null;
+-    }
++    }*/
++
+ 
+ }
diff --git "a/privatespace_submit/dongruipan/29\346\267\273\345\212\240\345\272\224\347\224\250\351\200\200\345\207\272\351\200\273\350\276\221\357\274\232\347\246\273\345\274\200\347\247\201\345\257\206\344\270\255\347\232\204\344\273\273\344\275\225\347\225\214\351\235\242\347\232\204\346\227\266\345\200\231\357\274\214\345\272\224\347\224\250\350\207\252\345\212\250\351\200\200\345\207\272/ruipan13.diff" "b/privatespace_submit/dongruipan/29\346\267\273\345\212\240\345\272\224\347\224\250\351\200\200\345\207\272\351\200\273\350\276\221\357\274\232\347\246\273\345\274\200\347\247\201\345\257\206\344\270\255\347\232\204\344\273\273\344\275\225\347\225\214\351\235\242\347\232\204\346\227\266\345\200\231\357\274\214\345\272\224\347\224\250\350\207\252\345\212\250\351\200\200\345\207\272/ruipan13.diff"
new file mode 100755
index 0000000..6efbe95
--- /dev/null
+++ "b/privatespace_submit/dongruipan/29\346\267\273\345\212\240\345\272\224\347\224\250\351\200\200\345\207\272\351\200\273\350\276\221\357\274\232\347\246\273\345\274\200\347\247\201\345\257\206\344\270\255\347\232\204\344\273\273\344\275\225\347\225\214\351\235\242\347\232\204\346\227\266\345\200\231\357\274\214\345\272\224\347\224\250\350\207\252\345\212\250\351\200\200\345\207\272/ruipan13.diff"
@@ -0,0 +1,476 @@
+diff --git a/AndroidManifest.xml b/AndroidManifest.xml
+index 8f80527..9ae63cd 100755
+--- a/AndroidManifest.xml
++++ b/AndroidManifest.xml
+@@ -28,6 +28,7 @@
+                 android:protectionLevel="signature"/>
+ 
+     <application
++        android:name=".PrivateSpaceApplication"
+         android:allowBackup="true"
+         android:icon="@mipmap/logo"
+         android:label="@string/app_name"
+@@ -65,6 +66,8 @@
+         <!--wangmeng 20170802 end-->
+         <!-- Activity -->
+         <activity
++            android:name=".activity.BaseActivity"/>
++        <activity
+             android:name=".activity.Main"
+             android:screenOrientation="portrait"/>
+         <activity
+@@ -72,6 +75,7 @@
+             android:screenOrientation="portrait"/>
+         <activity
+             android:name=".activity.Login"
++            android:excludeFromRecents="true"
+             android:screenOrientation="portrait"
+             android:theme="@style/AppStartLoad"
+             android:windowSoftInputMode="stateHidden|stateAlwaysHidden">
+@@ -120,6 +124,8 @@
+             android:name=".activity.AddPeople"
+             android:screenOrientation="portrait"/>
+ 
++        <activity android:name=".activity.EmptyActivity"
++            android:theme="@style/ThemeTransparentBackground"/>
+         <provider
+             android:name=".provider.PrivateProvider"
+             android:exported="true"
+diff --git a/res/layout/activity_advance_setup.xml b/res/layout/activity_advance_setup.xml
+index 32032c8..5ca6933 100755
+--- a/res/layout/activity_advance_setup.xml
++++ b/res/layout/activity_advance_setup.xml
+@@ -240,7 +240,8 @@
+                 android:paddingTop="15dp"
+                 android:text="@string/change_private_fingerprint"
+                 android:textColor="@color/white"
+-                android:textSize="16sp"/>
++                android:textSize="16sp"
++                android:visibility="gone"/>
+ 
+             <TextView
+                 android:id="@+id/tv5"
+diff --git a/res/values/styles.xml b/res/values/styles.xml
+index 5488659..15c825c 100755
+--- a/res/values/styles.xml
++++ b/res/values/styles.xml
+@@ -29,4 +29,9 @@
+         <item name="windowNoTitle">true</item>
+         <item name="android:windowFullscreen">true</item>
+     </style>
++    <!--add by dongrp : ThemeTransparentBackground -->
++    <style name="ThemeTransparentBackground" parent="AppBaseTheme">
++        <item name="android:windowIsTranslucent">true</item>
++        <item name="android:windowNoTitle">true</item>
++    </style>
+ </resources>
+\ No newline at end of file
+diff --git a/src/com/transage/privatespace/PrivateSpaceApplication.java b/src/com/transage/privatespace/PrivateSpaceApplication.java
+new file mode 100755
+index 0000000..4e425c5
+--- /dev/null
++++ b/src/com/transage/privatespace/PrivateSpaceApplication.java
+@@ -0,0 +1,42 @@
++package com.transage.privatespace;
++
++import android.app.ActivityManager;
++import android.app.Application;
++import android.content.ComponentName;
++import android.content.Context;
++import android.content.Intent;
++import android.util.Log;
++
++import com.transage.privatespace.activity.EmptyActivity;
++
++import java.util.List;
++
++/**
++ * Created by ruipan.dong on 2017/8/21.
++ */
++
++public class PrivateSpaceApplication extends Application {
++
++    /**
++     * 当应用处于后台时，退出应用
++     */
++    public boolean exitAppOnPause() {
++        ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
++        List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);
++        if (!tasks.isEmpty()) {
++            ComponentName topActivity = tasks.get(0).topActivity;
++            Log.d("PrivateSpaceApplication", topActivity.getPackageName());
++            if (!topActivity.getPackageName().equals(getPackageName())) {
++                Log.d("PrivateSpaceApplication", "go to background");
++                Intent intent = new Intent(this,EmptyActivity.class);
++                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
++                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
++                startActivity(intent);
++                return true;
++            }
++        }
++        return false;
++    }
++
++
++}
+diff --git a/src/com/transage/privatespace/activity/AddApp.java b/src/com/transage/privatespace/activity/AddApp.java
+index 5c4349c..bfa3dbb 100755
+--- a/src/com/transage/privatespace/activity/AddApp.java
++++ b/src/com/transage/privatespace/activity/AddApp.java
+@@ -1,7 +1,6 @@
+ package com.transage.privatespace.activity;
+ 
+ import android.annotation.SuppressLint;
+-import android.app.Activity;
+ import android.content.Intent;
+ import android.content.pm.ActivityInfo;
+ import android.content.pm.PackageManager;
+@@ -31,7 +30,7 @@ import java.util.Map;
+  * Created by dongrp on 2016/8/18. 添加APP界面
+  */
+ @SuppressLint("NewApi")
+-public class AddApp extends Activity implements View.OnClickListener, AdapterView.OnItemClickListener {
++public class AddApp extends BaseActivity implements View.OnClickListener, AdapterView.OnItemClickListener {
+     private ArrayList<AppInfo> appInfoList = new ArrayList<AppInfo>();// 所有app的list
+     private ListView appListView;
+     private AddAppListViewAdapter appListViewAdapter;
+diff --git a/src/com/transage/privatespace/activity/AddPeople.java b/src/com/transage/privatespace/activity/AddPeople.java
+index 2a3eda4..ea2cdc0 100755
+--- a/src/com/transage/privatespace/activity/AddPeople.java
++++ b/src/com/transage/privatespace/activity/AddPeople.java
+@@ -36,7 +36,7 @@ import java.util.Map;
+ /**
+  * Created by dongrp on 2016/9/2. 添加联系人界面
+  */
+-public class AddPeople extends Activity implements AdapterView.OnItemClickListener, View.OnClickListener {
++public class AddPeople extends BaseActivity implements AdapterView.OnItemClickListener, View.OnClickListener {
+     public static final String TAG = "AddPeople";
+ 
+     public static final String SELECTED_PEOPLE = "selected_people";
+diff --git a/src/com/transage/privatespace/activity/AdvancedSetup.java b/src/com/transage/privatespace/activity/AdvancedSetup.java
+index 28c0ff9..4cf5d36 100755
+--- a/src/com/transage/privatespace/activity/AdvancedSetup.java
++++ b/src/com/transage/privatespace/activity/AdvancedSetup.java
+@@ -1,6 +1,5 @@
+ package com.transage.privatespace.activity;
+ 
+-import android.app.Activity;
+ import android.content.Intent;
+ import android.content.SharedPreferences;
+ import android.os.Bundle;
+@@ -20,7 +19,7 @@ import static com.transage.privatespace.activity.Login.ChangePrivateMarkFromAdva
+ /**
+  * Created by dongrp on 2016/8/15. 高级设置界面
+  */
+-public class AdvancedSetup extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener {
++public class AdvancedSetup extends BaseActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener {
+ 
+     private SharedPreferences mVcfSP;
+ 
+diff --git a/src/com/transage/privatespace/activity/BaseActivity.java b/src/com/transage/privatespace/activity/BaseActivity.java
+new file mode 100755
+index 0000000..a0a41e0
+--- /dev/null
++++ b/src/com/transage/privatespace/activity/BaseActivity.java
+@@ -0,0 +1,19 @@
++package com.transage.privatespace.activity;
++
++import android.app.Activity;
++
++import com.transage.privatespace.PrivateSpaceApplication;
++
++/**
++ * Created by ruipan.dong on 2017/8/18.
++ */
++
++public class BaseActivity extends Activity {
++
++    @Override
++    protected void onPause() {
++        super.onPause();
++        ((PrivateSpaceApplication) getApplication()).exitAppOnPause();//退出应用
++    }
++
++}
+diff --git a/src/com/transage/privatespace/activity/EmptyActivity.java b/src/com/transage/privatespace/activity/EmptyActivity.java
+new file mode 100755
+index 0000000..283be79
+--- /dev/null
++++ b/src/com/transage/privatespace/activity/EmptyActivity.java
+@@ -0,0 +1,18 @@
++package com.transage.privatespace.activity;
++
++import android.app.Activity;
++import android.os.Bundle;
++import android.support.annotation.Nullable;
++
++/**
++ * Created by ruipan.dong on 2017/8/21.
++ */
++
++public class EmptyActivity extends Activity {
++
++    @Override
++    protected void onCreate(@Nullable Bundle savedInstanceState) {
++        super.onCreate(savedInstanceState);
++        finish();
++    }
++}
+diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
+index 4fbbf31..33630d2 100755
+--- a/src/com/transage/privatespace/activity/Login.java
++++ b/src/com/transage/privatespace/activity/Login.java
+@@ -47,7 +47,7 @@ import java.security.NoSuchAlgorithmException;
+  * Created by dongrp on 2016/8/16. 登录界面
+  */
+ @SuppressLint("NewApi")
+-public class Login extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener,EditText.OnEditorActionListener {
++public class Login extends BaseActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener,EditText.OnEditorActionListener {
+     private static String TAG = "Login_1";
+     private TextView textView1, textView2, textView3;
+     private FrameLayout frameLayout2;
+@@ -88,9 +88,11 @@ public class Login extends Activity implements View.OnClickListener, CompoundBut
+     protected void onResume() {
+         super.onResume();
+         //注册指纹监听
+-        if(!isFirstRun && sp.getBoolean("enterByPrivateFingerprint",false) && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()){
++        if (!isFirstRun && sp.getBoolean("enterByPrivateFingerprint", false)
++                && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()
++                && !resetPrivateMarkFromAdvancedSetup && !resetPrivateMarkFromSecurityQuestion) {
+             retryFingerprint();
+-            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()){
++            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()) {
+                 dialogFingerPrint.show();
+             }
+             btFingerprint.setVisibility(View.VISIBLE);
+diff --git a/src/com/transage/privatespace/activity/Main.java b/src/com/transage/privatespace/activity/Main.java
+index 9a31161..57541cb 100755
+--- a/src/com/transage/privatespace/activity/Main.java
++++ b/src/com/transage/privatespace/activity/Main.java
+@@ -1,7 +1,6 @@
+ package com.transage.privatespace.activity;
+ 
+ import android.annotation.TargetApi;
+-import android.app.Activity;
+ import android.content.Intent;
+ import android.content.pm.PackageManager;
+ import android.graphics.Rect;
+@@ -13,6 +12,7 @@ import android.support.v7.widget.RecyclerView;
+ import android.view.View;
+ import android.view.Window;
+ import android.view.WindowManager;
++
+ import com.transage.privatespace.R;
+ import com.transage.privatespace.adapter.AppRecyclerAdapter;
+ import com.transage.privatespace.bean.AppInfo;
+@@ -24,7 +24,7 @@ import java.util.ArrayList;
+ /**
+  * Created by dongrp on 2016/8/13. 主界面
+  */
+-public class Main extends Activity implements View.OnClickListener, AppRecyclerAdapter.RecycleView_OnItemClickListener,
++public class Main extends BaseActivity implements View.OnClickListener, AppRecyclerAdapter.RecycleView_OnItemClickListener,
+         AppRecyclerAdapter.RecycleView_OnItemLongClickListener {
+     private ArrayList<AppInfo> appList = new ArrayList<AppInfo>();// 数据
+     private RecyclerView recyclerView;// 控件
+diff --git a/src/com/transage/privatespace/activity/PrivateContacts.java b/src/com/transage/privatespace/activity/PrivateContacts.java
+index 0398db5..b5a9ea8 100755
+--- a/src/com/transage/privatespace/activity/PrivateContacts.java
++++ b/src/com/transage/privatespace/activity/PrivateContacts.java
+@@ -5,7 +5,7 @@ import android.content.Intent;
+ import android.database.ContentObserver;
+ import android.net.Uri;
+ import android.os.Bundle;
+-import android.os.Handler;
++import android.provider.Telephony;
+ import android.support.annotation.Nullable;
+ import android.support.v4.app.Fragment;
+ import android.support.v4.app.FragmentActivity;
+@@ -19,6 +19,8 @@ import android.view.Window;
+ import android.view.WindowManager;
+ import android.widget.TextView;
+ 
++import com.android.internal.telephony.SmsApplication;
++import com.transage.privatespace.PrivateSpaceApplication;
+ import com.transage.privatespace.R;
+ import com.transage.privatespace.bean.People;
+ import com.transage.privatespace.fragment.BaseFragment;
+@@ -28,8 +30,7 @@ import com.transage.privatespace.fragment.FG_PrivateSms;
+ import com.transage.privatespace.loader.OnLoadListener;
+ import com.transage.privatespace.loader.PrivateSpaceLoader;
+ import com.transage.privatespace.provider.PrivateObserver;
+-import android.provider.Telephony;
+-import com.android.internal.telephony.SmsApplication;
++
+ import java.util.ArrayList;
+ import java.util.List;
+ 
+@@ -82,6 +83,7 @@ public class PrivateContacts extends FragmentActivity implements View.OnClickLis
+         Log.e("wangmeng ","######mDefaultSmsApp######" +mDefaultSmsApp);
+         setRestoreDefaultSms(PrivateContacts.this);//恢复默认短信
+         super.onPause();
++        ((PrivateSpaceApplication) getApplication()).exitAppOnPause();//退出应用
+     }
+ 
+     @Override
+diff --git a/src/com/transage/privatespace/activity/SecurityQuestion.java b/src/com/transage/privatespace/activity/SecurityQuestion.java
+index e6edce7..4970400 100755
+--- a/src/com/transage/privatespace/activity/SecurityQuestion.java
++++ b/src/com/transage/privatespace/activity/SecurityQuestion.java
+@@ -1,6 +1,5 @@
+ package com.transage.privatespace.activity;
+ 
+-import android.app.Activity;
+ import android.app.AlertDialog;
+ import android.content.DialogInterface;
+ import android.content.Intent;
+@@ -24,7 +23,7 @@ import java.util.ArrayList;
+ /**
+  * Created by dongrp on 2016/8/22. 密保问题界面
+  */
+-public class SecurityQuestion extends Activity implements View.OnClickListener, AdapterView.OnItemSelectedListener {
++public class SecurityQuestion extends BaseActivity implements View.OnClickListener, AdapterView.OnItemSelectedListener {
+     private Spinner spinner;
+     private EditText editText;
+     private Button button;
+diff --git a/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java b/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java
+index 9077966..0c22419 100755
+--- a/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java
++++ b/src/com/transage/privatespace/gallery/activity/GalleryMainActivity.java
+@@ -6,21 +6,18 @@ import android.content.pm.PackageManager;
+ import android.os.Bundle;
+ import android.os.Environment;
+ import android.support.v4.app.ActivityCompat;
+-import android.support.v7.app.AppCompatActivity;
+ import android.view.View;
+-import android.widget.Button;
+-import android.widget.EditText;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.gallery.photozoom.Folders;
+-import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+ 
+ /**
+  * Created by dongrp on 2017/7/1.
+  * 私密图库的主界面
+  */
+ 
+-public class GalleryMainActivity extends AppCompatActivity implements View.OnClickListener {
++public class GalleryMainActivity extends BaseActivity implements View.OnClickListener {
+ 
+     //private final String SDcardPath = "storage/emulated/0/";
+     private final String SDcardPath = Environment.getExternalStorageDirectory().toString() + "/";
+diff --git a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+index e736dd4..2d3f705 100755
+--- a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
++++ b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+@@ -8,7 +8,6 @@ import android.os.AsyncTask;
+ import android.os.Bundle;
+ import android.provider.MediaStore;
+ import android.support.annotation.Nullable;
+-import android.support.v7.app.AppCompatActivity;
+ import android.util.Log;
+ import android.view.View;
+ import android.widget.AbsListView;
+@@ -19,6 +18,7 @@ import android.widget.Toast;
+ 
+ import com.bumptech.glide.Glide;
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.database.DatabaseAdapter;
+ import com.transage.privatespace.gallery.adapter.PrivateAlbumGridViewAdapter;
+ import com.transage.privatespace.gallery.photozoom.Bimp;
+@@ -39,7 +39,7 @@ import java.util.concurrent.Future;
+  * 私密相册界面
+  */
+ 
+-public class PrivateAlbum extends AppCompatActivity implements View.OnClickListener, AbsListView.OnScrollListener {
++public class PrivateAlbum extends BaseActivity implements View.OnClickListener, AbsListView.OnScrollListener {
+     private GridView gridView;
+     public static ArrayList<ImageItem> dateList;
+     private PrivateAlbumGridViewAdapter privateAlbumGridViewAdapter;
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Album.java b/src/com/transage/privatespace/gallery/photozoom/Album.java
+index 0d0b972..27173f5 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Album.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Album.java
+@@ -7,7 +7,6 @@ import android.net.Uri;
+ import android.os.AsyncTask;
+ import android.os.Bundle;
+ import android.provider.MediaStore;
+-import android.support.v7.app.AppCompatActivity;
+ import android.util.Log;
+ import android.view.View;
+ import android.view.View.OnClickListener;
+@@ -16,6 +15,7 @@ import android.widget.GridView;
+ import android.widget.Toast;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.database.DatabaseAdapter;
+ import com.transage.privatespace.database.PsDatabaseHelper;
+ import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+@@ -31,7 +31,7 @@ import java.util.concurrent.Executors;
+  *
+  * @author Tom
+  */
+-public class Album extends AppCompatActivity implements OnClickListener {
++public class Album extends BaseActivity implements OnClickListener {
+     private GridView gridView;
+     private AlbumGridViewAdapter gridImageAdapter;
+     //这个静态 成员变量 在FolderGirdViewAdapter的item点击事件中 就已经赋值了
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Folders.java b/src/com/transage/privatespace/gallery/photozoom/Folders.java
+index 60b9d3e..bcc4af1 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Folders.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Folders.java
+@@ -2,12 +2,12 @@ package com.transage.privatespace.gallery.photozoom;
+ 
+ 
+ import android.os.Bundle;
+-import android.support.v7.app.AppCompatActivity;
+ import android.view.View;
+ import android.view.View.OnClickListener;
+ import android.widget.GridView;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ 
+ import java.util.List;
+ 
+@@ -16,7 +16,7 @@ import java.util.List;
+  * 这个类主要是用来:将所有包含图片的文件夹  以GridView的形式展示出来
+  * @author Tom
+  */
+-public class Folders extends AppCompatActivity {
++public class Folders extends BaseActivity {
+ 
+ 	private AlbumHelper helper;
+ 	public static List<ImageBucket> contentList;
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Gallery.java b/src/com/transage/privatespace/gallery/photozoom/Gallery.java
+index 3b4d207..6d54d34 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Gallery.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Gallery.java
+@@ -5,7 +5,6 @@ import android.content.Intent;
+ import android.os.AsyncTask;
+ import android.os.Bundle;
+ import android.support.v4.view.ViewPager.OnPageChangeListener;
+-import android.support.v7.app.AppCompatActivity;
+ import android.view.View;
+ import android.view.View.OnClickListener;
+ import android.widget.Button;
+@@ -13,6 +12,7 @@ import android.widget.ProgressBar;
+ import android.widget.Toast;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.activity.BaseActivity;
+ import com.transage.privatespace.gallery.activity.PrivateAlbum;
+ import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+ 
+@@ -22,7 +22,7 @@ import com.transage.privatespace.gallery.util.AESEncryptionUtil;
+  *
+  * @author Tom
+  */
+-public class Gallery extends AppCompatActivity implements OnClickListener, OnPageChangeListener {
++public class Gallery extends BaseActivity implements OnClickListener, OnPageChangeListener {
+     private Intent intent;
+     public static boolean isFromPrivateAlbum;
+     private int location;//当前的位置
diff --git "a/privatespace_submit/dongruipanruipan14.diff" "b/privatespace_submit/dongruipanruipan14.diff"
new file mode 100755
index 0000000..f2cc779
--- /dev/null
+++ "b/privatespace_submit/dongruipanruipan14.diff"
@@ -0,0 +1,221 @@
+diff --git a/src/com/transage/privatespace/PrivateSpaceApplication.java b/src/com/transage/privatespace/PrivateSpaceApplication.java
+index 4e425c5..dee043e 100755
+--- a/src/com/transage/privatespace/PrivateSpaceApplication.java
++++ b/src/com/transage/privatespace/PrivateSpaceApplication.java
+@@ -5,7 +5,6 @@ import android.app.Application;
+ import android.content.ComponentName;
+ import android.content.Context;
+ import android.content.Intent;
+-import android.util.Log;
+ 
+ import com.transage.privatespace.activity.EmptyActivity;
+ 
+@@ -25,9 +24,9 @@ public class PrivateSpaceApplication extends Application {
+         List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);
+         if (!tasks.isEmpty()) {
+             ComponentName topActivity = tasks.get(0).topActivity;
+-            Log.d("PrivateSpaceApplication", topActivity.getPackageName());
++            //Log.d("PrivateSpaceApplication", topActivity.getPackageName());
+             if (!topActivity.getPackageName().equals(getPackageName())) {
+-                Log.d("PrivateSpaceApplication", "go to background");
++                //Log.d("PrivateSpaceApplication", "go to background");
+                 Intent intent = new Intent(this,EmptyActivity.class);
+                 intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+                 intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+diff --git a/src/com/transage/privatespace/activity/AdvancedSetup.java b/src/com/transage/privatespace/activity/AdvancedSetup.java
+index 4cf5d36..9736d6f 100755
+--- a/src/com/transage/privatespace/activity/AdvancedSetup.java
++++ b/src/com/transage/privatespace/activity/AdvancedSetup.java
+@@ -45,11 +45,6 @@ public class AdvancedSetup extends BaseActivity implements View.OnClickListener,
+         Switch aSwitch3 = (Switch) findViewById(R.id.switch3);
+         Switch aSwitch4 = (Switch) findViewById(R.id.switch4);
+         Switch switchSaveVcf = (Switch) findViewById(R.id.switch_save_by_cvf);
+-        aSwitch1.setOnCheckedChangeListener(this);
+-        aSwitch2.setOnCheckedChangeListener(this);
+-        aSwitch3.setOnCheckedChangeListener(this);
+-        aSwitch4.setOnCheckedChangeListener(this);
+-        switchSaveVcf.setOnCheckedChangeListener(this);
+         // 根据xml中保存的开关状态 设置switch状态
+         if (Login.sp.getBoolean("enterByPrivateFingerprint", false)) {
+             aSwitch1.setChecked(true);
+@@ -71,8 +66,13 @@ public class AdvancedSetup extends BaseActivity implements View.OnClickListener,
+         } else {
+             aSwitch4.setChecked(false);
+         }
+-        
+         switchSaveVcf.setChecked(ImportExportUtils.isVcf(this));
++        //checkChange监听
++        aSwitch1.setOnCheckedChangeListener(this);
++        aSwitch2.setOnCheckedChangeListener(this);
++        aSwitch3.setOnCheckedChangeListener(this);
++        aSwitch4.setOnCheckedChangeListener(this);
++        switchSaveVcf.setOnCheckedChangeListener(this);
+     }
+ 
+     // switch的CheckedChanged监听
+diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
+index 33630d2..f85253e 100755
+--- a/src/com/transage/privatespace/activity/Login.java
++++ b/src/com/transage/privatespace/activity/Login.java
+@@ -3,7 +3,7 @@ package com.transage.privatespace.activity;
+ import android.animation.AnimatorSet;
+ import android.animation.ObjectAnimator;
+ import android.annotation.SuppressLint;
+-import android.app.Activity;
++import android.content.ComponentName;
+ import android.content.ContentResolver;
+ import android.content.Context;
+ import android.content.Intent;
+@@ -20,7 +20,6 @@ import android.support.v7.app.AlertDialog;
+ import android.text.TextUtils;
+ import android.text.method.HideReturnsTransformationMethod;
+ import android.text.method.PasswordTransformationMethod;
+-import android.util.Log;
+ import android.view.KeyEvent;
+ import android.view.LayoutInflater;
+ import android.view.View;
+@@ -89,10 +88,9 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+         super.onResume();
+         //注册指纹监听
+         if (!isFirstRun && sp.getBoolean("enterByPrivateFingerprint", false)
+-                && FingerprintManagerCompat.from(this).hasEnrolledFingerprints()
+                 && !resetPrivateMarkFromAdvancedSetup && !resetPrivateMarkFromSecurityQuestion) {
+-            retryFingerprint();
+-            if (null != dialogFingerPrint && !dialogFingerPrint.isShowing()) {
++            retryFingerprint();//注册指纹监听
++            if (FingerprintManagerCompat.from(this).hasEnrolledFingerprints() && null != dialogFingerPrint && !dialogFingerPrint.isShowing()) {
+                 dialogFingerPrint.show();
+             }
+             btFingerprint.setVisibility(View.VISIBLE);
+@@ -100,6 +98,12 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+         }
+     }
+ 
++    @Override
++    protected void onPause() {
++        stopFingerprint();//注销指纹监听
++        super.onPause();
++    }
++
+     /**
+      * 初始化数据
+      */
+@@ -163,6 +167,13 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+                 }
+                 break;
+             case R.id.bt_finger_print://指纹登录按钮
++                if (!FingerprintManagerCompat.from(this).hasEnrolledFingerprints()){
++                    Intent intent = new Intent();
++                    ComponentName cn = new ComponentName("com.android.settings", "com.android.settings.fingerprint.FingerprintLauncher");
++                    intent.setComponent(cn);
++                    startActivity(intent);
++                    break;
++                }
+                 retryFingerprint();
+                 dialogFingerPrint.show();
+                 break;
+@@ -301,23 +312,10 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+     // 返回键
+     @Override
+     public void onBackPressed() {
+-        if (!isFirstRun && !isChangePrivateMark) { // 处于日常登录界面
+-            finish();
+-        }
+         if (!isFirstRun && isChangePrivateMark) { // 处于修改密码界面
+             isChangePrivateMark = false;
+-            finish();
+-            return;
+-        }
+-        if (isFirstRun) { // 首次运行
+-            finish();
+         }
+-    }
+-
+-    @Override
+-    public void onStop(){
+-        super.onStop();
+-        stopFingerprint();//停止指纹监听
++        finish();
+     }
+ 
+     /**
+@@ -348,7 +346,7 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+                         textView3.setVisibility(View.GONE);
+                         frameLayout2.setVisibility(View.VISIBLE);
+                         editText1.setText(null);
+-                    } else { // 验证成功后：日常登录
++                    } else if (!Login.this.isFinishing()){ // 验证成功后：日常登录,且界面没有finish
+                         startActivity(new Intent(Login.this, Main.class));
+                         finish();
+                     }
+@@ -462,6 +460,7 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
+     private void stopFingerprint() {
+         try {
+             mFingerprintCancel.cancel();
++            mFingerprintCancel = null;
+         } catch (Exception e) {
+             e.printStackTrace();
+         }
+diff --git a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+index 2d3f705..7a62729 100755
+--- a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
++++ b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+@@ -288,11 +288,14 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+         protected Boolean doInBackground(Void... params) {
+             boolean result = false;
+             result = decryptFileList(listPrivFliePath); //解密文件集合
++            int totalTime = 0;
+             while (result && getApplicationContext().getContentResolver().
+                     query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, null, null, null, null).getCount()
+-                    != (startSize + listPrivFliePath.size())) {
++                    != (startSize + listPrivFliePath.size()) && totalTime < listPrivFliePath.size()/2) {
+                 try {
+                     Thread.sleep(2000);
++                    totalTime +=2;
++                    //Log.d("DecryptionTask", "totalTime:" + totalTime);
+                 } catch (InterruptedException e) {
+                     e.printStackTrace();
+                 }
+diff --git a/src/com/transage/privatespace/gallery/photozoom/Album.java b/src/com/transage/privatespace/gallery/photozoom/Album.java
+index 27173f5..e30a8ca 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/Album.java
++++ b/src/com/transage/privatespace/gallery/photozoom/Album.java
+@@ -74,6 +74,9 @@ public class Album extends BaseActivity implements OnClickListener {
+         if (null != progressDialog && progressDialog.isShowing()) {
+             progressDialog.dismiss();
+         }
++/*        if (null != mTask && !mTask.isCancelled()){
++            mTask.cancel(true);
++        }*/
+     }
+ 
+     //////////////////////////////////////////////////////////////////////////////////////////
+@@ -132,9 +135,12 @@ public class Album extends BaseActivity implements OnClickListener {
+         protected Boolean doInBackground(Void... params) {
+             boolean result = false;
+             result = encryptFileList(mImageArrayList); //加密文件集合
+-            while (result && databaseAdapter.getPhoto().size() != (startSize + mImageArrayList.size())) {
++            int totalTime = 0;
++            while (result && databaseAdapter.getPhoto().size() != (startSize + mImageArrayList.size()) && totalTime < mImageArrayList.size()) {
+                 try {
+                     Thread.sleep(2000);
++                    totalTime += 2;
++                    //Log.d("EncryptionTask", "totalTime:" + totalTime);
+                 } catch (InterruptedException e) {
+                     e.printStackTrace();
+                 }
+@@ -208,8 +214,12 @@ public class Album extends BaseActivity implements OnClickListener {
+         contentValues.put(PsDatabaseHelper.FilesClumns.MIME_TYPE,item.getMimeType());
+         contentValues.put(PsDatabaseHelper.FilesClumns.BUCKET_ID,item.getBucketId());
+         contentValues.put(PsDatabaseHelper.FilesClumns.BUCKET_DISPLAY_NAME,item.getBucket_display_name());
+-        contentValues.put(PsDatabaseHelper.FilesClumns.WIDTH,Integer.valueOf(item.getWidth()));
+-        contentValues.put(PsDatabaseHelper.FilesClumns.HEIGHT,Integer.valueOf(item.getHeight()));
++        try {
++            contentValues.put(PsDatabaseHelper.FilesClumns.WIDTH,Integer.valueOf(item.getWidth()));
++            contentValues.put(PsDatabaseHelper.FilesClumns.HEIGHT,Integer.valueOf(item.getHeight()));
++        } catch (NumberFormatException e) {
++            e.printStackTrace();
++        }
+         databaseAdapter.insertPhoto(contentValues);
+     }
+ 
diff --git "a/privatespace_submit/dongruipan/32\345\242\236\345\212\240\346\225\260\346\215\256\347\232\204\346\216\222\345\272\217\343\200\201\347\247\201\345\257\206\347\233\270\345\206\214\346\227\240\345\233\276\346\217\220\347\244\272/ruipan15.diff" "b/privatespace_submit/dongruipan/32\345\242\236\345\212\240\346\225\260\346\215\256\347\232\204\346\216\222\345\272\217\343\200\201\347\247\201\345\257\206\347\233\270\345\206\214\346\227\240\345\233\276\346\217\220\347\244\272/ruipan15.diff"
new file mode 100755
index 0000000..fa48198
--- /dev/null
+++ "b/privatespace_submit/dongruipan/32\345\242\236\345\212\240\346\225\260\346\215\256\347\232\204\346\216\222\345\272\217\343\200\201\347\247\201\345\257\206\347\233\270\345\206\214\346\227\240\345\233\276\346\217\220\347\244\272/ruipan15.diff"
@@ -0,0 +1,120 @@
+diff --git a/res/layout/activity_private_album.xml b/res/layout/activity_private_album.xml
+index a88e76a..e3bea4b 100755
+--- a/res/layout/activity_private_album.xml
++++ b/res/layout/activity_private_album.xml
+@@ -44,6 +44,16 @@
+         android:layout_width="match_parent"
+         android:layout_height="match_parent">
+ 
++        <TextView
++            android:id="@+id/tv_no_picture"
++            android:layout_width="wrap_content"
++            android:text="@string/no_picture"
++            android:visibility="gone"
++            android:textSize="18sp"
++            android:textColor="@color/greytext"
++            android:layout_gravity="center"
++            android:layout_height="wrap_content"/>
++
+         <GridView
+             android:id="@+id/album_GridView"
+             android:layout_width="match_parent"
+diff --git a/res/values/strings.xml b/res/values/strings.xml
+index 1d23ed7..d7194b0 100755
+--- a/res/values/strings.xml
++++ b/res/values/strings.xml
+@@ -64,5 +64,6 @@
+     <string name="private_album">私密相册</string>
+     <string name="add_private_photo">添加私密图片</string>
+     <string name="click_login_by_finger_print">点击进行指纹登录</string>
++    <string name="no_picture">没 有 图 片</string>
+ 
+ </resources>
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index fc22fa2..d14dc96 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -429,7 +429,7 @@ public class DatabaseAdapter {
+      * 获取私密数据库中图片数据的操作
+      */
+     public ArrayList<ImageItem> getPhoto() {
+-        String sql = "SELECT * " + " FROM " + PsDatabaseHelper.Tables.FILES;
++        String sql = "SELECT * " + " FROM " + PsDatabaseHelper.Tables.FILES + " ORDER BY " + PsDatabaseHelper.FilesClumns._ID + " DESC ";
+         Log.i(TAG, "sql = " + sql);
+         ArrayList<ImageItem> list = new ArrayList<>();
+         Cursor cursor = query(sql, null);
+diff --git a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+index 7a62729..f873e0b 100755
+--- a/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
++++ b/src/com/transage/privatespace/gallery/activity/PrivateAlbum.java
+@@ -14,6 +14,7 @@ import android.widget.AbsListView;
+ import android.widget.CheckBox;
+ import android.widget.GridView;
+ import android.widget.ImageView;
++import android.widget.TextView;
+ import android.widget.Toast;
+ 
+ import com.bumptech.glide.Glide;
+@@ -48,6 +49,7 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+     private static DatabaseAdapter databaseAdapter;
+     private ProgressDialog progressDialog;
+     private VisibleImageDecryptionTask visibleImageDecryptionTask;
++    private static TextView tvNoPicture;
+ 
+     @Override
+     protected void onCreate(@Nullable Bundle savedInstanceState) {
+@@ -80,6 +82,7 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+         findViewById(R.id.checkbox_select_all).setOnClickListener(this);
+         findViewById(R.id.button_back).setOnClickListener(this);
+         findViewById(R.id.button_min).setOnClickListener(this);
++        tvNoPicture = (TextView) findViewById(R.id.tv_no_picture);
+ 
+ //        dateList = databaseAdapter.getPhoto();//数据
+         Log.d("PrivateAlbum", "dateList.size():" + dateList.size());
+@@ -92,6 +95,11 @@ public class PrivateAlbum extends BaseActivity implements View.OnClickListener,
+ 
+     }
+ 
++    //无图片时，展示提示语
++    public static void showNoPictureTip(){
++        tvNoPicture.setVisibility(View.VISIBLE);
++    }
++
+     /**
+      * 加载首屏数据的方法
+      */
+diff --git a/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java b/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java
+index 2cc3284..e82b740 100755
+--- a/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java
++++ b/src/com/transage/privatespace/gallery/adapter/PrivateAlbumGridViewAdapter.java
+@@ -11,6 +11,7 @@ import android.widget.ImageView;
+ 
+ import com.bumptech.glide.Glide;
+ import com.transage.privatespace.R;
++import com.transage.privatespace.gallery.activity.PrivateAlbum;
+ import com.transage.privatespace.gallery.photozoom.Bimp;
+ import com.transage.privatespace.gallery.photozoom.Gallery;
+ import com.transage.privatespace.gallery.photozoom.ImageItem;
+@@ -77,6 +78,9 @@ public class PrivateAlbumGridViewAdapter extends BaseAdapter {
+ 
+ 
+     public int getCount() {
++        if (listPrivFlies.size() == 0){
++            PrivateAlbum.showNoPictureTip();
++        }
+         return listPrivFlies.size();
+     }
+ 
+diff --git a/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java b/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java
+index 08e2fe0..f831e70 100755
+--- a/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java
++++ b/src/com/transage/privatespace/gallery/photozoom/AlbumHelper.java
+@@ -139,7 +139,7 @@ public class AlbumHelper {
+ 		String columns[] = new String[] { Media._ID, Media.BUCKET_ID,
+ 				Media.PICASA_ID, Media.DATA, Media.DISPLAY_NAME, Media.TITLE,
+ 				Media.SIZE, Media.BUCKET_DISPLAY_NAME ,Media.DATE_ADDED,Media.MIME_TYPE,Media.WIDTH,Media.HEIGHT};
+-		Cursor cur = cr.query(Media.EXTERNAL_CONTENT_URI, columns, null, null, Media.DATE_ADDED+" desc");
++		Cursor cur = cr.query(Media.EXTERNAL_CONTENT_URI, columns, null, null, Media._ID+" DESC ");
+ 		bucketList.clear();//add by dongrp
+ 		if (cur.moveToFirst()) {
+ 			int photoIDIndex = cur.getColumnIndexOrThrow(Media._ID);
diff --git "a/privatespace_submit/wangmeng/24\345\216\273\351\231\244\347\247\201\345\257\206\350\201\224\347\263\273\344\272\272\344\270\255\347\202\271\345\207\273\347\237\255\344\277\241\345\233\276\346\240\207\357\274\214\347\224\265\350\257\235\345\217\267\347\240\201\345\211\215\347\232\204/wangmeng4.diff" "b/privatespace_submit/wangmeng/24\345\216\273\351\231\244\347\247\201\345\257\206\350\201\224\347\263\273\344\272\272\344\270\255\347\202\271\345\207\273\347\237\255\344\277\241\345\233\276\346\240\207\357\274\214\347\224\265\350\257\235\345\217\267\347\240\201\345\211\215\347\232\204/wangmeng4.diff"
new file mode 100755
index 0000000..74358a5
--- /dev/null
+++ "b/privatespace_submit/wangmeng/24\345\216\273\351\231\244\347\247\201\345\257\206\350\201\224\347\263\273\344\272\272\344\270\255\347\202\271\345\207\273\347\237\255\344\277\241\345\233\276\346\240\207\357\274\214\347\224\265\350\257\235\345\217\267\347\240\201\345\211\215\347\232\204/wangmeng4.diff"
@@ -0,0 +1,13 @@
+diff --git a/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java b/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java
+index 772dcbe..2358e08 100755
+--- a/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java
++++ b/src/com/transage/privatespace/adapter/PeopleListViewAdapter.java
+@@ -142,7 +142,7 @@ public class PeopleListViewAdapter extends BaseAdapter {
+ 				ActivityCompat.requestPermissions((Activity) context, new String[] { Manifest.permission.SEND_SMS }, 1);// 申请发短信权限
+ 				return;
+ 			}
+-			intent = new Intent(android.content.Intent.ACTION_SENDTO, Uri.parse("smsto://" + phoneNum));
++			intent = new Intent(android.content.Intent.ACTION_SENDTO, Uri.parse("smsto:" + phoneNum));
+ 		}
+ 		context.startActivity(intent);
+ 	}
diff --git "a/privatespace_submit/wangmeng/25\347\247\201\345\257\206\347\237\255\344\277\241\346\225\260\346\215\256\345\272\223\346\267\273\345\212\240read\345\255\227\346\256\265;\344\274\230\345\214\226\347\247\201\345\257\206\347\237\255\344\277\241\346\267\273\345\212\240\347\247\201\345\257\206\346\225\260\346\215\256\345\272\223\345\244\261\350\264\245\347\232\204\351\227\256\351\242\230/wangmeng5.diff" "b/privatespace_submit/wangmeng/25\347\247\201\345\257\206\347\237\255\344\277\241\346\225\260\346\215\256\345\272\223\346\267\273\345\212\240read\345\255\227\346\256\265;\344\274\230\345\214\226\347\247\201\345\257\206\347\237\255\344\277\241\346\267\273\345\212\240\347\247\201\345\257\206\346\225\260\346\215\256\345\272\223\345\244\261\350\264\245\347\232\204\351\227\256\351\242\230/wangmeng5.diff"
new file mode 100755
index 0000000..d6ea5ab
--- /dev/null
+++ "b/privatespace_submit/wangmeng/25\347\247\201\345\257\206\347\237\255\344\277\241\346\225\260\346\215\256\345\272\223\346\267\273\345\212\240read\345\255\227\346\256\265;\344\274\230\345\214\226\347\247\201\345\257\206\347\237\255\344\277\241\346\267\273\345\212\240\347\247\201\345\257\206\346\225\260\346\215\256\345\272\223\345\244\261\350\264\245\347\232\204\351\227\256\351\242\230/wangmeng5.diff"
@@ -0,0 +1,218 @@
+diff --git a/src/com/transage/privatespace/bean/SmsInfo.java b/src/com/transage/privatespace/bean/SmsInfo.java
+index 0cfc731..3e0acd6 100755
+--- a/src/com/transage/privatespace/bean/SmsInfo.java
++++ b/src/com/transage/privatespace/bean/SmsInfo.java
+@@ -4,14 +4,22 @@ package com.transage.privatespace.bean;
+  * Created by dongrp on 2016/9/12.
+  */
+ public class SmsInfo {
++    //短信消息序号
+     private int id;
++    //对话序号
+     private long thread_id;
++    //电话号码
+     private String address;
++    //内容
+     private String body;
++    //日期
+     private long date;
++    //发件人
+     private String person;
++    //类型 发送或接收
+     private int type;
+-
++    //是否已读
++    private String read;
+     public int getId() {
+         return id;
+     }
+@@ -66,4 +74,11 @@ public class SmsInfo {
+     public void setPerson(String person) {
+         this.person = person;
+     }
++    public String getRead() {
++        return read;
++    }
++
++    public void setRead(String read) {
++        this.read = read;
++    }
+ }
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index cab7681..649cfdb 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -235,6 +235,7 @@ public class DatabaseAdapter {
+         values.put(PsDatabaseHelper.SmsColumns.SMS_DATE, Long.valueOf(sms.getDate()));
+         values.put(PsDatabaseHelper.SmsColumns.SMS_PERSON, sms.getPerson());
+         values.put(PsDatabaseHelper.SmsColumns.SMS_TYPE, String.valueOf(sms.getType()));
++        values.put(PsDatabaseHelper.SmsColumns.SMS_READ, sms.getRead());
+         //Log.e("wangmeng","===add===threadId: "+sms.getThread_id());
+         //Log.e("wangmeng","===add===address: "+sms.getAddress());
+        // Log.e("wangmeng","===add===body: "+sms.getBody());
+@@ -254,7 +255,8 @@ public class DatabaseAdapter {
+             PsDatabaseHelper.SmsColumns.SMS_BODY + "," +
+             PsDatabaseHelper.SmsColumns.SMS_DATE + "," +
+             PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
+-            PsDatabaseHelper.SmsColumns.SMS_TYPE +
++            PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
++            PsDatabaseHelper.SmsColumns.SMS_READ +
+                 " FROM " + PsDatabaseHelper.Tables.SMS +
+                 " WHERE " + PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "=?" ;
+         Log.i(TAG, "sql = " + sql);
+@@ -270,6 +272,7 @@ public class DatabaseAdapter {
+                 sms.setDate(cursor.getLong(4));
+                 sms.setPerson(cursor.getString(5));
+                 sms.setType(cursor.getInt(6));
++                sms.setRead(cursor.getString(7));
+                 list.add(sms);
+             }
+         } catch (Exception e) {
+@@ -287,7 +290,8 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.SmsColumns.SMS_BODY + "," +
+                 PsDatabaseHelper.SmsColumns.SMS_DATE + "," +
+                 PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
+-                PsDatabaseHelper.SmsColumns.SMS_TYPE +
++                PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
++                PsDatabaseHelper.SmsColumns.SMS_READ +
+                 " FROM " + PsDatabaseHelper.Tables.SMS;
+         Log.i(TAG, "sql = " + sql);
+         List<SmsInfo> list = new ArrayList<>();
+@@ -302,6 +306,7 @@ public class DatabaseAdapter {
+                 sms.setDate(cursor.getLong(4));
+                 sms.setPerson(cursor.getString(5));
+                 sms.setType(cursor.getInt(6));
++                sms.setRead(cursor.getString(7));
+                 list.add(sms);
+             }
+         } catch (Exception e) {
+diff --git a/src/com/transage/privatespace/database/PsDatabaseHelper.java b/src/com/transage/privatespace/database/PsDatabaseHelper.java
+index 6f7a174..e0ffcbc 100755
+--- a/src/com/transage/privatespace/database/PsDatabaseHelper.java
++++ b/src/com/transage/privatespace/database/PsDatabaseHelper.java
+@@ -47,6 +47,7 @@ public class PsDatabaseHelper extends SQLiteOpenHelper {
+         public static final String SMS_TYPE = "sms_type";
+         public static final String SMS_ADDRESS = "sms_address";
+         public static final String SMS_BODY = "sms_body";
++        public static final String SMS_READ = "sms_read";
+     }
+ 
+     public interface CallRecordClumns {
+@@ -126,7 +127,8 @@ public class PsDatabaseHelper extends SQLiteOpenHelper {
+                 SmsColumns.SMS_BODY + " TEXT," +
+                 SmsColumns.SMS_DATE + " TEXT," +
+                 SmsColumns.SMS_PERSON + " TEXT," +
+-                SmsColumns.SMS_TYPE + " TEXT" +
++                SmsColumns.SMS_TYPE + " TEXT," +
++                SmsColumns.SMS_READ + " TEXT" +
+                 ");";
+         Log.i(TAG, "sql = " + sqlCreateSmsTable);
+         sqLiteDatabase.execSQL(sqlCreateSmsTable);
+diff --git a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+index c0f0854..0acf6bb 100755
+--- a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
++++ b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+@@ -15,17 +15,15 @@ import android.os.Handler;
+ import android.os.Message;
+ import android.provider.CallLog;
+ import android.provider.ContactsContract;
+-import android.provider.Telephony;
+ import android.support.v4.app.ActivityCompat;
+ import android.util.Log;
+-import android.provider.Telephony.Sms;
++
+ import com.android.internal.telephony.SmsApplication;
+ import com.transage.privatespace.activity.PrivateContacts;
+ import com.transage.privatespace.bean.CallRecord;
+ import com.transage.privatespace.bean.People;
+ import com.transage.privatespace.bean.SmsInfo;
+ import com.transage.privatespace.database.DatabaseAdapter;
+-import com.transage.privatespace.database.PsDatabaseHelper;
+ import com.transage.privatespace.utils.ImportExportUtils;
+ 
+ import java.io.File;
+@@ -115,10 +113,11 @@ public class PrivateSpaceLoader {
+                 getThreadPool().execute(new Runnable() {
+                     @Override
+                     public void run() {
++                        String phoneNum = formatNumber(people.getPhoneNum());//格式化电话号码
+                         //还原短信到数据库中
+-                        insertSmstoSystem(activity,databaseAdapter.getSmsByNum(people.getPhoneNum()));
++                        insertSmstoSystem(activity,databaseAdapter.getSmsByNum(phoneNum));
+                         //删除私密短信
+-                        new DatabaseAdapter(activity).deleteSmsByAddress(people.getPhoneNum());
++                        new DatabaseAdapter(activity).deleteSmsByAddress(phoneNum);
+                         databaseAdapter.deleteContactsById(people.getId());
+                         mHandler.sendEmptyMessage(REFRESHE_SMS);
+                     }
+@@ -243,9 +242,20 @@ public class PrivateSpaceLoader {
+             values.put("body", sms.getBody());
+             values.put("date", String.valueOf(sms.getDate()));
+             values.put("type", String.valueOf(sms.getType()));
++            values.put("read",sms.getRead());
+             context.getContentResolver().insert(Uri.parse("content://sms/"), values);
+         }
+     }
++    //格式化电话号码 add by wangmeng 20170821
++    public String formatNumber(String number){
++        String phoneNumStr = null;
++        if(number.contains("+86")){
++            phoneNumStr = number.replace("+86","").trim();
++        }else{
++            phoneNumStr = number.trim();
++        }
++        return phoneNumStr;
++    }
+     //添加短信到私密 add by wangmeng 20170707
+     public void addSmstoPrivate(Activity activity, People phone) {
+         // 1.先获取到所有私密联系人
+@@ -254,14 +264,19 @@ public class PrivateSpaceLoader {
+         //Log.e("wangmeng","=====111111111========>");
+         // 2.获取私密联系人的短信记录
+         SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-dd HH:mm", Locale.getDefault());
+-        String[] projection = new String[]{"_id", "thread_id", "address", "person", "body", "date", "type"};
++        String[] projection = new String[]{"_id", "thread_id", "address", "person", "body", "date", "type","read"};
+ //        for (int i = 0; i < listPrivatePeople.size(); i++) {
+ //            String phone = listPrivatePeople.get(i).getPhoneNum();
+         if (phone != null) {
+             Log.e("wangmeng","=====222222222========>");
+-            Cursor cursor2 = activity.getContentResolver().query(Uri.parse("content://sms/"), projection,
+-                    "address=?", new String[]{phone.getPhoneNum()}, "date desc");
++//            Cursor cursor2 = activity.getContentResolver().query(Uri.parse("content://sms/"), projection,
++//                    "address=?", new String[]{phone.getPhoneNum()}, "date desc");
++            String phoneNum = formatNumber(phone.getPhoneNum());
++            Cursor cursor2 = activity.getContentResolver().query(Uri.parse("content://sms/"), projection , "address"+"  LIKE ? ",
++                    new String[] { "%" + phoneNum + "%" }, "date desc");
++            Log.e("wangmeng","=====phone.getPhoneNum========>"+phoneNum);
+             Log.e("wangmeng","=====cursor2========>"+cursor2);
++            Log.e("wangmeng","=====cursor2.moveToFirst========>"+cursor2.moveToFirst());
+             if (cursor2 != null && cursor2.moveToFirst()) {
+                 // ArrayList<Sms> listSms = new ArrayList<Sms>();
+                 do {
+@@ -273,21 +288,23 @@ public class PrivateSpaceLoader {
+                     long date = cursor2.getLong(cursor2.getColumnIndex("date"));//收发时间
+                     //String date = simpleDateFormat.format(new Date(cursor2.getLong(cursor2.getColumnIndex("date"))));// 收发时间
+                     int type = cursor2.getInt(cursor2.getColumnIndex("type"));// 收发类型
++                    String read = cursor2.getString(cursor2.getColumnIndex("read"));//是否阅读
+ //                        Log.e("wangmeng","======threadId: "+threadId);
+ //                        Log.e("wangmeng","======address: "+address);
+ //                        Log.e("wangmeng","======body: "+body);
+-                        Log.e("wangmeng","======date: "+date);
++                    Log.e("wangmeng","======date: "+date);
++                    Log.e("wangmeng","======read: "+read);
+ //                        Log.e("wangmeng","======type: "+type);
+                     // 添加一条短息数据到listSms
+                     SmsInfo sms = new SmsInfo();
+                     sms.setId(id);
+                     sms.setThread_id(threadId);
+-                    sms.setAddress(address);
++                    sms.setAddress(formatNumber(address));
+                     sms.setPerson(phone.getDisplayName());
+                     sms.setBody(body);
+                     sms.setDate(date);
+                     sms.setType(type);
+-
++                    sms.setRead(read);
+                     new DatabaseAdapter(activity).addSms(sms);
+ 					//wangmeng delete mms data
+ 					int result = activity.getContentResolver().delete(Uri.parse("content://sms/"), "address = ?", new String[]{address});
diff --git "a/privatespace_submit/wangmeng/26\344\277\256\345\244\215\346\267\273\345\212\240\344\270\200\344\270\252\344\270\215\345\270\246+86\347\232\204\345\217\267\347\240\201\357\274\214\351\246\226\346\254\241\345\212\240\345\205\245\347\247\201\345\257\206\347\237\255\344\277\241\350\257\273\344\270\215\345\210\260\346\225\260\346\215\256/wangmeng6.diff" "b/privatespace_submit/wangmeng/26\344\277\256\345\244\215\346\267\273\345\212\240\344\270\200\344\270\252\344\270\215\345\270\246+86\347\232\204\345\217\267\347\240\201\357\274\214\351\246\226\346\254\241\345\212\240\345\205\245\347\247\201\345\257\206\347\237\255\344\277\241\350\257\273\344\270\215\345\210\260\346\225\260\346\215\256/wangmeng6.diff"
new file mode 100755
index 0000000..be84a18
--- /dev/null
+++ "b/privatespace_submit/wangmeng/26\344\277\256\345\244\215\346\267\273\345\212\240\344\270\200\344\270\252\344\270\215\345\270\246+86\347\232\204\345\217\267\347\240\201\357\274\214\351\246\226\346\254\241\345\212\240\345\205\245\347\247\201\345\257\206\347\237\255\344\277\241\350\257\273\344\270\215\345\210\260\346\225\260\346\215\256/wangmeng6.diff"
@@ -0,0 +1,16 @@
+diff --git a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+index 0acf6bb..1e14bba 100755
+--- a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
++++ b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+@@ -250,9 +250,9 @@ public class PrivateSpaceLoader {
+     public String formatNumber(String number){
+         String phoneNumStr = null;
+         if(number.contains("+86")){
+-            phoneNumStr = number.replace("+86","").trim();
++            phoneNumStr = number.replace("+86","").replaceAll(" ", "").replaceAll("-", "").trim();
+         }else{
+-            phoneNumStr = number.trim();
++            phoneNumStr = number.replaceAll(" ", "").replaceAll("-", "").trim();
+         }
+         return phoneNumStr;
+     }
diff --git "a/privatespace_submit/wangmeng/30\346\267\273\345\212\240\347\247\201\345\257\206\347\237\255\344\277\241\345\257\271\345\244\226\347\232\204\346\217\222\345\205\245\350\257\273\345\217\226\346\225\260\346\215\256\347\232\204\346\216\245\345\217\243/wangmeng7.diff" "b/privatespace_submit/wangmeng/30\346\267\273\345\212\240\347\247\201\345\257\206\347\237\255\344\277\241\345\257\271\345\244\226\347\232\204\346\217\222\345\205\245\350\257\273\345\217\226\346\225\260\346\215\256\347\232\204\346\216\245\345\217\243/wangmeng7.diff"
new file mode 100755
index 0000000..1c8c270
--- /dev/null
+++ "b/privatespace_submit/wangmeng/30\346\267\273\345\212\240\347\247\201\345\257\206\347\237\255\344\277\241\345\257\271\345\244\226\347\232\204\346\217\222\345\205\245\350\257\273\345\217\226\346\225\260\346\215\256\347\232\204\346\216\245\345\217\243/wangmeng7.diff"
@@ -0,0 +1,135 @@
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index 649cfdb..fc22fa2 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -247,6 +247,23 @@ public class DatabaseAdapter {
+     public void deleteSmsByAddress(String address) {
+         delete(PsDatabaseHelper.Tables.SMS, PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "=?", new String[]{address});
+     }
++    public void insertSms(ContentValues contentValues) {
++        insert(PsDatabaseHelper.Tables.SMS, null, contentValues);
++    }
++    public Cursor getSmsCursor(String selection, String[] selectionArgs) {
++        String sql = "SELECT " +
++                PsDatabaseHelper.SmsColumns._ID + "," +
++                PsDatabaseHelper.SmsColumns.THREAD_ID + "," +
++                PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "," +
++                PsDatabaseHelper.SmsColumns.SMS_BODY + "," +
++                PsDatabaseHelper.SmsColumns.SMS_DATE + "," +
++                PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
++                PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
++                PsDatabaseHelper.SmsColumns.SMS_READ +
++                " FROM " + PsDatabaseHelper.Tables.SMS + " WHERE " +
++                selection;
++        return query(sql, new String[]{selectionArgs[0].replaceAll(" ", "").replaceAll("-", "").trim()});
++    }
+     public List<SmsInfo> getSmsByNum(String phone){
+         String sql = "SELECT " +
+             PsDatabaseHelper.SmsColumns._ID + "," +
+diff --git a/src/com/transage/privatespace/provider/PrivateObserver.java b/src/com/transage/privatespace/provider/PrivateObserver.java
+index 69eb7eb..5996c51 100755
+--- a/src/com/transage/privatespace/provider/PrivateObserver.java
++++ b/src/com/transage/privatespace/provider/PrivateObserver.java
+@@ -1,6 +1,7 @@
+ package com.transage.privatespace.provider;
+ 
+ import android.database.ContentObserver;
++import android.net.Uri;
+ import android.os.Handler;
+ import android.util.Log;
+ 
+@@ -23,11 +24,33 @@ public class PrivateObserver extends ContentObserver {
+     }
+ 
+     @Override
+-    public void onChange(boolean selfChange) {
+-        super.onChange(selfChange);
+-        if (mHandler != null){
+-            mHandler.sendEmptyMessage(PrivateSpaceLoader.PRIVATE_OBSERVER);
+-            Log.i(TAG, "onChange selfChange" + selfChange);
++    public void onChange(boolean selfChange, Uri uri) {
++        super.onChange(selfChange, uri);
++        if (uri != null) {
++            switch (PrivateProvider.uriMatcher.match(uri)) {
++                case PrivateProvider.MATCH_PHONE:
++                    //查询手机号码
++                    if (mHandler != null) {
++                        mHandler.sendEmptyMessage(PrivateSpaceLoader.REFRESHE_CONTACT);
++                        Log.i(TAG, "onChange selfChange MATCH_PHONE" + selfChange);
++                    }
++                    break;
++                case PrivateProvider.MATCH_SMS:
++                    //查询短信
++                    if (mHandler != null) {
++                        mHandler.sendEmptyMessage(PrivateSpaceLoader.REFRESHE_SMS);
++                        Log.i(TAG, "onChange selfChange MATCH_SMS" + selfChange);
++                    }
++                    break;
++                case PrivateProvider.MATCH_CALL:
++                    //查询通话记录
++                    if (mHandler != null) {
++                        mHandler.sendEmptyMessage(PrivateSpaceLoader.PRIVATE_OBSERVER);
++                        Log.i(TAG, "onChange selfChange MATCH_CALL" + selfChange);
++                    }
++                    break;
++            }
++
+         }
+     }
+ }
+diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
+index 5c03886..c13fd22 100755
+--- a/src/com/transage/privatespace/provider/PrivateProvider.java
++++ b/src/com/transage/privatespace/provider/PrivateProvider.java
+@@ -6,7 +6,6 @@ import android.content.UriMatcher;
+ import android.database.Cursor;
+ import android.net.Uri;
+ import android.util.Log;
+-
+ import com.transage.privatespace.database.DatabaseAdapter;
+ import com.transage.privatespace.utils.ImportExportUtils;
+ 
+@@ -19,12 +18,12 @@ import com.transage.privatespace.utils.ImportExportUtils;
+ public class PrivateProvider extends ContentProvider{
+     private static final String TAG = "PrivateProvider";
+     //这里的AUTHORITY就是我们在AndroidManifest.xml中配置的authorities
+-    private static final String AUTHORITY = "com.transage.privatespace";
++    public static final String AUTHORITY = "com.transage.privatespace";
+     //匹配成功后的匹配码
+-    private static final int MATCH_PHONE = 100;
+-    private static final int MATCH_SMS = 101;
+-    private static final int MATCH_CALL = 102;
+-    private static UriMatcher uriMatcher;
++    public static final int MATCH_PHONE = 100;
++    public static final int MATCH_SMS = 101;
++    public static final int MATCH_CALL = 102;
++    public static UriMatcher uriMatcher;
+ 
+     //在静态代码块中添加要匹配的 Uri
+     static {
+@@ -63,6 +62,8 @@ public class PrivateProvider extends ContentProvider{
+                 break;
+             case MATCH_SMS:
+                 //查询短信
++                Log.e("wangmeng","=======MATCH_SMS query======>");
++                cursor = mDbAdapter.getSmsCursor(selection,selectionArgs);
+                 break;
+             case MATCH_CALL:
+                 //查询通话记录
+@@ -85,13 +86,15 @@ public class PrivateProvider extends ContentProvider{
+                 break;
+             case MATCH_SMS:
+                 //insert短信
++                Log.e("wangmeng","=======MATCH_SMS insert======>");
++                mDbAdapter.insertSms(contentValues);
+                 break;
+             case MATCH_CALL:
+                 //insert通话记录
+                 mDbAdapter.insertCallLog(contentValues);
+                 break;
+         }
+-        getContext().getContentResolver().notifyChange(uri, null);
++        getContext().getContentResolver().notifyChange(uri,null);
+         return uri;
+     }
+ 
diff --git "a/privatespace_submit/xuyanjie/22\347\273\231provider\346\267\273\345\212\240\345\217\257\350\242\253\350\256\277\351\227\256\346\235\203\351\231\220/yanjie7.diff" "b/privatespace_submit/xuyanjie/22\347\273\231provider\346\267\273\345\212\240\345\217\257\350\242\253\350\256\277\351\227\256\346\235\203\351\231\220/yanjie7.diff"
new file mode 100755
index 0000000..ab98c40
--- /dev/null
+++ "b/privatespace_submit/xuyanjie/22\347\273\231provider\346\267\273\345\212\240\345\217\257\350\242\253\350\256\277\351\227\256\346\235\203\351\231\220/yanjie7.diff"
@@ -0,0 +1,12 @@
+diff --git a/AndroidManifest.xml b/AndroidManifest.xml
+index b94a45c..86c7cee 100755
+--- a/AndroidManifest.xml
++++ b/AndroidManifest.xml
+@@ -122,6 +122,7 @@
+ 
+         <provider
+             android:name=".provider.PrivateProvider"
++            android:exported="true"
+             android:authorities="com.transage.privatespace.provider.PrivateProvider"/>
+     </application>
+ 
diff --git "a/privatespace_submit/xuyanjie/23\344\277\256\345\244\215\346\235\245\347\224\265\345\216\273\347\224\265\346\237\245\350\257\242\345\214\271\351\205\215\351\224\231\350\257\257Bug;\344\277\256\345\244\215isCvf()\347\251\272\346\214\207\351\222\210Bug/yanjie8.diff" "b/privatespace_submit/xuyanjie/23\344\277\256\345\244\215\346\235\245\347\224\265\345\216\273\347\224\265\346\237\245\350\257\242\345\214\271\351\205\215\351\224\231\350\257\257Bug;\344\277\256\345\244\215isCvf()\347\251\272\346\214\207\351\222\210Bug/yanjie8.diff"
new file mode 100755
index 0000000..9384bb6
--- /dev/null
+++ "b/privatespace_submit/xuyanjie/23\344\277\256\345\244\215\346\235\245\347\224\265\345\216\273\347\224\265\346\237\245\350\257\242\345\214\271\351\205\215\351\224\231\350\257\257Bug;\344\277\256\345\244\215isCvf()\347\251\272\346\214\207\351\222\210Bug/yanjie8.diff"
@@ -0,0 +1,240 @@
+diff --git a/src/com/transage/privatespace/activity/AdvancedSetup.java b/src/com/transage/privatespace/activity/AdvancedSetup.java
+index 6120871..28c0ff9 100755
+--- a/src/com/transage/privatespace/activity/AdvancedSetup.java
++++ b/src/com/transage/privatespace/activity/AdvancedSetup.java
+@@ -2,6 +2,7 @@ package com.transage.privatespace.activity;
+ 
+ import android.app.Activity;
+ import android.content.Intent;
++import android.content.SharedPreferences;
+ import android.os.Bundle;
+ import android.support.annotation.Nullable;
+ import android.view.View;
+@@ -11,6 +12,7 @@ import android.widget.CompoundButton;
+ import android.widget.Switch;
+ 
+ import com.transage.privatespace.R;
++import com.transage.privatespace.utils.ImportExportUtils;
+ import com.transage.privatespace.utils.Util_Often_Use;
+ 
+ import static com.transage.privatespace.activity.Login.ChangePrivateMarkFromAdvancedSetup;
+@@ -20,6 +22,8 @@ import static com.transage.privatespace.activity.Login.ChangePrivateMarkFromAdva
+  */
+ public class AdvancedSetup extends Activity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener {
+ 
++    private SharedPreferences mVcfSP;
++
+     @Override
+     protected void onCreate(@Nullable Bundle savedInstanceState) {
+         super.onCreate(savedInstanceState);
+@@ -27,7 +31,9 @@ public class AdvancedSetup extends Activity implements View.OnClickListener, Com
+         requestWindowFeature(Window.FEATURE_NO_TITLE);//隐藏TitleBar
+         getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);//透明状态栏
+         setContentView(R.layout.activity_advance_setup);
+-
++        if (mVcfSP == null){
++            mVcfSP = getSharedPreferences(ImportExportUtils.SHARE_SAVEVCF, MODE_PRIVATE);
++        }
+         initView();
+     }
+ 
+@@ -66,11 +72,8 @@ public class AdvancedSetup extends Activity implements View.OnClickListener, Com
+         } else {
+             aSwitch4.setChecked(false);
+         }
+-        if (Login.sp.getBoolean("saveVcf", false)) {
+-            switchSaveVcf.setChecked(true);
+-        } else {
+-            switchSaveVcf.setChecked(false);
+-        }
++        
++        switchSaveVcf.setChecked(ImportExportUtils.isVcf(this));
+     }
+ 
+     // switch的CheckedChanged监听
+@@ -109,13 +112,10 @@ public class AdvancedSetup extends Activity implements View.OnClickListener, Com
+                 }
+                 Login.editor.commit();
+                 break;
+-            case R.id.switch_save_by_cvf: // 隐藏桌面图标 开关
+-                if (isChecked) {
+-                    Login.editor.putBoolean("saveVcf", true);
+-                } else {
+-                    Login.editor.putBoolean("saveVcf", false);
+-                }
+-                Login.editor.commit();
++            case R.id.switch_save_by_cvf: // 是否保存cvf 开关
++                SharedPreferences.Editor edit = mVcfSP.edit();
++                edit.putBoolean(ImportExportUtils.KEY_SHARE_SAVEVCF, isChecked);
++                edit.commit();
+                 break;
+         }
+ 
+diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
+index 88c80de..cab7681 100755
+--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
++++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
+@@ -103,7 +103,8 @@ public class DatabaseAdapter {
+         ContentValues values = new ContentValues();
+         values.put(PsDatabaseHelper.ContactsColumns.RAWCONTACT_ID, people.getRawContactId());
+         values.put(PsDatabaseHelper.ContactsColumns.CONTACT_NAME, people.getDisplayName());
+-        values.put(PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER, people.getPhoneNum());
++        values.put(PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER, people.getPhoneNum()
++                .replaceAll(" ", "").replaceAll("-", "").trim());
+         insert(PsDatabaseHelper.Tables.CONTACTS, null, values);
+     }
+ 
+@@ -165,6 +166,7 @@ public class DatabaseAdapter {
+                     people.setRawContactId(cursor.getInt(1));
+                     people.setDisplayName(cursor.getString(2));
+                     people.setPhoneNum(cursor.getString(3));
++                    Log.i(TAG, "[getContacts] people.toString = " + people.toString());
+                     list.add(people);
+                 }
+             } catch (Exception e) {
+@@ -194,7 +196,7 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER + " FROM " +
+                 PsDatabaseHelper.Tables.CONTACTS + " WHERE " +
+                 selection;
+-        return query(sql, selectionArgs);
++        return query(sql, new String[]{selectionArgs[0].replaceAll(" ", "").replaceAll("-", "").trim()});
+     }
+ 
+     public Cursor getContactCursor(String selection, String[] selectionArgs, boolean isVcf) {
+@@ -213,7 +215,8 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.ContactsColumns.CONTACT_NUMBER};
+         MatrixCursor cursor = new MatrixCursor(columnNames);
+         for (People people : contacts) {
+-            if (people.getPhoneNum().replace(" ", "").trim().equals(arg.replace(" ", "").trim())){
++            if (people.getPhoneNum().replaceAll(" ", "").replaceAll("-", "").trim()
++                    .equals(arg.replaceAll(" ", "").replaceAll("-", "").trim())){
+                 Log.e(TAG, "getCursorByPeoples: arg = " + arg);
+                 cursor.addRow(people.getColumnData());
+             }
+@@ -323,7 +326,8 @@ public class DatabaseAdapter {
+     }
+ 
+     public void deleteCallRecordByNum(String number) {
+-        delete(PsDatabaseHelper.Tables.CALLRECORD, PsDatabaseHelper.CallRecordClumns.NUMBER + "=?", new String[]{number.replaceAll(" ", "").trim()});
++        delete(PsDatabaseHelper.Tables.CALLRECORD, PsDatabaseHelper.CallRecordClumns.NUMBER + "=?",
++                new String[]{number.replaceAll(" ", "").replaceAll("-", "").trim()});
+     }
+ 
+     public List<CallRecord> getCallRecordsByNum(String phone) {
+@@ -338,7 +342,7 @@ public class DatabaseAdapter {
+                 PsDatabaseHelper.CallRecordClumns.NUMBER + "=?";
+         Log.i(TAG, "sql = " + sql);
+         List<CallRecord> list = new ArrayList<>();
+-        Cursor cursor = query(sql, new String[]{phone.replaceAll(" ", "").trim()});
++        Cursor cursor = query(sql, new String[]{phone.replaceAll(" ", "").replaceAll("-", "").trim()});
+         try {
+             if (cursor.moveToFirst()) {
+                 do {
+diff --git a/src/com/transage/privatespace/fragment/FG_PrivatePeople.java b/src/com/transage/privatespace/fragment/FG_PrivatePeople.java
+index 2bfbd96..8dbfc14 100755
+--- a/src/com/transage/privatespace/fragment/FG_PrivatePeople.java
++++ b/src/com/transage/privatespace/fragment/FG_PrivatePeople.java
+@@ -120,7 +120,7 @@ public class FG_PrivatePeople extends BaseFragment implements AdapterView.OnItem
+     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+     private void initData() {
+         listPrivatePeople.clear();// 先清空,避免数据积累
+-        listPrivatePeople.addAll(mDb.getContacts(ImportExportUtils.isVcf()));
++        listPrivatePeople.addAll(mDb.getContacts(ImportExportUtils.isVcf(getContext())));
+         /*SSStry {
+             String contactNumber = null;
+             String contactName;
+diff --git a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+index 58d5fe4..c0f0854 100755
+--- a/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
++++ b/src/com/transage/privatespace/loader/PrivateSpaceLoader.java
+@@ -95,7 +95,7 @@ public class PrivateSpaceLoader {
+                         //还原联系人到系统中
+                         addContacts2Db(activity, people);
+                         //删除私密联系人
+-                        databaseAdapter.deleteContactsByPhone(people.getPhoneNum(), ImportExportUtils.isVcf());
++                        databaseAdapter.deleteContactsByPhone(people.getPhoneNum(), ImportExportUtils.isVcf(activity));
+                         mHandler.sendEmptyMessage(REFRESHE_CONTACT);
+                     }
+                 });
+@@ -129,7 +129,7 @@ public class PrivateSpaceLoader {
+                 @Override
+                 public void run() {
+                     //添加联系人到私密
+-                    databaseAdapter.addContacts(list_selectedPeople, ImportExportUtils.isVcf());
++                    databaseAdapter.addContacts(list_selectedPeople, ImportExportUtils.isVcf(activity));
+                     for (People people : list_selectedPeople) {
+                         //删除联系人元数据
+                         activity.getContentResolver().delete(ContactsContract.RawContacts.CONTENT_URI,
+@@ -176,7 +176,7 @@ public class PrivateSpaceLoader {
+                 databaseAdapter.addCallRecord(callRecord);
+                 //删除通话记录到私密
+                 activity.getContentResolver().delete(CallLog.Calls.CONTENT_URI, CallLog.Calls.NUMBER + "=?",
+-                        new String[]{callRecord.getPhoneNum().replaceAll(" ", "").trim()});
++                        new String[]{callRecord.getPhoneNum().replaceAll(" ", "").replaceAll("-", "").trim()});
+             }
+         }
+ 
+@@ -208,7 +208,7 @@ public class PrivateSpaceLoader {
+                             CallLog.Calls.DURATION,// 通话时长
+                             CallLog.Calls.TYPE}// 通话类型
+                     , CallLog.Calls.NUMBER + "= ?",
+-                    new String[]{phone.replaceAll(" ", "").trim()},
++                    new String[]{phone.replaceAll(" ", "").replaceAll("-", "").trim()},
+                     CallLog.Calls.DEFAULT_SORT_ORDER// 按照时间逆序排列，最近打的最先显示
+             );
+             if (recordCursor != null && recordCursor.moveToFirst()) {
+diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
+index 4b396d7..672f60d 100755
+--- a/src/com/transage/privatespace/provider/PrivateProvider.java
++++ b/src/com/transage/privatespace/provider/PrivateProvider.java
+@@ -30,8 +30,8 @@ public class PrivateProvider extends ContentProvider{
+ 
+     @Override
+     public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
+-        android.util.Log.i(TAG, "query uri = " + uri.toString());
+-        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf());
++        android.util.Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
++        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
+     }
+ 
+     @Override
+diff --git a/src/com/transage/privatespace/utils/ImportExportUtils.java b/src/com/transage/privatespace/utils/ImportExportUtils.java
+index 44281c9..66de9dc 100755
+--- a/src/com/transage/privatespace/utils/ImportExportUtils.java
++++ b/src/com/transage/privatespace/utils/ImportExportUtils.java
+@@ -1,5 +1,7 @@
+ package com.transage.privatespace.utils;
+ 
++import android.content.Context;
++import android.content.SharedPreferences;
+ import android.os.Environment;
+ import android.util.Log;
+ 
+@@ -28,6 +30,11 @@ import com.transage.privatespace.vcard.pim.vcard.VCardParser;
+ 
+ public class ImportExportUtils {
+     private static final String TAG = "ImportExportUtils";
++
++    public static final String SHARE_SAVEVCF = "savevcf";
++    public static final String KEY_SHARE_SAVEVCF = "isSaveVcf";
++
++
+     /**
+      * 是否保存数据到vcf文件
+      */
+@@ -110,10 +117,11 @@ public class ImportExportUtils {
+         }
+     }
+ 
+-    public static boolean isVcf(){
+-        boolean saveVcf = Login.sp.getBoolean("saveVcf", false);
+-        Log.i(TAG, "[isVcf] saveVcf = " + saveVcf);
+-        return saveVcf;
++    public static boolean isVcf(Context context){
++        SharedPreferences savevcf = context.getSharedPreferences(SHARE_SAVEVCF, Context.MODE_PRIVATE);
++        boolean isSaveVcf = savevcf.getBoolean(KEY_SHARE_SAVEVCF, false);
++        Log.i(TAG, "[isVcf] isSaveVcf = " + isSaveVcf);
++        return isSaveVcf;
+     }
+ 
+ //    try{
diff --git "a/privatespace_submit/xuyanjie/28Provider\344\270\255\346\267\273\345\212\240URI\345\214\271\351\205\215\346\234\272\345\210\266/yanjie9.diff" "b/privatespace_submit/xuyanjie/28Provider\344\270\255\346\267\273\345\212\240URI\345\214\271\351\205\215\346\234\272\345\210\266/yanjie9.diff"
new file mode 100755
index 0000000..180bae2
--- /dev/null
+++ "b/privatespace_submit/xuyanjie/28Provider\344\270\255\346\267\273\345\212\240URI\345\214\271\351\205\215\346\234\272\345\210\266/yanjie9.diff"
@@ -0,0 +1,109 @@
+diff --git a/AndroidManifest.xml b/AndroidManifest.xml
+index 86c7cee..8f80527 100755
+--- a/AndroidManifest.xml
++++ b/AndroidManifest.xml
+@@ -123,7 +123,7 @@
+         <provider
+             android:name=".provider.PrivateProvider"
+             android:exported="true"
+-            android:authorities="com.transage.privatespace.provider.PrivateProvider"/>
++            android:authorities="com.transage.privatespace"/>
+     </application>
+ 
+ </manifest>
+\ No newline at end of file
+diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
+index 672f60d..5c03886 100755
+--- a/src/com/transage/privatespace/provider/PrivateProvider.java
++++ b/src/com/transage/privatespace/provider/PrivateProvider.java
+@@ -2,6 +2,7 @@ package com.transage.privatespace.provider;
+ 
+ import android.content.ContentProvider;
+ import android.content.ContentValues;
++import android.content.UriMatcher;
+ import android.database.Cursor;
+ import android.net.Uri;
+ import android.util.Log;
+@@ -17,21 +18,57 @@ import com.transage.privatespace.utils.ImportExportUtils;
+ 
+ public class PrivateProvider extends ContentProvider{
+     private static final String TAG = "PrivateProvider";
++    //这里的AUTHORITY就是我们在AndroidManifest.xml中配置的authorities
++    private static final String AUTHORITY = "com.transage.privatespace";
++    //匹配成功后的匹配码
++    private static final int MATCH_PHONE = 100;
++    private static final int MATCH_SMS = 101;
++    private static final int MATCH_CALL = 102;
++    private static UriMatcher uriMatcher;
++
++    //在静态代码块中添加要匹配的 Uri
++    static {
++        //匹配不成功返回NO_MATCH(-1)
++        uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
++        /**
++         * uriMatcher.addURI(authority, path, code); 其中
++         * authority：主机名(用于唯一标示一个ContentProvider,这个需要和清单文件中的authorities属性相同)
++         * path:路径路径(可以用来表示我们要操作的数据，路径的构建应根据业务而定)
++         * code:返回值(用于匹配uri的时候，作为匹配成功的返回值)
++         */
++        uriMatcher.addURI(AUTHORITY, "phone", MATCH_PHONE);// 匹配电话
++        uriMatcher.addURI(AUTHORITY, "sms", MATCH_SMS);// 匹配短信
++        uriMatcher.addURI(AUTHORITY, "call", MATCH_CALL);// 匹配通话记录
++    }
++
+     DatabaseAdapter mDbAdapter;
+ 
+     @Override
+     public boolean onCreate() {
+         if (mDbAdapter == null){
+             mDbAdapter = new DatabaseAdapter(getContext());
+-            android.util.Log.i(TAG, "onCreate");
++            Log.i(TAG, "onCreate");
+         }
+         return false;
+     }
+ 
+     @Override
+     public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
+-        android.util.Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
+-        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
++        Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
++        Cursor cursor = null;
++        switch (uriMatcher.match(uri)) {
++            case MATCH_PHONE:
++                //查询手机号码
++                cursor = mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
++                break;
++            case MATCH_SMS:
++                //查询短信
++                break;
++            case MATCH_CALL:
++                //查询通话记录
++                break;
++        }
++        return cursor;
+     }
+ 
+     @Override
+@@ -41,8 +78,19 @@ public class PrivateProvider extends ContentProvider{
+ 
+     @Override
+     public Uri insert(Uri uri, ContentValues contentValues) {
+-        android.util.Log.i(TAG, "insert contentValues = " + contentValues.toString());
+-        mDbAdapter.insertCallLog(contentValues);
++        Log.i(TAG, "insert contentValues = " + contentValues.toString());
++        switch (uriMatcher.match(uri)) {
++            case MATCH_PHONE:
++                //insert手机号码
++                break;
++            case MATCH_SMS:
++                //insert短信
++                break;
++            case MATCH_CALL:
++                //insert通话记录
++                mDbAdapter.insertCallLog(contentValues);
++                break;
++        }
+         getContext().getContentResolver().notifyChange(uri, null);
+         return uri;
+     }
diff --git "a/privatespace_submit/xuyanjie/33\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\347\273\223\345\220\210\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273\357\274\214\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256/yanjie10.diff" "b/privatespace_submit/xuyanjie/33\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\347\273\223\345\220\210\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273\357\274\214\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256/yanjie10.diff"
new file mode 100755
index 0000000..7695f6b
--- /dev/null
+++ "b/privatespace_submit/xuyanjie/33\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\347\273\223\345\220\210\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273\357\274\214\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256/yanjie10.diff"
@@ -0,0 +1,1171 @@
+diff --git a/src/com/transage/privatespace/bean/ContactInfo.java b/src/com/transage/privatespace/bean/ContactInfo.java
+index 85d2adc..be4c234 100755
+--- a/src/com/transage/privatespace/bean/ContactInfo.java
++++ b/src/com/transage/privatespace/bean/ContactInfo.java
+@@ -1,6 +1,7 @@
+ package com.transage.privatespace.bean;
+ 
+ import java.io.BufferedReader;
++import java.io.ByteArrayInputStream;
+ import java.io.FileInputStream;
+ import java.io.FileNotFoundException;
+ import java.io.FileOutputStream;
+@@ -25,6 +26,8 @@ import android.app.Activity;
+ import android.content.ContentUris;
+ import android.content.ContentValues;
+ import android.database.Cursor;
++import android.graphics.Bitmap;
++import android.graphics.BitmapFactory;
+ import android.net.Uri;
+ import android.os.Environment;
+ import android.provider.ContactsContract;
+@@ -39,352 +42,156 @@ import android.widget.Toast;
+ /**
+  * 联系人信息包装类
+  * <p>
+- * Created by yanjie.xu on 2017/7/19.
++ * Created by yanjie.xu on 2017/8/24.
+  */
+ public class ContactInfo {
+     private static final String TAG = "ContactInfo";
+-    /**
+-     * MUST exist
+-     */
+-    private String name; // 姓名
+-
+-    /**
+-     * 联系人电话信息
+-     */
+-    public static class PhoneInfo {
+-        /**
+-         * 联系电话类型
+-         */
+-        public int type;
+-        /**
+-         * 联系电话
+-         */
+-        public String number;
++    private int contactId;
++    private int hasPhoneNumber;
++    private int photoFileId;
++    private String displayName;
++    private byte[] photoData;
++    private Bitmap photo;
++    private List<RawContactInfo> rawContactInfos = new ArrayList<>();
++
++    public static class RawContactInfo {
++        public int rawContactId;
++        public int contactId;
++        public String accountName;
++        public String accountType;
++        public List<DataInfo> dataInfos = new ArrayList<>();
++
++        @Override
++        public String toString() {
++            return "RawContactInfo{" +
++                    "rawContactId=" + rawContactId +
++                    ", contactId=" + contactId +
++                    ", accountName='" + accountName + '\'' +
++                    ", accountType='" + accountType + '\'' +
++                    ", dataInfos=" + dataInfos +
++                    '}';
++        }
+     }
+ 
+-    /**
+-     * 联系人邮箱信息
+-     */
+-    public static class EmailInfo {
+-        /**
+-         * 邮箱类型
+-         */
+-        public int type;
+-        /**
+-         * 邮箱
+-         */
+-        public String email;
++    public static class DataInfo {
++        public String mimeType;
++        public String type;
++        public String typeName;
++        public int rawContactId;
++        public String data1;
++        public String data2;
++        public String data3;
++        public String data4;
++        public String data5;
++        public String data6;
++        public String data7;
++        public String data8;
++        public String data9;
++        public String data10;
++        public String data11;
++        public String data12;
++        public String data13;
++        public String data14;
++        public String data15;
++
++        @Override
++        public String toString() {
++            return "DataInfo{" +
++                    "mimeType='" + mimeType + '\'' +
++                    ", type='" + type + '\'' +
++                    ", typeName='" + typeName + '\'' +
++                    ", rawContactId=" + rawContactId +
++                    ", data1='" + data1 + '\'' +
++                    ", data2='" + data2 + '\'' +
++                    ", data3='" + data3 + '\'' +
++                    ", data4='" + data4 + '\'' +
++                    ", data5='" + data5 + '\'' +
++                    ", data6='" + data6 + '\'' +
++                    ", data7='" + data7 + '\'' +
++                    ", data8='" + data8 + '\'' +
++                    ", data9='" + data9 + '\'' +
++                    ", data10='" + data10 + '\'' +
++                    ", data11='" + data11 + '\'' +
++                    ", data12='" + data12 + '\'' +
++                    ", data13='" + data13 + '\'' +
++                    ", data14='" + data14 + '\'' +
++                    ", data15='" + data15 + '\'' +
++                    '}';
++        }
+     }
+ 
+-    private List<PhoneInfo> phoneList = new ArrayList<PhoneInfo>(); // 联系号码
+-
+-    private List<EmailInfo> email = new ArrayList<EmailInfo>(); // Email
+-
+-    /**
+-     * 构造联系人信息
+-     *
+-     * @param name 联系人姓名
+-     */
+-    public ContactInfo(String name) {
+-        this.name = name;
++    public List<RawContactInfo> getRawContactInfos() {
++        return rawContactInfos;
+     }
+ 
+-    /**
+-     * 姓名
+-     */
+-    public String getName() {
+-        return name;
++    public void setRawContactInfos(List<RawContactInfo> rawContactInfos) {
++        this.rawContactInfos = rawContactInfos;
+     }
+ 
+-    /**
+-     * 姓名
+-     */
+-    public ContactInfo setName(String name) {
+-        this.name = name;
+-        return this;
++    public int getContactId() {
++        return contactId;
+     }
+ 
+-    /**
+-     * 联系电话信息
+-     */
+-    public List<PhoneInfo> getPhoneList() {
+-        return phoneList;
++    public void setContactId(int contactId) {
++        this.contactId = contactId;
+     }
+ 
+-    /**
+-     * 联系电话信息
+-     */
+-    public ContactInfo setPhoneList(List<PhoneInfo> phoneList) {
+-        this.phoneList = phoneList;
+-        return this;
++    public int getHasPhoneNumber() {
++        return hasPhoneNumber;
+     }
+ 
+-    /**
+-     * 邮箱信息
+-     */
+-    public List<EmailInfo> getEmail() {
+-        return email;
++    public void setHasPhoneNumber(int hasPhoneNumber) {
++        this.hasPhoneNumber = hasPhoneNumber;
+     }
+ 
+-    /**
+-     * 邮箱信息
+-     */
+-    public ContactInfo setEmail(List<EmailInfo> email) {
+-        this.email = email;
+-        return this;
++    public int getPhotoFileId() {
++        return photoFileId;
+     }
+ 
+-    @Override
+-    public String toString() {
+-        return "{name: " + name + ", number: " + phoneList + ", email: " + email + "}";
++    public void setPhotoFileId(int photoFileId) {
++        this.photoFileId = photoFileId;
+     }
+ 
++    public String getDisplayName() {
++        return displayName;
++    }
+ 
+-    /**
+-     * 联系人
+-     * 备份/还原操作
+-     *
+-     * @author LW
+-     */
+-    public static class ContactHandler {
+-        private static ContactHandler instance_ = new ContactHandler();
+-
+-        /**
+-         * 获取实例
+-         */
+-        public static ContactHandler getInstance() {
+-            return instance_;
+-        }
+-
+-        /**
+-         * 获取联系人指定信息
+-         *
+-         * @param projection 指定要获取的列数组, 获取全部列则设置为null
+-         * @return
+-         * @throws Exception
+-         */
+-
+-        public Cursor queryContact(Activity context, String[] projection) {
+-            // 获取联系人的所需信息
+-            Cursor cur = context.getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, projection, null, null, null);
+-            return cur;
+-        }
+-
+-
+-        /**
+-         * 获取联系人信息
+-         *
+-         * @param context
+-         * @return
+-         */
+-        public List<ContactInfo> getContactInfo(Activity context) {
+-            List<ContactInfo> infoList = new ArrayList<ContactInfo>();
+-            Cursor cur = queryContact(context, null);
+-            if (cur.moveToFirst()) {
+-                do {
+-                    // 获取联系人id号
+-                    String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
+-                    // 获取联系人姓名
+-                    String displayName = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
+-                    ContactInfo info = new ContactInfo(displayName);// 初始化联系人信息
+-                    // 查看联系人有多少电话号码, 如果没有返回0
+-                    int phoneCount = cur.getInt(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
+-
+-//                    ContentValues values = new ContentValues();
+-//                    values.put(ContactsContract.Contacts.IS_PRIVATE_CONTACTS, 0);
+-//                    context.getContentResolver().update(ContactsContract.Contacts.CONTENT_URI, values, ContactsContract.Contacts.NAME_RAW_CONTACT_ID + "= ?", null);
+-                    Log.i(TAG, "getContactInfo()->info = " + info.toString());
+-
+-                    if (phoneCount > 0) {
+-                        Cursor phonesCursor = context.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, ContactsContract.CommonDataKinds.Phone.CONTACT_ID + "=?" , new String[]{id}, null);
+-                        Log.i(TAG, "getContactInfo()->info = " + info.toString());
+-                        if (phonesCursor.moveToFirst()) {
+-                            List<ContactInfo.PhoneInfo> phoneNumberList = new ArrayList<ContactInfo.PhoneInfo>();
+-                            do {
+-                                // 遍历所有电话号码
+-                                String phoneNumber = phonesCursor.getString(phonesCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
+-                                // 对应的联系人类型
+-                                int type = phonesCursor.getInt(phonesCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.TYPE));
+-                                // 初始化联系人电话信息
+-                                ContactInfo.PhoneInfo phoneInfo = new ContactInfo.PhoneInfo();
+-                                phoneInfo.type = type;
+-                                phoneInfo.number = phoneNumber;
+-                                phoneNumberList.add(phoneInfo);
+-                            } while (phonesCursor.moveToNext());
+-                            // 设置联系人电话信息
+-                            info.setPhoneList(phoneNumberList);
+-                        }
+-                    }
+-
+-                    // 获得联系人的EMAIL
+-                    Cursor emailCur = context.getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,
+-                            null, ContactsContract.CommonDataKinds.Email.CONTACT_ID + "=" + id, null, null);
+-                    if (emailCur.moveToFirst()) {
+-                        List<ContactInfo.EmailInfo> emailList = new ArrayList<ContactInfo.EmailInfo>();
+-                        do {
+-                            // 遍历所有的email
+-                            String email = emailCur.getString(emailCur.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA1));
+-                            int type = emailCur.getInt(emailCur.getColumnIndex(ContactsContract.CommonDataKinds.Email.TYPE));
+-                            // 初始化联系人邮箱信息
+-                            ContactInfo.EmailInfo emailInfo = new ContactInfo.EmailInfo();
+-                            emailInfo.type = type;    // 设置邮箱类型
+-                            emailInfo.email = email;    // 设置邮箱地址
+-                            emailList.add(emailInfo);
+-                        } while (emailCur.moveToNext());
+-                        info.setEmail(emailList);
+-                    }
++    public void setDisplayName(String displayName) {
++        this.displayName = displayName;
++    }
+ 
+-                    //Cursor postalCursor = getContentResolver().query(ContactsContract.CommonDataKinds.StructuredPostal.CONTENT_URI, null, ContactsContract.CommonDataKinds.StructuredPostal.CONTACT_ID + "=" + id, null, null);
+-                    Log.i(TAG, "getContactInfo()->info = " + info.toString());
+-                    infoList.add(info);
++    public byte[] getPhotoData() {
++        return photoData;
++    }
+ 
+-                } while (cur.moveToNext());
+-            }
+-            return infoList;
+-        }
++    public void setPhotoData(byte[] photoData) {
++        this.photoData = photoData;
++    }
+ 
+-        /**
+-         * 备份联系人
+-         */
+-        public void backupContacts(Activity context, List<ContactInfo> infos) {
++    public void addRawContact(RawContactInfo info){
++        rawContactInfos.add(info);
++    }
+ 
+-            try {
+-                String path = Environment.getExternalStorageDirectory() + "/contacts.vcf";
+-                Log.i(TAG, "backupContacts()->file = " + path);
+-                OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(path), "UTF-8");
+-                VCardComposer composer = new VCardComposer();
+-                for (ContactInfo info : infos) {
+-                    ContactStruct contact = new ContactStruct();
+-                    contact.name = info.getName();
+-                    // 获取联系人电话信息, 添加至 ContactStruct
+-                    List<ContactInfo.PhoneInfo> numberList = info
+-                            .getPhoneList();
+-                    for (ContactInfo.PhoneInfo phoneInfo : numberList) {
+-                        contact.addPhone(phoneInfo.type, phoneInfo.number, null, true);
+-                    }
+-                    // 获取联系人Email信息, 添加至 ContactStruct
+-                    List<ContactInfo.EmailInfo> emailList = info.getEmail();
+-                    for (ContactInfo.EmailInfo emailInfo : emailList) {
+-                        contact.addContactmethod(Contacts.KIND_EMAIL, emailInfo.type, emailInfo.email, null, true);
+-                    }
+-                    String vcardString = composer.createVCard(contact, VCardComposer.VERSION_VCARD30_INT);
+-                    writer.write(vcardString);
+-                    writer.write("\n");
+-                    writer.flush();
+-                }
+-                writer.close();
+-            } catch (UnsupportedEncodingException e) {
+-                e.printStackTrace();
+-            } catch (FileNotFoundException e) {
+-                e.printStackTrace();
+-            } catch (VCardException e) {
+-                e.printStackTrace();
+-            } catch (IOException e) {
+-                e.printStackTrace();
+-            }
+-            Toast.makeText(context, "备份成功！", Toast.LENGTH_SHORT).show();
++    public Bitmap getPhoto(){
++        if (photo!=null){
++            return photo;
+         }
+ 
+-        /**
+-         * 获取vCard文件中的联系人信息
+-         *
+-         * @return
+-         */
+-        public List<ContactInfo> restoreContacts() throws Exception {
+-            List<ContactInfo> contactInfoList = new ArrayList<ContactInfo>();
+-
+-            VCardParser parse = new VCardParser();
+-            VDataBuilder builder = new VDataBuilder();
+-            String file = Environment.getExternalStorageDirectory() + "/contacts.vcf";
+-            Log.i(TAG, "restoreContacts()->file = " + file);
+-            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
+-            String vcardString = "";
+-            String line;
+-            while ((line = reader.readLine()) != null) {
+-                vcardString += line + "\n";
+-            }
+-            reader.close();
+-            Log.i(TAG, "restoreContacts()->vcardString = " + vcardString);
+-            boolean parsed = parse.parse(vcardString, "UTF-8", builder);
+-            if (!parsed) {
+-                throw new VCardException("Could not parse vCard file: " + file);
+-            }
+-            List<VNode> pimContacts = builder.vNodeList;
+-            for (VNode contact : pimContacts) {
+-                ContactStruct contactStruct = ContactStruct.constructContactFromVNode(contact, 1);
+-                // 获取备份文件中的联系人电话信息
+-                List<PhoneData> phoneDataList = contactStruct.phoneList;
+-                List<ContactInfo.PhoneInfo> phoneInfoList = new ArrayList<ContactInfo.PhoneInfo>();
+-                for (PhoneData phoneData : phoneDataList) {
+-                    ContactInfo.PhoneInfo phoneInfo = new ContactInfo.PhoneInfo();
+-                    phoneInfo.number = phoneData.data;
+-                    phoneInfo.type = phoneData.type;
+-                    phoneInfoList.add(phoneInfo);
+-                }
+-                // 获取备份文件中的联系人邮箱信息
+-                List<ContactMethod> emailList = contactStruct.contactmethodList;
+-                List<ContactInfo.EmailInfo> emailInfoList = new ArrayList<ContactInfo.EmailInfo>();
+-                // 存在 Email 信息
+-                if (null != emailList) {
+-                    for (ContactMethod contactMethod : emailList) {
+-                        if (Contacts.KIND_EMAIL == contactMethod.kind) {
+-                            ContactInfo.EmailInfo emailInfo = new ContactInfo.EmailInfo();
+-                            emailInfo.email = contactMethod.data;
+-                            emailInfo.type = contactMethod.type;
+-                            emailInfoList.add(emailInfo);
+-                        }
+-                    }
+-                }
+-                ContactInfo info = new ContactInfo(contactStruct.name).setPhoneList(phoneInfoList).setEmail(emailInfoList);
+-                contactInfoList.add(info);
+-            }
+-            return contactInfoList;
++        if(photoData == null) {
++            return null;
+         }
+ 
+-        /**
+-         * 向手机中录入联系人信息
+-         *
+-         * @param info 要录入的联系人信息
+-         */
+-        public void addContacts(Activity context, ContactInfo info) {
+-            ContentValues values = new ContentValues();
+-            //首先向RawContacts.CONTENT_URI执行一个空值插入，目的是获取系统返回的rawContactId
+-            Uri rawContactUri = context.getContentResolver().insert(RawContacts.CONTENT_URI, values);
+-            long rawContactId = ContentUris.parseId(rawContactUri);
+-            //往data表入姓名数据
+-            values.clear();
+-            values.put(Data.RAW_CONTACT_ID, rawContactId);
+-            values.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);
+-            values.put(StructuredName.GIVEN_NAME, info.getName());
+-            context.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, values);
+-            // 获取联系人电话信息
+-            List<ContactInfo.PhoneInfo> phoneList = info.getPhoneList();
+-            /** 录入联系电话 */
+-            for (ContactInfo.PhoneInfo phoneInfo : phoneList) {
+-                values.clear();
+-                values.put(android.provider.ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
+-                values.put(Data.MIMETYPE, Phone.CONTENT_ITEM_TYPE);
+-                // 设置录入联系人电话信息
+-                values.put(Phone.NUMBER, phoneInfo.number);
+-                values.put(Phone.TYPE, phoneInfo.type);
+-                // 往data表入电话数据
+-                context.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, values);
+-
+-            }
+-            // 获取联系人邮箱信息
+-            List<ContactInfo.EmailInfo> emailList = info.getEmail();
+-            /** 录入联系人邮箱信息 */
+-            for (ContactInfo.EmailInfo email : emailList) {
+-                values.clear();
+-                values.put(android.provider.ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
+-                values.put(Data.MIMETYPE, Email.CONTENT_ITEM_TYPE);
+-                // 设置录入的邮箱信息
+-                values.put(Email.DATA, email.email);
+-                values.put(Email.TYPE, email.type);
+-                // 往data表入Email数据
+-                context.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, values);
++        ByteArrayInputStream var6 = new ByteArrayInputStream(photoData);
++        photo = BitmapFactory.decodeStream(var6);
++        return photo;
++    }
+ 
+-            }
+-        }
++    @Override
++    public String toString() {
++        return "ContactInfo{" +
++                "contactId=" + contactId +
++                ", hasPhoneNumber=" + hasPhoneNumber +
++                ", displayName='" + displayName + '\'' +
++                '}';
+     }
+ }
+diff --git a/src/com/transage/privatespace/bean/ContactInfoBack.java b/src/com/transage/privatespace/bean/ContactInfoBack.java
+new file mode 100755
+index 0000000..2c21940
+--- /dev/null
++++ b/src/com/transage/privatespace/bean/ContactInfoBack.java
+@@ -0,0 +1,391 @@
++package com.transage.privatespace.bean;
++
++import java.io.BufferedReader;
++import java.io.FileInputStream;
++import java.io.FileNotFoundException;
++import java.io.FileOutputStream;
++import java.io.IOException;
++import java.io.InputStreamReader;
++import java.io.OutputStreamWriter;
++import java.io.UnsupportedEncodingException;
++import java.util.ArrayList;
++import java.util.List;
++
++import com.transage.privatespace.vcard.provider.Contacts;
++import com.transage.privatespace.vcard.pim.VDataBuilder;
++import com.transage.privatespace.vcard.pim.VNode;
++import com.transage.privatespace.vcard.pim.vcard.ContactStruct;
++import com.transage.privatespace.vcard.pim.vcard.ContactStruct.ContactMethod;
++import com.transage.privatespace.vcard.pim.vcard.ContactStruct.PhoneData;
++import com.transage.privatespace.vcard.pim.vcard.VCardComposer;
++import com.transage.privatespace.vcard.pim.vcard.VCardException;
++import com.transage.privatespace.vcard.pim.vcard.VCardParser;
++
++import android.app.Activity;
++import android.content.ContentUris;
++import android.content.ContentValues;
++import android.database.Cursor;
++import android.net.Uri;
++import android.os.Environment;
++import android.provider.ContactsContract;
++import android.provider.ContactsContract.CommonDataKinds.Email;
++import android.provider.ContactsContract.CommonDataKinds.Phone;
++import android.provider.ContactsContract.CommonDataKinds.StructuredName;
++import android.provider.ContactsContract.RawContacts;
++import android.provider.ContactsContract.RawContacts.Data;
++import android.util.Log;
++import android.widget.Toast;
++
++/**
++ * 联系人信息包装类
++ * <p>
++ * Created by yanjie.xu on 2017/7/19.
++ */
++public class ContactInfoBack {
++    private static final String TAG = "ContactInfoBack";
++    /**
++     * MUST exist
++     */
++    private String name; // 姓名
++
++    /**
++     * 联系人电话信息
++     */
++    public static class PhoneInfo {
++        /**
++         * 联系电话类型
++         */
++        public int type;
++        /**
++         * 联系电话
++         */
++        public String number;
++    }
++
++    /**
++     * 联系人邮箱信息
++     */
++    public static class EmailInfo {
++        /**
++         * 邮箱类型
++         */
++        public int type;
++        /**
++         * 邮箱
++         */
++        public String email;
++    }
++
++    private List<PhoneInfo> phoneList = new ArrayList<PhoneInfo>(); // 联系号码
++
++    private List<EmailInfo> email = new ArrayList<EmailInfo>(); // Email
++
++    /**
++     * 构造联系人信息
++     *
++     * @param name 联系人姓名
++     */
++    public ContactInfoBack(String name) {
++        this.name = name;
++    }
++
++    /**
++     * 姓名
++     */
++    public String getName() {
++        return name;
++    }
++
++    /**
++     * 姓名
++     */
++    public ContactInfoBack setName(String name) {
++        this.name = name;
++        return this;
++    }
++
++    /**
++     * 联系电话信息
++     */
++    public List<PhoneInfo> getPhoneList() {
++        return phoneList;
++    }
++
++    /**
++     * 联系电话信息
++     */
++    public ContactInfoBack setPhoneList(List<PhoneInfo> phoneList) {
++        this.phoneList = phoneList;
++        return this;
++    }
++
++    /**
++     * 邮箱信息
++     */
++    public List<EmailInfo> getEmail() {
++        return email;
++    }
++
++    /**
++     * 邮箱信息
++     */
++    public ContactInfoBack setEmail(List<EmailInfo> email) {
++        this.email = email;
++        return this;
++    }
++
++    @Override
++    public String toString() {
++        return "{name: " + name + ", number: " + phoneList + ", email: " + email + "}";
++    }
++
++
++    /**
++     * 联系人
++     * 备份/还原操作
++     *
++     * @author LW
++     */
++    public static class ContactHandler {
++        private static ContactHandler instance_ = new ContactHandler();
++
++        /**
++         * 获取实例
++         */
++        public static ContactHandler getInstance() {
++            return instance_;
++        }
++
++        /**
++         * 获取联系人指定信息
++         *
++         * @param projection 指定要获取的列数组, 获取全部列则设置为null
++         * @return
++         * @throws Exception
++         */
++
++        public Cursor queryContact(Activity context, String[] projection) {
++            // 获取联系人的所需信息
++            Cursor cur = context.getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, projection, null, null, null);
++            return cur;
++        }
++
++
++        /**
++         * 获取联系人信息
++         *
++         * @param context
++         * @return
++         */
++        public List<ContactInfoBack> getContactInfoBack(Activity context) {
++            List<ContactInfoBack> infoList = new ArrayList<ContactInfoBack>();
++            Cursor cur = queryContact(context, null);
++            if (cur.moveToFirst()) {
++                do {
++                    // 获取联系人id号
++                    String id = cur.getString(cur.getColumnIndex(ContactsContract.Contacts._ID));
++                    // 获取联系人姓名
++                    String displayName = cur.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
++                    ContactInfoBack info = new ContactInfoBack(displayName);// 初始化联系人信息
++                    // 查看联系人有多少电话号码, 如果没有返回0
++                    int phoneCount = cur.getInt(cur.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
++
++//                    ContentValues values = new ContentValues();
++//                    values.put(ContactsContract.Contacts.IS_PRIVATE_CONTACTS, 0);
++//                    context.getContentResolver().update(ContactsContract.Contacts.CONTENT_URI, values, ContactsContract.Contacts.NAME_RAW_CONTACT_ID + "= ?", null);
++                    Log.i(TAG, "getContactInfoBack()->info = " + info.toString());
++
++                    if (phoneCount > 0) {
++                        Cursor phonesCursor = context.getContentResolver().query(Phone.CONTENT_URI, null, Phone.CONTACT_ID + "=?", new String[]{id}, null);
++                        Log.i(TAG, "getContactInfoBack()->info = " + info.toString());
++                        if (phonesCursor.moveToFirst()) {
++                            List<PhoneInfo> phoneNumberList = new ArrayList<PhoneInfo>();
++                            do {
++                                // 遍历所有电话号码
++                                String phoneNumber = phonesCursor.getString(phonesCursor.getColumnIndex(Phone.NUMBER));
++                                // 对应的联系人类型
++                                int type = phonesCursor.getInt(phonesCursor.getColumnIndex(Phone.TYPE));
++                                // 初始化联系人电话信息
++                                PhoneInfo phoneInfo = new PhoneInfo();
++                                phoneInfo.type = type;
++                                phoneInfo.number = phoneNumber;
++                                phoneNumberList.add(phoneInfo);
++                            } while (phonesCursor.moveToNext());
++                            // 设置联系人电话信息
++                            info.setPhoneList(phoneNumberList);
++                        }
++                    }
++
++                    // 获得联系人的EMAIL
++                    Cursor emailCur = context.getContentResolver().query(Email.CONTENT_URI,
++                            null, Email.CONTACT_ID + "=" + id, null, null);
++                    if (emailCur.moveToFirst()) {
++                        List<EmailInfo> emailList = new ArrayList<EmailInfo>();
++                        do {
++                            // 遍历所有的email
++                            String email = emailCur.getString(emailCur.getColumnIndex(Email.DATA1));
++                            int type = emailCur.getInt(emailCur.getColumnIndex(Email.TYPE));
++                            // 初始化联系人邮箱信息
++                            EmailInfo emailInfo = new EmailInfo();
++                            emailInfo.type = type;    // 设置邮箱类型
++                            emailInfo.email = email;    // 设置邮箱地址
++                            emailList.add(emailInfo);
++                        } while (emailCur.moveToNext());
++                        info.setEmail(emailList);
++                    }
++
++                    //Cursor postalCursor = getContentResolver().query(ContactsContract.CommonDataKinds.StructuredPostal.CONTENT_URI, null, ContactsContract.CommonDataKinds.StructuredPostal.CONTACT_ID + "=" + id, null, null);
++                    Log.i(TAG, "getContactInfoBack()->info = " + info.toString());
++                    infoList.add(info);
++
++                } while (cur.moveToNext());
++            }
++            return infoList;
++        }
++
++        /**
++         * 备份联系人
++         */
++        public void backupContacts(Activity context, List<ContactInfoBack> infos) {
++
++            try {
++                String path = Environment.getExternalStorageDirectory() + "/contacts.vcf";
++                Log.i(TAG, "backupContacts()->file = " + path);
++                OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(path), "UTF-8");
++                VCardComposer composer = new VCardComposer();
++                for (ContactInfoBack info : infos) {
++                    ContactStruct contact = new ContactStruct();
++                    contact.name = info.getName();
++                    // 获取联系人电话信息, 添加至 ContactStruct
++                    List<PhoneInfo> numberList = info
++                            .getPhoneList();
++                    for (PhoneInfo phoneInfo : numberList) {
++                        contact.addPhone(phoneInfo.type, phoneInfo.number, null, true);
++                    }
++                    // 获取联系人Email信息, 添加至 ContactStruct
++                    List<EmailInfo> emailList = info.getEmail();
++                    for (EmailInfo emailInfo : emailList) {
++                        contact.addContactmethod(Contacts.KIND_EMAIL, emailInfo.type, emailInfo.email, null, true);
++                    }
++                    String vcardString = composer.createVCard(contact, VCardComposer.VERSION_VCARD30_INT);
++                    writer.write(vcardString);
++                    writer.write("\n");
++                    writer.flush();
++                }
++                writer.close();
++            } catch (UnsupportedEncodingException e) {
++                e.printStackTrace();
++            } catch (FileNotFoundException e) {
++                e.printStackTrace();
++            } catch (VCardException e) {
++                e.printStackTrace();
++            } catch (IOException e) {
++                e.printStackTrace();
++            }
++            Toast.makeText(context, "备份成功！", Toast.LENGTH_SHORT).show();
++        }
++
++        /**
++         * 获取vCard文件中的联系人信息
++         *
++         * @return
++         */
++        public List<ContactInfoBack> restoreContacts() throws Exception {
++            List<ContactInfoBack> ContactInfoBackList = new ArrayList<ContactInfoBack>();
++
++            VCardParser parse = new VCardParser();
++            VDataBuilder builder = new VDataBuilder();
++            String file = Environment.getExternalStorageDirectory() + "/contacts.vcf";
++            Log.i(TAG, "restoreContacts()->file = " + file);
++            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
++            String vcardString = "";
++            String line;
++            while ((line = reader.readLine()) != null) {
++                vcardString += line + "\n";
++            }
++            reader.close();
++            Log.i(TAG, "restoreContacts()->vcardString = " + vcardString);
++            boolean parsed = parse.parse(vcardString, "UTF-8", builder);
++            if (!parsed) {
++                throw new VCardException("Could not parse vCard file: " + file);
++            }
++            List<VNode> pimContacts = builder.vNodeList;
++            for (VNode contact : pimContacts) {
++                ContactStruct contactStruct = ContactStruct.constructContactFromVNode(contact, 1);
++                // 获取备份文件中的联系人电话信息
++                List<PhoneData> phoneDataList = contactStruct.phoneList;
++                List<PhoneInfo> phoneInfoList = new ArrayList<PhoneInfo>();
++                for (PhoneData phoneData : phoneDataList) {
++                    PhoneInfo phoneInfo = new PhoneInfo();
++                    phoneInfo.number = phoneData.data;
++                    phoneInfo.type = phoneData.type;
++                    phoneInfoList.add(phoneInfo);
++                }
++                // 获取备份文件中的联系人邮箱信息
++                List<ContactMethod> emailList = contactStruct.contactmethodList;
++                List<EmailInfo> emailInfoList = new ArrayList<EmailInfo>();
++                // 存在 Email 信息
++                if (null != emailList) {
++                    for (ContactMethod contactMethod : emailList) {
++                        if (Contacts.KIND_EMAIL == contactMethod.kind) {
++                            EmailInfo emailInfo = new EmailInfo();
++                            emailInfo.email = contactMethod.data;
++                            emailInfo.type = contactMethod.type;
++                            emailInfoList.add(emailInfo);
++                        }
++                    }
++                }
++                ContactInfoBack info = new ContactInfoBack(contactStruct.name).setPhoneList(phoneInfoList).setEmail(emailInfoList);
++                ContactInfoBackList.add(info);
++            }
++            return ContactInfoBackList;
++        }
++
++        /**
++         * 向手机中录入联系人信息
++         *
++         * @param info 要录入的联系人信息
++         */
++        public void addContacts(Activity context, ContactInfoBack info) {
++            ContentValues values = new ContentValues();
++            //首先向RawContacts.CONTENT_URI执行一个空值插入，目的是获取系统返回的rawContactId
++            Uri rawContactUri = context.getContentResolver().insert(RawContacts.CONTENT_URI, values);
++            long rawContactId = ContentUris.parseId(rawContactUri);
++            //往data表入姓名数据
++            values.clear();
++            values.put(Data.RAW_CONTACT_ID, rawContactId);
++            values.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);
++            values.put(StructuredName.GIVEN_NAME, info.getName());
++            context.getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
++            // 获取联系人电话信息
++            List<PhoneInfo> phoneList = info.getPhoneList();
++            /** 录入联系电话 */
++            for (PhoneInfo phoneInfo : phoneList) {
++                values.clear();
++                values.put(ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
++                values.put(Data.MIMETYPE, Phone.CONTENT_ITEM_TYPE);
++                // 设置录入联系人电话信息
++                values.put(Phone.NUMBER, phoneInfo.number);
++                values.put(Phone.TYPE, phoneInfo.type);
++                // 往data表入电话数据
++                context.getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
++
++            }
++            // 获取联系人邮箱信息
++            List<EmailInfo> emailList = info.getEmail();
++            /** 录入联系人邮箱信息 */
++            for (EmailInfo email : emailList) {
++                values.clear();
++                values.put(ContactsContract.Contacts.Data.RAW_CONTACT_ID, rawContactId);
++                values.put(Data.MIMETYPE, Email.CONTENT_ITEM_TYPE);
++                // 设置录入的邮箱信息
++                values.put(Email.DATA, email.email);
++                values.put(Email.TYPE, email.type);
++                // 往data表入Email数据
++                context.getContentResolver().insert(ContactsContract.Data.CONTENT_URI, values);
++
++            }
++        }
++    }
++}
++
+diff --git a/src/com/transage/privatespace/utils/ContactUtils.java b/src/com/transage/privatespace/utils/ContactUtils.java
+new file mode 100755
+index 0000000..a99b480
+--- /dev/null
++++ b/src/com/transage/privatespace/utils/ContactUtils.java
+@@ -0,0 +1,276 @@
++package com.transage.privatespace.utils;
++
++import java.io.ByteArrayOutputStream;
++import java.io.IOException;
++import java.io.InputStream;
++import java.util.ArrayList;
++import java.util.List;
++
++import org.json.JSONException;
++
++import android.content.ContentUris;
++import android.content.Context;
++import android.database.Cursor;
++import android.graphics.Bitmap;
++import android.net.Uri;
++import android.provider.ContactsContract;
++import android.provider.ContactsContract.CommonDataKinds.Email;
++import android.provider.ContactsContract.CommonDataKinds.Event;
++import android.provider.ContactsContract.CommonDataKinds.Im;
++import android.provider.ContactsContract.CommonDataKinds.Nickname;
++import android.provider.ContactsContract.CommonDataKinds.Note;
++import android.provider.ContactsContract.CommonDataKinds.Organization;
++import android.provider.ContactsContract.CommonDataKinds.Phone;
++import android.provider.ContactsContract.CommonDataKinds.StructuredName;
++import android.provider.ContactsContract.CommonDataKinds.StructuredPostal;
++import android.provider.ContactsContract.CommonDataKinds.Website;
++import android.provider.ContactsContract.CommonDataKinds.Photo;
++import android.provider.ContactsContract.Contacts;
++import android.provider.ContactsContract.Data;
++import android.util.Log;
++
++import com.transage.privatespace.bean.ContactInfo;
++import com.transage.privatespace.R;
++
++/**
++ * Created by yanjie.xu on 2017/8/24.
++ */
++
++public class ContactUtils {
++    public static final String TAG = "ContactUtil";
++    private static Context context;
++    private List<ContactInfo> mContactInfos = new ArrayList<>();
++
++    public ContactUtil(Context context) {
++        this.context = context;
++    }
++
++    // ContactsContract.Contacts.CONTENT_URI= content://com.android.contacts/contacts;
++    // ContactsContract.Data.CONTENT_URI = content://com.android.contacts/data;
++
++    public void getContacts() {
++        Cursor cur = context.getContentResolver().query(Contacts.CONTENT_URI, null, null, null, null);
++        if (cur.moveToFirst()) {
++            ContactInfo info = new ContactInfo();
++            do {
++                // 获取联系人id号
++                int id = cur.getInt(cur.getColumnIndex(Contacts._ID));
++                // 获取联系人姓名
++                String displayName = cur.getString(cur.getColumnIndex(Contacts.DISPLAY_NAME));
++//                ContactInfo info = new ContactInfo(displayName);// 初始化联系人信息
++                // 查看联系人有多少电话号码, 如果没有返回0
++                int phoneCount = cur.getInt(cur.getColumnIndex(Contacts.HAS_PHONE_NUMBER));
++                //得到联系人头像ID
++                Long photoid = cur.getLong(Contacts.PHOTO_ID);
++
++                //photoid 大于0 表示联系人有头像 如果没有给此人设置头像则给他一个默认的
++                if(photoid > 0 ) {
++                    Uri uri = ContentUris.withAppendedId(ContactsContract.Contacts.CONTENT_URI,id);
++                    InputStream input = ContactsContract.Contacts.openContactPhotoInputStream(context.getContentResolver(), uri);
++//                    contactPhoto = BitmapFactory.decodeStream(input);
++                    info.setPhotoData(input2byte(input));
++                }else {
++//                    contactPhoto = BitmapFactory.decodeResource(getResources(), R.drawable.contact_photo);
++                }
++
++                info.setContactId(id);
++                info.setDisplayName(displayName);
++                info.setHasPhoneNumber(phoneCount);
++
++                getRawContact(id, info);
++
++                mContactInfos.add(info);
++            } while (cur.moveToNext());
++        }
++    }
++
++    public void getRawContact(int contactId, ContactInfo info) {
++        //获取联系人RawContacts数据
++        Cursor rawContactCursor = context.getContentResolver().query(ContactsContract.RawContacts.CONTENT_URI,
++                new String[]{ContactsContract.RawContacts._ID,
++                        ContactsContract.RawContacts.CONTACT_ID,
++                        ContactsContract.RawContacts.ACCOUNT_TYPE,
++                        ContactsContract.RawContacts.ACCOUNT_NAME},
++                ContactsContract.RawContacts.CONTACT_ID + "=?",
++                new String[]{String.valueOf(contactId)},
++                null);
++        Log.i(TAG, "rawContactCursor.getCount() = " + rawContactCursor.getCount() + "contactId = " + contactId);
++        if (rawContactCursor.moveToFirst()) {
++            do {
++                // 遍历所有电话号码
++                int _id = rawContactCursor.getInt(rawContactCursor.getColumnIndex(ContactsContract.RawContacts._ID));
++                int contact_id = rawContactCursor.getInt(rawContactCursor.getColumnIndex(ContactsContract.RawContacts.CONTACT_ID));
++                String account_type = rawContactCursor.getString(rawContactCursor.getColumnIndex(ContactsContract.RawContacts.ACCOUNT_TYPE));
++                String account_name = rawContactCursor.getString(rawContactCursor.getColumnIndex(ContactsContract.RawContacts.ACCOUNT_NAME));
++                ContactInfo.RawContactInfo rawContactInfo = new ContactInfo.RawContactInfo();
++                rawContactInfo.contactId = contact_id;
++                rawContactInfo.rawContactId = _id;
++                rawContactInfo.accountType = account_type;
++                rawContactInfo.accountName = account_name;
++                getContactData(_id, rawContactInfo);
++                Log.i(TAG, "rawContactInfo = " + rawContactInfo.toString());
++                info.addRawContact(rawContactInfo);
++            } while (rawContactCursor.moveToNext());
++            // 设置联系人电话信息
++        }
++    }
++
++    /**
++     * 获取联系人信息，并把数据转换成json数据
++     *
++     * @return
++     * @throws JSONException
++     */
++    public void getContactData(int rawContactId, ContactInfo.RawContactInfo info) {
++        String mimetype = "";
++        String type = "";
++        int oldrid = -1;
++        int contactId = -1;
++
++        String project1[] = new String[]{
++                "mimetype", "raw_contact_id", "data1", "data2", "data3", "data4", "data5", "data6", "data7",
++                "data8", "data9", "data10", "data11", "data12", "data13", "data14", "data15"
++        };
++
++        // 1.查询通讯录所有联系人信息，通过id排序，我们看下android联系人的表就知道，所有的联系人的数据是由RAW_CONTACT_ID来索引开的
++        // 所以，先获取所有的人的RAW_CONTACT_ID
++        Cursor cursor = context.getContentResolver().query(
++                Data.CONTENT_URI,
++                project1,
++                Data.RAW_CONTACT_ID + "=?",
++                new String[]{String.valueOf(rawContactId)},
++                Data.RAW_CONTACT_ID);
++        Log.i(TAG, "ContactUtil:cursor.getCount() = " + cursor.getCount());
++        int numm = 0;
++        while (cursor.moveToNext()) {
++            contactId = cursor.getInt(cursor
++                    .getColumnIndex(Data.RAW_CONTACT_ID));
++            if (oldrid != contactId) {
++                numm++;
++                oldrid = contactId;
++            }
++            ContactInfo.DataInfo dataInfo = new ContactInfo.DataInfo();
++            mimetype = cursor.getString(cursor.getColumnIndex(Data.MIMETYPE)); // 取得mimetype类型,扩展的数据都在这个类型里面
++            type = cursor.getString(cursor.getColumnIndex(Data.DATA2));
++            dataInfo.rawContactId = contactId
++            dataInfo.mimeType = mimetype;
++            dataInfo.type = type;
++            dataInfo.data2 = type;
++            // 1.1,拿到联系人的各种名字
++            if (StructuredName.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.DISPLAY_NAME));
++                dataInfo.data4 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PREFIX));
++                dataInfo.data3 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.FAMILY_NAME));
++                dataInfo.data5 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.MIDDLE_NAME));
++                dataInfo.data2 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.GIVEN_NAME));
++                dataInfo.data6 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.SUFFIX));
++                dataInfo.data9 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PHONETIC_FAMILY_NAME));
++                dataInfo.data8 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PHONETIC_MIDDLE_NAME));
++                dataInfo.data7 = cursor.getString(cursor
++                        .getColumnIndex(StructuredName.PHONETIC_GIVEN_NAME));
++            }
++            // 1.2 获取各种电话信息
++            if (Phone.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Phone.NUMBER));
++            }
++            //查找Email信息
++            if (Email.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Email.ADDRESS));
++            }
++            // 查找event地址
++            if (Event.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出时间类型
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Event.START_DATE));
++            }
++            // 获取即时通讯消息
++            if (Im.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出即时消息类型
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Im.DATA));
++            }
++            // 获取备注信息
++            if (Note.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Note.NOTE));
++            }
++            // 获取昵称信息
++            if (Nickname.CONTENT_ITEM_TYPE.equals(mimetype)) {
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Nickname.NAME));
++            }
++            // 获取组织信息
++            if (Organization.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出组织类型
++                dataInfo.data1 = cursor.getString(cursor
++                        .getColumnIndex(Organization.COMPANY));
++                dataInfo.data4 = cursor.getString(cursor
++                        .getColumnIndex(Organization.TITLE));
++                dataInfo.data5 = cursor.getString(cursor
++                        .getColumnIndex(Organization.DEPARTMENT));
++            }
++            // 获取网站信息
++            if (Website.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出组织类型
++                dataInfo.data1 = cursor.getString(cursor.getColumnIndex(Website.URL));
++            }
++            // 查找通讯地址
++            if (StructuredPostal.CONTENT_ITEM_TYPE.equals(mimetype)) { // 取出邮件类型
++                dataInfo.data4 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.STREET));
++                dataInfo.data7 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.CITY));
++                dataInfo.data5 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.POBOX));
++                dataInfo.data6 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.NEIGHBORHOOD));
++                dataInfo.data8 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.REGION));
++                dataInfo.data9 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.POSTCODE));
++                dataInfo.data10 = cursor.getString(cursor
++                        .getColumnIndex(StructuredPostal.COUNTRY));
++            }
++            if (Photo.CONTENT_ITEM_TYPE.equals(mimetype)){
++                dataInfo.data14 = cursor.getString(cursor.getColumnIndex(Photo.PHOTO_FILE_ID));
++                dataInfo.data15 = cursor.getString(cursor.getColumnIndex(Photo.PHOTO));
++            }
++            Log.i(TAG, "dataInfo = " + dataInfo.toString());
++            info.dataInfos.add(dataInfo);
++        }
++        cursor.close();
++//        Log.i(TAG, contactData.toString());
++    }
++
++    /**
++     * inputStream转换为byte数组
++     * @param inStream
++     * @return
++     */
++    public static final byte[] input2byte(InputStream inStream){
++        ByteArrayOutputStream swapStream = new ByteArrayOutputStream();
++        byte[] buff = new byte[512];
++        int rc = 0;
++        try {
++            while ((rc = inStream.read(buff, 0, 512)) > 0) {
++                swapStream.write(buff, 0, rc);
++            }
++        } catch (IOException e) {
++            e.printStackTrace();
++        }
++        byte[] in2b = swapStream.toByteArray();
++        return in2b;
++    }
++
++    /**
++     * 根据type值获取标签字符串
++     *
++     * @param type
++     * @return
++     */
++    public static String getLabelNameByType(int type) {
++        //通过type获取typelabel字符串
++        int typeLabelResource = Phone.getTypeLabelResource(type);
++        return context.getResources().getString(typeLabelResource)
++    }
++}
diff --git "a/privatespace_submit/xuyanjie/34\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256(\344\270\212\346\257\224\346\212\245\351\224\231\344\277\256\346\224\271)/yanjie11.diff" "b/privatespace_submit/xuyanjie/34\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256(\344\270\212\346\257\224\346\212\245\351\224\231\344\277\256\346\224\271)/yanjie11.diff"
new file mode 100755
index 0000000..1d4743a
--- /dev/null
+++ "b/privatespace_submit/xuyanjie/34\351\207\215\345\206\231\350\201\224\347\263\273\344\272\272\345\256\236\344\275\223\347\261\273;\350\216\267\345\217\226\350\201\224\347\263\273\344\272\272\346\211\200\346\234\211\344\277\241\346\201\257\346\225\260\346\215\256(\344\270\212\346\257\224\346\212\245\351\224\231\344\277\256\346\224\271)/yanjie11.diff"
@@ -0,0 +1,39 @@
+diff --git a/src/com/transage/privatespace/utils/ContactUtils.java b/src/com/transage/privatespace/utils/ContactUtils.java
+index a99b480..262dfbe 100755
+--- a/src/com/transage/privatespace/utils/ContactUtils.java
++++ b/src/com/transage/privatespace/utils/ContactUtils.java
+@@ -41,7 +41,7 @@ public class ContactUtils {
+     private static Context context;
+     private List<ContactInfo> mContactInfos = new ArrayList<>();
+ 
+-    public ContactUtil(Context context) {
++    public ContactUtils(Context context) {
+         this.context = context;
+     }
+ 
+@@ -61,7 +61,7 @@ public class ContactUtils {
+                 // 查看联系人有多少电话号码, 如果没有返回0
+                 int phoneCount = cur.getInt(cur.getColumnIndex(Contacts.HAS_PHONE_NUMBER));
+                 //得到联系人头像ID
+-                Long photoid = cur.getLong(Contacts.PHOTO_ID);
++                int photoid = cur.getInt(cur.getColumnIndex(Contacts.PHOTO_ID));
+ 
+                 //photoid 大于0 表示联系人有头像 如果没有给此人设置头像则给他一个默认的
+                 if(photoid > 0 ) {
+@@ -152,7 +152,7 @@ public class ContactUtils {
+             ContactInfo.DataInfo dataInfo = new ContactInfo.DataInfo();
+             mimetype = cursor.getString(cursor.getColumnIndex(Data.MIMETYPE)); // 取得mimetype类型,扩展的数据都在这个类型里面
+             type = cursor.getString(cursor.getColumnIndex(Data.DATA2));
+-            dataInfo.rawContactId = contactId
++            dataInfo.rawContactId = contactId;
+             dataInfo.mimeType = mimetype;
+             dataInfo.type = type;
+             dataInfo.data2 = type;
+@@ -271,6 +271,6 @@ public class ContactUtils {
+     public static String getLabelNameByType(int type) {
+         //通过type获取typelabel字符串
+         int typeLabelResource = Phone.getTypeLabelResource(type);
+-        return context.getResources().getString(typeLabelResource)
++        return context.getResources().getString(typeLabelResource);
+     }
+ }
diff --git a/res/layout/item_sms.xml b/res/layout/item_sms.xml
index 696f400..f9f0c84 100755
--- a/res/layout/item_sms.xml
+++ b/res/layout/item_sms.xml
@@ -8,14 +8,28 @@
     <TextView
         android:id="@+id/textView1"
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content" />
-
+        android:layout_height="wrap_content"
+        android:textColor="@color/black"
+        android:textSize="18sp"/>
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center_vertical">
     <TextView
         android:id="@+id/textView2"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginTop="10dp"
+        android:layout_alignParentLeft="true"
         android:ellipsize="end"
         android:singleLine="true" />
-
+    <TextView
+        android:id="@+id/textView3"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="10dp"
+        android:layout_alignParentRight="true"
+        android:ellipsize="end"
+        android:singleLine="true" />
+    </RelativeLayout>
 </LinearLayout>
\ No newline at end of file
diff --git a/src/com/transage/privatespace/activity/Login.java b/src/com/transage/privatespace/activity/Login.java
index f85253e..a393d3f 100755
--- a/src/com/transage/privatespace/activity/Login.java
+++ b/src/com/transage/privatespace/activity/Login.java
@@ -95,6 +95,9 @@ public class Login extends BaseActivity implements View.OnClickListener, Compoun
             }
             btFingerprint.setVisibility(View.VISIBLE);
             tip_finger_print_login.setVisibility(View.VISIBLE);
+        }else if (isFirstRun){
+            //app首次运行,默认打开指纹登录开关
+            Login.editor.putBoolean("enterByPrivateFingerprint",true).commit();
         }
     }
 
diff --git a/src/com/transage/privatespace/activity/PrivateSms.java b/src/com/transage/privatespace/activity/PrivateSms.java
index c33b5cb..1ad1a76 100755
--- a/src/com/transage/privatespace/activity/PrivateSms.java
+++ b/src/com/transage/privatespace/activity/PrivateSms.java
@@ -38,6 +38,7 @@ public class PrivateSms extends BaseActivity {
 
 
     }
+
     @Override
     public void onResume() {
         super.onResume();
diff --git a/src/com/transage/privatespace/adapter/SmsListViewAdapter.java b/src/com/transage/privatespace/adapter/SmsListViewAdapter.java
index cfd7d2f..5925c4e 100755
--- a/src/com/transage/privatespace/adapter/SmsListViewAdapter.java
+++ b/src/com/transage/privatespace/adapter/SmsListViewAdapter.java
@@ -9,8 +9,12 @@ import android.widget.TextView;
 
 import com.transage.privatespace.R;
 import com.transage.privatespace.bean.SmsInfo;
+import com.transage.privatespace.vcard.util.Log;
 
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.Date;
+import java.util.Locale;
 
 /**
  * Created by dongrp on 2016/9/12.
@@ -47,17 +51,28 @@ public class SmsListViewAdapter extends BaseAdapter {
             viewHolder = new ViewHolder();
             viewHolder.textView1 = (TextView) convertView.findViewById(R.id.textView1);
             viewHolder.textView2 = (TextView) convertView.findViewById(R.id.textView2);
+            viewHolder.textView3 = (TextView) convertView.findViewById(R.id.textView3);
             convertView.setTag(viewHolder);
         } else {
             viewHolder = (ViewHolder) convertView.getTag();
         }
         //数据适配
-        viewHolder.textView1.setText(listSmslist.get(position).getAddress());
+        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-dd HH:mm", Locale.getDefault());
+        String name = listSmslist.get(position).getPerson();
+        String date = simpleDateFormat.format(new Date(listSmslist.get(position).getDate()));// 收发时间
+        Log.e("wangmeng","-------name--------"+name);
+        Log.e("wangmeng","-------date--------"+date);
+        if(name.isEmpty()){
+            viewHolder.textView1.setText(listSmslist.get(position).getAddress());
+        }else{
+            viewHolder.textView1.setText(name);
+        }
         viewHolder.textView2.setText(listSmslist.get(position).getBody());
+        viewHolder.textView3.setText(date);
         return convertView;
     }
 
     class ViewHolder {
-        TextView textView1, textView2;
+        TextView textView1, textView2, textView3;
     }
 }
diff --git a/src/com/transage/privatespace/database/DatabaseAdapter.java b/src/com/transage/privatespace/database/DatabaseAdapter.java
index 2044a2c..1df9a45 100755
--- a/src/com/transage/privatespace/database/DatabaseAdapter.java
+++ b/src/com/transage/privatespace/database/DatabaseAdapter.java
@@ -300,7 +300,7 @@ public class DatabaseAdapter {
         return list;
 }
 //add get first sms by wangmeng 20170902
-    public List<SmsInfo> getFirstSms() {
+    public List<SmsInfo> getLastSms(String phone) {
         String sql = "SELECT " +
                 PsDatabaseHelper.SmsColumns._ID + "," +
                 PsDatabaseHelper.SmsColumns.THREAD_ID + "," +
@@ -310,10 +310,11 @@ public class DatabaseAdapter {
                 PsDatabaseHelper.SmsColumns.SMS_PERSON + "," +
                 PsDatabaseHelper.SmsColumns.SMS_TYPE + "," +
                 PsDatabaseHelper.SmsColumns.SMS_READ +
-                " FROM " + PsDatabaseHelper.Tables.SMS;
+                " FROM " + PsDatabaseHelper.Tables.SMS +
+                " WHERE " + PsDatabaseHelper.SmsColumns.SMS_ADDRESS + "=?" ;
         Log.i(TAG, "sql = " + sql);
         List<SmsInfo> list = new ArrayList<>();
-        Cursor cursor = query(sql,null);
+        Cursor cursor = query(sql,new String[]{phone});
         try {
             if(cursor.moveToLast()) {
                 SmsInfo sms = new SmsInfo();
diff --git a/src/com/transage/privatespace/fragment/FG_PrivateSms.java b/src/com/transage/privatespace/fragment/FG_PrivateSms.java
index a9cf965..75464c1 100755
--- a/src/com/transage/privatespace/fragment/FG_PrivateSms.java
+++ b/src/com/transage/privatespace/fragment/FG_PrivateSms.java
@@ -18,11 +18,13 @@ import android.widget.ListView;
 import com.transage.privatespace.R;
 import com.transage.privatespace.activity.PrivateSms;
 import com.transage.privatespace.adapter.SmsListViewAdapter;
+import com.transage.privatespace.bean.People;
 import com.transage.privatespace.bean.SmsInfo;
 import com.transage.privatespace.database.DatabaseAdapter;
 import com.transage.privatespace.loader.PrivateSpaceLoader;
 
 import java.util.ArrayList;
+import java.util.List;
 
 /**
  * Created by dongrp on 2016/9/1.
@@ -87,41 +89,13 @@ public class FG_PrivateSms extends BaseFragment {
      */
     public void initData() {
         listSmslist.clear();
-//        listSmslist.addAll(new DatabaseAdapter(getActivity()).getSms());
-        listSmslist.addAll(new DatabaseAdapter(getActivity()).getFirstSms());
-//        // 1.先获取到所有私密联系人
-//        ArrayList<People> listPrivatePeople = new ArrayList<People>();
-//        listPrivatePeople.addAll(new DatabaseAdapter(getContext()).getContacts());
+        ArrayList<People> listPrivatePeople = new ArrayList<>();
+        listPrivatePeople.addAll(new DatabaseAdapter(getActivity()).getContacts());
+        for(int i = 0;i<listPrivatePeople.size();i++){
+//            Log.e("wangmeng","-----SmsNumberlist-----"+listPrivatePeople.get(i).toString());
+            listSmslist.addAll(new DatabaseAdapter(getActivity()).getLastSms(listPrivatePeople.get(i).getPhoneNum()));
+        }
 //
-//        // 2.获取私密联系人的短信记录
-//        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM-dd HH:mm", Locale.getDefault());
-//        String[] projection = new String[]{"_id", "address", "person", "body", "date", "type"};
-//        for (int i = 0; i < listPrivatePeople.size(); i++) {
-//            String phone = listPrivatePeople.get(i).getPhoneNum();
-//            if (phone != null){
-//                Cursor cursor2 = getActivity().getContentResolver().query(Uri.parse("content://sms/"), projection,
-//                        "address=?", new String[]{phone}, "date desc");
-//                if (cursor2 != null && cursor2.moveToFirst()) {
-//                    ArrayList<Sms> listSms = new ArrayList<Sms>();
-//                    do {
-//                        String address = cursor2.getString(cursor2.getColumnIndex("address"));// 手机号码
-//                        String body = cursor2.getString(cursor2.getColumnIndex("body"));// 短信内容
-//                        String date = simpleDateFormat.format(new Date(cursor2.getLong(cursor2.getColumnIndex("date"))));// 收发时间
-//                        int type = cursor2.getInt(cursor2.getColumnIndex("type"));// 收发类型
-//                        // 添加一条短息数据到listSms
-//                        Sms sms = new Sms();
-//                        sms.setAddress(address);
-//                        sms.setPerson(listPrivatePeople.get(i).getDisplayName());
-//                        sms.setBody(body);
-//                        sms.setDate(date);
-//                        sms.setType(type);
-//                        listSms.add(sms);
-//                    } while (cursor2.moveToNext());
-//                    listSmslist.add(listSms);
-//                    cursor2.close();
-//                }
-//            }
-//        }
     }
 
     @Override
