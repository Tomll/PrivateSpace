diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 86c7cee..8f80527 100755
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -123,7 +123,7 @@
         <provider
             android:name=".provider.PrivateProvider"
             android:exported="true"
-            android:authorities="com.transage.privatespace.provider.PrivateProvider"/>
+            android:authorities="com.transage.privatespace"/>
     </application>
 
 </manifest>
\ No newline at end of file
diff --git a/src/com/transage/privatespace/provider/PrivateProvider.java b/src/com/transage/privatespace/provider/PrivateProvider.java
index 672f60d..5c03886 100755
--- a/src/com/transage/privatespace/provider/PrivateProvider.java
+++ b/src/com/transage/privatespace/provider/PrivateProvider.java
@@ -2,6 +2,7 @@ package com.transage.privatespace.provider;
 
 import android.content.ContentProvider;
 import android.content.ContentValues;
+import android.content.UriMatcher;
 import android.database.Cursor;
 import android.net.Uri;
 import android.util.Log;
@@ -17,21 +18,57 @@ import com.transage.privatespace.utils.ImportExportUtils;
 
 public class PrivateProvider extends ContentProvider{
     private static final String TAG = "PrivateProvider";
+    //这里的AUTHORITY就是我们在AndroidManifest.xml中配置的authorities
+    private static final String AUTHORITY = "com.transage.privatespace";
+    //匹配成功后的匹配码
+    private static final int MATCH_PHONE = 100;
+    private static final int MATCH_SMS = 101;
+    private static final int MATCH_CALL = 102;
+    private static UriMatcher uriMatcher;
+
+    //在静态代码块中添加要匹配的 Uri
+    static {
+        //匹配不成功返回NO_MATCH(-1)
+        uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
+        /**
+         * uriMatcher.addURI(authority, path, code); 其中
+         * authority：主机名(用于唯一标示一个ContentProvider,这个需要和清单文件中的authorities属性相同)
+         * path:路径路径(可以用来表示我们要操作的数据，路径的构建应根据业务而定)
+         * code:返回值(用于匹配uri的时候，作为匹配成功的返回值)
+         */
+        uriMatcher.addURI(AUTHORITY, "phone", MATCH_PHONE);// 匹配电话
+        uriMatcher.addURI(AUTHORITY, "sms", MATCH_SMS);// 匹配短信
+        uriMatcher.addURI(AUTHORITY, "call", MATCH_CALL);// 匹配通话记录
+    }
+
     DatabaseAdapter mDbAdapter;
 
     @Override
     public boolean onCreate() {
         if (mDbAdapter == null){
             mDbAdapter = new DatabaseAdapter(getContext());
-            android.util.Log.i(TAG, "onCreate");
+            Log.i(TAG, "onCreate");
         }
         return false;
     }
 
     @Override
     public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
-        android.util.Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
-        return mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
+        Log.i(TAG, "query uri = " + uri.toString() + "selectionArgs" + selectionArgs[0]);
+        Cursor cursor = null;
+        switch (uriMatcher.match(uri)) {
+            case MATCH_PHONE:
+                //查询手机号码
+                cursor = mDbAdapter.getContactCursor(selection, selectionArgs, ImportExportUtils.isVcf(getContext()));
+                break;
+            case MATCH_SMS:
+                //查询短信
+                break;
+            case MATCH_CALL:
+                //查询通话记录
+                break;
+        }
+        return cursor;
     }
 
     @Override
@@ -41,8 +78,19 @@ public class PrivateProvider extends ContentProvider{
 
     @Override
     public Uri insert(Uri uri, ContentValues contentValues) {
-        android.util.Log.i(TAG, "insert contentValues = " + contentValues.toString());
-        mDbAdapter.insertCallLog(contentValues);
+        Log.i(TAG, "insert contentValues = " + contentValues.toString());
+        switch (uriMatcher.match(uri)) {
+            case MATCH_PHONE:
+                //insert手机号码
+                break;
+            case MATCH_SMS:
+                //insert短信
+                break;
+            case MATCH_CALL:
+                //insert通话记录
+                mDbAdapter.insertCallLog(contentValues);
+                break;
+        }
         getContext().getContentResolver().notifyChange(uri, null);
         return uri;
     }
